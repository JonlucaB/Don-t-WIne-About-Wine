{"ast":null,"code":"var internals = require('../internals'),\n    VerletSpring2D = require('./VerletSpring2D');\n/**\n* Creates a pullback spring (default restlength=0.5) between 2 particles and\n* locks the first one given at the current position. The spring is only\n* enforced if the current length of the spring exceeds the rest length. This\n* behaviour is the opposite to the {@link VerletMinDistanceSpring2D}.\n*/\n\n\nvar PullBackString2D = function (a, b, strength) {\n  VerletSpring2D.apply(this, [a, b, 0, strength]);\n  a.lock();\n  this.setRestLength(0.5);\n};\n\ninternals.extend(PullBackString2D, VerletSpring2D);\n\nPullBackString2D.prototype.update = function (applyConstraints) {\n  if (this.b.distanceToSquared(this.a) > this.restLengthSquared) {\n    this.parent.update.call(this, applyConstraints);\n  }\n};\n\nmodule.exports = PullBackString2D;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/physics2d/PullBackString2D.js"],"names":["internals","require","VerletSpring2D","PullBackString2D","a","b","strength","apply","lock","setRestLength","extend","prototype","update","applyConstraints","distanceToSquared","restLengthSquared","parent","call","module","exports"],"mappings":"AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAAA,IACCC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CADzB;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEC,IAAIE,gBAAgB,GAAG,UAASC,CAAT,EAAWC,CAAX,EAAaC,QAAb,EAAsB;AAC7CJ,EAAAA,cAAc,CAACK,KAAf,CAAqB,IAArB,EAA0B,CAACH,CAAD,EAAGC,CAAH,EAAK,CAAL,EAAOC,QAAP,CAA1B;AACAF,EAAAA,CAAC,CAACI,IAAF;AACA,OAAKC,aAAL,CAAmB,GAAnB;AACC,CAJD;;AAKAT,SAAS,CAACU,MAAV,CAAiBP,gBAAjB,EAAkCD,cAAlC;;AAEAC,gBAAgB,CAACQ,SAAjB,CAA2BC,MAA3B,GAAoC,UAASC,gBAAT,EAA0B;AAC9D,MAAG,KAAKR,CAAL,CAAOS,iBAAP,CAAyB,KAAKV,CAA9B,IAAmC,KAAKW,iBAA3C,EAA6D;AAC5D,SAAKC,MAAL,CAAYJ,MAAZ,CAAmBK,IAAnB,CAAwB,IAAxB,EAA6BJ,gBAA7B;AACA;AACA,CAJD;;AAMAK,MAAM,CAACC,OAAP,GAAiBhB,gBAAjB","sourcesContent":["\n\nvar internals = require('../internals'),\n\tVerletSpring2D = require('./VerletSpring2D');\n\n/**\n* Creates a pullback spring (default restlength=0.5) between 2 particles and\n* locks the first one given at the current position. The spring is only\n* enforced if the current length of the spring exceeds the rest length. This\n* behaviour is the opposite to the {@link VerletMinDistanceSpring2D}.\n*/\n \n var PullBackString2D = function(a,b,strength){\n\tVerletSpring2D.apply(this,[a,b,0,strength]);\n\ta.lock();\n\tthis.setRestLength(0.5);\n };\n internals.extend(PullBackString2D,VerletSpring2D);\n\n PullBackString2D.prototype.update = function(applyConstraints){\n\tif(this.b.distanceToSquared(this.a) > this.restLengthSquared){\n\t\tthis.parent.update.call(this,applyConstraints);\n\t}\n };\n\n module.exports = PullBackString2D;\n\n"]},"metadata":{},"sourceType":"script"}