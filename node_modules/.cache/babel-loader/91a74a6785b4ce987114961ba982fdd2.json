{"ast":null,"code":"var IsectData3D = require('./IsectData3D'),\n    mathUtils = require('../math/mathUtils'),\n    Ray3DIntersector;\n/**\n * @class\n * @member toxi\n */\n\n\nRay3DIntersector = function (ray) {\n  this.ray = ray;\n  this.isec = new IsectData3D();\n};\n\nRay3DIntersector.prototype = {\n  getIntersectionData: function () {\n    return this.isec;\n  },\n  intersectsRay: function (other) {\n    var n = this.ray.dir.cross(other.dir);\n    var sr = this.ray.sub(other);\n    var absX = mathUtils.abs(n.x);\n    var absY = mathUtils.abs(n.y);\n    var absZ = mathUtils.abs(n.z);\n    var t;\n\n    if (absZ > absX && absZ > absY) {\n      t = (sr.x * other.dir.y - sr.y * other.dir.x) / n.z;\n    } else if (absX > absY) {\n      t = (sr.y * other.dir.z - sr.z * other.dir.y) / n.x;\n    } else {\n      t = (sr.z * other.dir.x - sr.x * other.dir.z) / n.y;\n    }\n\n    this.isec.isIntersection = t <= mathUtils.EPS && !isFinite(t);\n    this.isec.pos = this.ray.getPointAtDistance(-t);\n    return this.isec.isIntersection;\n  }\n};\nmodule.exports = Ray3DIntersector;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/geom/Ray3DIntersector.js"],"names":["IsectData3D","require","mathUtils","Ray3DIntersector","ray","isec","prototype","getIntersectionData","intersectsRay","other","n","dir","cross","sr","sub","absX","abs","x","absY","y","absZ","z","t","isIntersection","EPS","isFinite","pos","getPointAtDistance","module","exports"],"mappings":"AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;AAAA,IACCC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CADpB;AAAA,IAEIE,gBAFJ;AAIA;AACA;AACA;AACA;;;AACAA,gBAAgB,GAAG,UAASC,GAAT,EAAa;AAC/B,OAAKA,GAAL,GAAWA,GAAX;AACA,OAAKC,IAAL,GAAY,IAAIL,WAAJ,EAAZ;AACA,CAHD;;AAKAG,gBAAgB,CAACG,SAAjB,GAA6B;AAC5BC,EAAAA,mBAAmB,EAAE,YAAU;AAC9B,WAAO,KAAKF,IAAZ;AACA,GAH2B;AAK5BG,EAAAA,aAAa,EAAE,UAASC,KAAT,EAAe;AAC7B,QAAIC,CAAC,GAAG,KAAKN,GAAL,CAASO,GAAT,CAAaC,KAAb,CAAmBH,KAAK,CAACE,GAAzB,CAAR;AACA,QAAIE,EAAE,GAAG,KAAKT,GAAL,CAASU,GAAT,CAAaL,KAAb,CAAT;AACA,QAAIM,IAAI,GAAGb,SAAS,CAACc,GAAV,CAAcN,CAAC,CAACO,CAAhB,CAAX;AACA,QAAIC,IAAI,GAAGhB,SAAS,CAACc,GAAV,CAAcN,CAAC,CAACS,CAAhB,CAAX;AACA,QAAIC,IAAI,GAAGlB,SAAS,CAACc,GAAV,CAAcN,CAAC,CAACW,CAAhB,CAAX;AACA,QAAIC,CAAJ;;AACA,QAAGF,IAAI,GAAGL,IAAP,IAAeK,IAAI,GAAGF,IAAzB,EAA8B;AAC7BI,MAAAA,CAAC,GAAG,CAACT,EAAE,CAACI,CAAH,GAAOR,KAAK,CAACE,GAAN,CAAUQ,CAAjB,GAAqBN,EAAE,CAACM,CAAH,GAAOV,KAAK,CAACE,GAAN,CAAUM,CAAvC,IAA4CP,CAAC,CAACW,CAAlD;AACA,KAFD,MAEO,IAAGN,IAAI,GAAGG,IAAV,EAAe;AACrBI,MAAAA,CAAC,GAAG,CAACT,EAAE,CAACM,CAAH,GAAOV,KAAK,CAACE,GAAN,CAAUU,CAAjB,GAAqBR,EAAE,CAACQ,CAAH,GAAOZ,KAAK,CAACE,GAAN,CAAUQ,CAAvC,IAA4CT,CAAC,CAACO,CAAlD;AACA,KAFM,MAEA;AACNK,MAAAA,CAAC,GAAG,CAACT,EAAE,CAACQ,CAAH,GAAOZ,KAAK,CAACE,GAAN,CAAUM,CAAjB,GAAqBJ,EAAE,CAACI,CAAH,GAAOR,KAAK,CAACE,GAAN,CAAUU,CAAvC,IAA4CX,CAAC,CAACS,CAAlD;AACA;;AACD,SAAKd,IAAL,CAAUkB,cAAV,GAA4BD,CAAC,IAAIpB,SAAS,CAACsB,GAAf,IAAsB,CAACC,QAAQ,CAACH,CAAD,CAA3D;AACA,SAAKjB,IAAL,CAAUqB,GAAV,GAAgB,KAAKtB,GAAL,CAASuB,kBAAT,CAA4B,CAACL,CAA7B,CAAhB;AACA,WAAO,KAAKjB,IAAL,CAAUkB,cAAjB;AACA;AAtB2B,CAA7B;AAyBAK,MAAM,CAACC,OAAP,GAAiB1B,gBAAjB","sourcesContent":["\n\nvar IsectData3D = require('./IsectData3D'),\n\tmathUtils = require('../math/mathUtils'),\n    Ray3DIntersector;\n\n/**\n * @class\n * @member toxi\n */\nRay3DIntersector = function(ray){\n\tthis.ray = ray;\n\tthis.isec = new IsectData3D();\n};\n\nRay3DIntersector.prototype = {\n\tgetIntersectionData: function(){\n\t\treturn this.isec;\n\t},\n\n\tintersectsRay: function(other){\n\t\tvar n = this.ray.dir.cross(other.dir);\n\t\tvar sr = this.ray.sub(other);\n\t\tvar absX = mathUtils.abs(n.x);\n\t\tvar absY = mathUtils.abs(n.y);\n\t\tvar absZ = mathUtils.abs(n.z);\n\t\tvar t;\n\t\tif(absZ > absX && absZ > absY){\n\t\t\tt = (sr.x * other.dir.y - sr.y * other.dir.x) / n.z;\n\t\t} else if(absX > absY){\n\t\t\tt = (sr.y * other.dir.z - sr.z * other.dir.y) / n.x;\n\t\t} else {\n\t\t\tt = (sr.z * other.dir.x - sr.x * other.dir.z) / n.y;\n\t\t}\n\t\tthis.isec.isIntersection = (t <= mathUtils.EPS && !isFinite(t));\n\t\tthis.isec.pos = this.ray.getPointAtDistance(-t);\n\t\treturn this.isec.isIntersection;\n\t}\n};\n\nmodule.exports = Ray3DIntersector;\n\n"]},"metadata":{},"sourceType":"script"}