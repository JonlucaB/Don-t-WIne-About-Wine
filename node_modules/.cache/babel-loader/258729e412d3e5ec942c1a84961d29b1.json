{"ast":null,"code":"var Vec3D = require('./Vec3D');\n/**\n * @class\n * @member toxi\n */\n\n\nvar IsectData3D = function (isec) {\n  if (isec !== undefined) {\n    this.isIntersection = isec.isIntersection;\n    this.dist = isec.dist;\n    this.pos = isec.pos.copy();\n    this.dir = isec.dir.copy();\n    this.normal = isec.normal.copy();\n  } else {\n    this.clear();\n  }\n};\n\nIsectData3D.prototype = {\n  clear: function () {\n    this.isIntersection = false;\n    this.dist = 0;\n    this.pos = new Vec3D();\n    this.dir = new Vec3D();\n    this.normal = new Vec3D();\n  },\n  toString: function () {\n    var s = \"isec: \" + this.isIntersection;\n\n    if (this.isIntersection) {\n      s += \" at:\" + this.pos + \" dist:\" + this.dist + \" normal:\" + this.normal;\n    }\n\n    return s;\n  }\n};\nmodule.exports = IsectData3D;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/geom/IsectData3D.js"],"names":["Vec3D","require","IsectData3D","isec","undefined","isIntersection","dist","pos","copy","dir","normal","clear","prototype","toString","s","module","exports"],"mappings":"AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;AACA;;;AACA,IAAIC,WAAW,GAAG,UAASC,IAAT,EAAc;AAC/B,MAAGA,IAAI,KAAKC,SAAZ,EAAsB;AACrB,SAAKC,cAAL,GAAsBF,IAAI,CAACE,cAA3B;AACA,SAAKC,IAAL,GAAYH,IAAI,CAACG,IAAjB;AACA,SAAKC,GAAL,GAAWJ,IAAI,CAACI,GAAL,CAASC,IAAT,EAAX;AACA,SAAKC,GAAL,GAAWN,IAAI,CAACM,GAAL,CAASD,IAAT,EAAX;AACA,SAAKE,MAAL,GAAcP,IAAI,CAACO,MAAL,CAAYF,IAAZ,EAAd;AACA,GAND,MAOK;AACJ,SAAKG,KAAL;AACA;AACD,CAXD;;AAaAT,WAAW,CAACU,SAAZ,GAAwB;AACvBD,EAAAA,KAAK,EAAE,YAAU;AAChB,SAAKN,cAAL,GAAsB,KAAtB;AACA,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,GAAL,GAAW,IAAIP,KAAJ,EAAX;AACA,SAAKS,GAAL,GAAW,IAAIT,KAAJ,EAAX;AACA,SAAKU,MAAL,GAAc,IAAIV,KAAJ,EAAd;AACA,GAPsB;AASvBa,EAAAA,QAAQ,EAAE,YAAU;AACnB,QAAIC,CAAC,GAAG,WAAS,KAAKT,cAAtB;;AACA,QAAG,KAAKA,cAAR,EAAuB;AACtBS,MAAAA,CAAC,IAAI,SAAO,KAAKP,GAAZ,GAAiB,QAAjB,GAA0B,KAAKD,IAA/B,GAAoC,UAApC,GAA+C,KAAKI,MAAzD;AACA;;AACD,WAAOI,CAAP;AACA;AAfsB,CAAxB;AAkBAC,MAAM,CAACC,OAAP,GAAiBd,WAAjB","sourcesContent":["\n\nvar Vec3D = require('./Vec3D');\n\n/**\n * @class\n * @member toxi\n */\nvar\tIsectData3D = function(isec){\n\tif(isec !== undefined){\n\t\tthis.isIntersection = isec.isIntersection;\n\t\tthis.dist = isec.dist;\n\t\tthis.pos = isec.pos.copy();\n\t\tthis.dir = isec.dir.copy();\n\t\tthis.normal = isec.normal.copy();\n\t}\n\telse {\n\t\tthis.clear();\n\t}\n};\n\nIsectData3D.prototype = {\n\tclear: function(){\n\t\tthis.isIntersection = false;\n\t\tthis.dist = 0;\n\t\tthis.pos = new Vec3D();\n\t\tthis.dir = new Vec3D();\n\t\tthis.normal = new Vec3D();\n\t},\n\t\n\ttoString: function(){\n\t\tvar s = \"isec: \"+this.isIntersection;\n\t\tif(this.isIntersection){\n\t\t\ts += \" at:\"+this.pos+ \" dist:\"+this.dist+\" normal:\"+this.normal;\n\t\t}\n\t\treturn s;\n\t}\n};\n\nmodule.exports = IsectData3D;\n\n"]},"metadata":{},"sourceType":"script"}