{"ast":null,"code":"var numberComparator = require('../internals').numberComparator,\n    bind = require('../internals').bind; //this will attach proper exported objects for each accessor\n\n\nfunction make(type, setters) {\n  var name = type + 'Accessor',\n      arry = type.toLowerCase(); //make HSV hsv etc\n\n  exports[name] = function (comp) {\n    this.component = comp; //compare() could easily be used in incorrect scope, bind it\n\n    this.compare = bind(this.compare, this);\n  };\n\n  exports[name].prototype.compare = function (a, b) {\n    var ca = a[arry][this.component],\n        cb = b[arry][this.component];\n    return numberComparator(ca, cb);\n  };\n\n  exports[name].prototype.getComponentValueFor = function (col) {\n    return col[arry][this.component];\n  };\n\n  exports[name].prototype.setComponentValueFor = function (col, val) {\n    col['set' + setters[this.component]](val);\n  };\n}\n\nmake('RGB', ['Red', 'Green', 'Blue']);\nmake('HSV', ['Hue', 'Saturation', 'Brightness']);\nmake('CMYK', ['Cyan', 'Magenta', 'Yellow', 'Black']);\n\nvar LuminanceAccessor = function () {};\n\nLuminanceAccessor.prototype.compare = function (a, b) {\n  return numberComparator(a.luminance(), b.luminance());\n};\n\nLuminanceAccessor.prototype.getComponentValueFor = function (col) {\n  return col.luminance();\n};\n\nLuminanceAccessor.prototype.setComponentValueFor = function () {};\n\nvar AlphaAccessor = function () {};\n\nAlphaAccessor.prototype.compare = function (a, b) {\n  return numberComparator(a.alpha(), b.alpha());\n};\n\nAlphaAccessor.prototype.getComponentValueFor = function (col) {\n  return col.alpha();\n};\n\nAlphaAccessor.prototype.setComponentValueFor = function (col, value) {\n  col.setAlpha(value);\n};\n\nexports.LuminanceAccessor = LuminanceAccessor;\nexports.AlphaAccessor = AlphaAccessor;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/color/accessors.js"],"names":["numberComparator","require","bind","make","type","setters","name","arry","toLowerCase","exports","comp","component","compare","prototype","a","b","ca","cb","getComponentValueFor","col","setComponentValueFor","val","LuminanceAccessor","luminance","AlphaAccessor","alpha","value","setAlpha"],"mappings":"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","sourcesContent":["\n\n\tvar numberComparator = require('../internals').numberComparator,\n\t\tbind = require('../internals').bind;\n\n\t//this will attach proper exported objects for each accessor\n\tfunction make( type, setters ){\n\t\tvar name = type + 'Accessor', arry = type.toLowerCase(); //make HSV hsv etc\n\t\texports[name] = function( comp ){\n\t\t\tthis.component = comp;\n\t\t\t//compare() could easily be used in incorrect scope, bind it\n\t\t\tthis.compare = bind( this.compare, this );\n\t\t};\n\n\t\texports[name].prototype.compare = function( a, b ){\n\t\t\tvar ca = a[arry][this.component],\n\t\t\t\tcb = b[arry][this.component];\n\t\t\treturn numberComparator( ca, cb );\n\t\t};\n\n\t\texports[name].prototype.getComponentValueFor = function( col ){\n\t\t\treturn col[arry][this.component];\n\t\t};\n\n\t\texports[name].prototype.setComponentValueFor = function( col, val ){\n\t\t\tcol[ 'set'+setters[this.component] ]( val );\n\t\t};\n\n\t}\n\n\tmake('RGB',['Red','Green','Blue']);\n\tmake('HSV',['Hue','Saturation','Brightness']);\n\tmake('CMYK',['Cyan','Magenta','Yellow','Black']);\n\n\tvar LuminanceAccessor = function(){};\n\tLuminanceAccessor.prototype.compare = function( a, b ){\n\t\treturn numberComparator( a.luminance(), b.luminance() );\n\t};\n\tLuminanceAccessor.prototype.getComponentValueFor = function( col ){\n\t\treturn col.luminance();\n\t};\n\tLuminanceAccessor.prototype.setComponentValueFor = function(){};\n\n\tvar AlphaAccessor = function(){};\n\tAlphaAccessor.prototype.compare = function(a,b){\n\t\treturn numberComparator( a.alpha(), b.alpha() );\n\t};\n\tAlphaAccessor.prototype.getComponentValueFor = function(col){\n\t\treturn col.alpha();\n\t};\n\tAlphaAccessor.prototype.setComponentValueFor = function(col, value){\n\t\tcol.setAlpha(value);\n\t};\n\n\texports.LuminanceAccessor = LuminanceAccessor;\n\texports.AlphaAccessor = AlphaAccessor;\n\n\n"]},"metadata":{},"sourceType":"script"}