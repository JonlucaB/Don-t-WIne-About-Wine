{"ast":null,"code":"var VerletSpring2D = function (a, b, len, str) {\n  this.a = a;\n  this.b = b;\n  this.restLength = len;\n  this.strength = str;\n};\n\nVerletSpring2D.EPS = 1e-6;\nVerletSpring2D.prototype = {\n  getRestLength: function () {\n    return this.restLength;\n  },\n  getStrength: function () {\n    return this.strength;\n  },\n  lockA: function (s) {\n    this.isALocked = s;\n    return this;\n  },\n  lockB: function (s) {\n    this.isBLocked = s;\n    return this;\n  },\n  setRestLength: function (len) {\n    this.restLength = len;\n    this.restLengthSquared = len * len;\n    return this;\n  },\n  setStrength: function (strength) {\n    this.strength = strength;\n    return this;\n  },\n  update: function (applyConstraints) {\n    //protected\n    var delta = this.b.sub(this.a); //add minute offset to avoid div-by-zero errors\n\n    var dist = delta.magnitude() + VerletSpring2D.EPS;\n    var normDistStrength = (dist - this.restLength) / (dist * (this.a.invWeight + this.b.invWeight)) * this.strength;\n\n    if (!this.a.isLocked && !this.isALocked) {\n      this.a.addSelf(delta.scale(normDistStrength * this.a.invWeight));\n\n      if (applyConstraints) {\n        this.a.applyConstraints();\n      }\n    }\n\n    if (!this.b.isLocked && !this.isBLocked) {\n      this.b.addSelf(delta.scale(-normDistStrength * this.b.invWeight));\n\n      if (applyConstraints) {\n        this.b.applyConstraints();\n      }\n    }\n  }\n};\nmodule.exports = VerletSpring2D;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/physics2d/VerletSpring2D.js"],"names":["VerletSpring2D","a","b","len","str","restLength","strength","EPS","prototype","getRestLength","getStrength","lockA","s","isALocked","lockB","isBLocked","setRestLength","restLengthSquared","setStrength","update","applyConstraints","delta","sub","dist","magnitude","normDistStrength","invWeight","isLocked","addSelf","scale","module","exports"],"mappings":"AACA,IAAIA,cAAc,GAAG,UAASC,CAAT,EAAWC,CAAX,EAAaC,GAAb,EAAiBC,GAAjB,EAAqB;AACzC,OAAKH,CAAL,GAASA,CAAT;AACA,OAAKC,CAAL,GAASA,CAAT;AACA,OAAKG,UAAL,GAAkBF,GAAlB;AACA,OAAKG,QAAL,GAAgBF,GAAhB;AACA,CALD;;AAOAJ,cAAc,CAACO,GAAf,GAAqB,IAArB;AAEAP,cAAc,CAACQ,SAAf,GAA2B;AAC1BC,EAAAA,aAAa,EAAE,YAAU;AACxB,WAAO,KAAKJ,UAAZ;AACA,GAHyB;AAK1BK,EAAAA,WAAW,EAAE,YAAU;AACtB,WAAO,KAAKJ,QAAZ;AACA,GAPyB;AAS1BK,EAAAA,KAAK,EAAE,UAASC,CAAT,EAAW;AACjB,SAAKC,SAAL,GAAiBD,CAAjB;AACA,WAAO,IAAP;AACA,GAZyB;AAc1BE,EAAAA,KAAK,EAAE,UAASF,CAAT,EAAW;AACjB,SAAKG,SAAL,GAAiBH,CAAjB;AACA,WAAO,IAAP;AACA,GAjByB;AAmB1BI,EAAAA,aAAa,EAAE,UAASb,GAAT,EAAa;AAC3B,SAAKE,UAAL,GAAkBF,GAAlB;AACA,SAAKc,iBAAL,GAAyBd,GAAG,GAAGA,GAA/B;AACA,WAAO,IAAP;AACA,GAvByB;AAyB1Be,EAAAA,WAAW,EAAE,UAASZ,QAAT,EAAkB;AAC9B,SAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAO,IAAP;AACA,GA5ByB;AA8B1Ba,EAAAA,MAAM,EAAE,UAASC,gBAAT,EAA0B;AAAE;AACnC,QAAIC,KAAK,GAAG,KAAKnB,CAAL,CAAOoB,GAAP,CAAW,KAAKrB,CAAhB,CAAZ,CADiC,CAEjC;;AACA,QAAIsB,IAAI,GAAGF,KAAK,CAACG,SAAN,KAAoBxB,cAAc,CAACO,GAA9C;AACA,QAAIkB,gBAAgB,GAAG,CAACF,IAAI,GAAG,KAAKlB,UAAb,KAA4BkB,IAAI,IAAI,KAAKtB,CAAL,CAAOyB,SAAP,GAAmB,KAAKxB,CAAL,CAAOwB,SAA9B,CAAhC,IAA4E,KAAKpB,QAAxG;;AACA,QAAG,CAAC,KAAKL,CAAL,CAAO0B,QAAR,IAAoB,CAAC,KAAKd,SAA7B,EAAuC;AACtC,WAAKZ,CAAL,CAAO2B,OAAP,CACCP,KAAK,CAACQ,KAAN,CAAYJ,gBAAgB,GAAG,KAAKxB,CAAL,CAAOyB,SAAtC,CADD;;AAGA,UAAGN,gBAAH,EAAoB;AACnB,aAAKnB,CAAL,CAAOmB,gBAAP;AACA;AACD;;AACD,QAAG,CAAC,KAAKlB,CAAL,CAAOyB,QAAR,IAAoB,CAAC,KAAKZ,SAA7B,EAAuC;AACtC,WAAKb,CAAL,CAAO0B,OAAP,CACCP,KAAK,CAACQ,KAAN,CAAY,CAACJ,gBAAD,GAAoB,KAAKvB,CAAL,CAAOwB,SAAvC,CADD;;AAGA,UAAGN,gBAAH,EAAoB;AACnB,aAAKlB,CAAL,CAAOkB,gBAAP;AACA;AACD;AACD;AAnDyB,CAA3B;AAsDAU,MAAM,CAACC,OAAP,GAAiB/B,cAAjB","sourcesContent":["\nvar\tVerletSpring2D = function(a,b,len,str){\n\tthis.a = a;\n\tthis.b = b;\n\tthis.restLength = len;\n\tthis.strength = str;\n};\n\nVerletSpring2D.EPS = 1e-6;\n\nVerletSpring2D.prototype = {\n\tgetRestLength: function(){\n\t\treturn this.restLength;\n\t},\n\t\n\tgetStrength: function(){\n\t\treturn this.strength;\n\t},\n\t\n\tlockA: function(s){\n\t\tthis.isALocked = s;\n\t\treturn this;\n\t},\n\t\n\tlockB: function(s){\n\t\tthis.isBLocked = s;\n\t\treturn this;\n\t},\n\t\n\tsetRestLength: function(len){\n\t\tthis.restLength = len;\n\t\tthis.restLengthSquared = len * len;\n\t\treturn this;\n\t},\n\t\n\tsetStrength: function(strength){\n\t\tthis.strength = strength;\n\t\treturn this;\n\t},\n\t\n\tupdate: function(applyConstraints){ //protected\n\t\tvar delta = this.b.sub(this.a);\n\t\t//add minute offset to avoid div-by-zero errors\n\t\tvar dist = delta.magnitude() + VerletSpring2D.EPS;\n\t\tvar normDistStrength = (dist - this.restLength) / (dist * (this.a.invWeight + this.b.invWeight)) * this.strength;\n\t\tif(!this.a.isLocked && !this.isALocked){\n\t\t\tthis.a.addSelf(\n\t\t\t\tdelta.scale(normDistStrength * this.a.invWeight)\n\t\t\t);\n\t\t\tif(applyConstraints){\n\t\t\t\tthis.a.applyConstraints();\n\t\t\t}\n\t\t}\n\t\tif(!this.b.isLocked && !this.isBLocked){\n\t\t\tthis.b.addSelf(\n\t\t\t\tdelta.scale(-normDistStrength * this.b.invWeight)\n\t\t\t);\n\t\t\tif(applyConstraints){\n\t\t\t\tthis.b.applyConstraints();\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = VerletSpring2D;\n\n"]},"metadata":{},"sourceType":"script"}