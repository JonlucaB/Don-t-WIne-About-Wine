{"ast":null,"code":"var extend = require('../../internals').extend,\n    VertexSelector = require('./VertexSelector');\n/**\n * @class\n * @member toxi\n * @augments toxi.VertexSelector\n */\n\n\nvar PlaneSelector = function (mesh, plane, classifier, tolerance) {\n  VertexSelector.apply(this, [mesh]);\n  this.plane = plane;\n  this.classifier = classifier;\n  this.tolerances = tolerance === undefined ? 0.0001 : tolerance;\n};\n\nextend(PlaneSelector, VertexSelector);\n\nPlaneSelector.prototype.selectVertices = function () {\n  this.clearSelection();\n  var verts = this.mesh.getVertices();\n  var l = verts.length;\n\n  for (var i = 0; i < l; i++) {\n    var v = verts[i];\n\n    if (this.plane.classifyPoint(v, this.tolerance) == this.classifier) {\n      this.selection.add(v);\n    }\n  }\n\n  return this;\n};\n\nmodule.exports = PlaneSelector;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/geom/mesh/PlaneSelector.js"],"names":["extend","require","VertexSelector","PlaneSelector","mesh","plane","classifier","tolerance","apply","tolerances","undefined","prototype","selectVertices","clearSelection","verts","getVertices","l","length","i","v","classifyPoint","selection","add","module","exports"],"mappings":"AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,MAAxC;AAAA,IACIE,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAD5B;AAGA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,aAAa,GAAG,UAASC,IAAT,EAAcC,KAAd,EAAoBC,UAApB,EAAgCC,SAAhC,EAA2C;AAC3DL,EAAAA,cAAc,CAACM,KAAf,CAAqB,IAArB,EAA0B,CAACJ,IAAD,CAA1B;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKG,UAAL,GAAmBF,SAAS,KAAKG,SAAf,GAA2B,MAA3B,GAAoCH,SAAtD;AACH,CALD;;AAMAP,MAAM,CAACG,aAAD,EAAeD,cAAf,CAAN;;AACAC,aAAa,CAACQ,SAAd,CAAwBC,cAAxB,GAAyC,YAAW;AAChD,OAAKC,cAAL;AACA,MAAIC,KAAK,GAAG,KAAKV,IAAL,CAAUW,WAAV,EAAZ;AACA,MAAIC,CAAC,GAAGF,KAAK,CAACG,MAAd;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,CAAf,EAAiBE,CAAC,EAAlB,EAAsB;AACxB,QAAIC,CAAC,GAAGL,KAAK,CAACI,CAAD,CAAb;;AACM,QAAI,KAAKb,KAAL,CAAWe,aAAX,CAAyBD,CAAzB,EAA4B,KAAKZ,SAAjC,KAA+C,KAAKD,UAAxD,EAAoE;AAChE,WAAKe,SAAL,CAAeC,GAAf,CAAmBH,CAAnB;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CAXD;;AAaAI,MAAM,CAACC,OAAP,GAAiBrB,aAAjB","sourcesContent":["\nvar extend = require('../../internals').extend,\n    VertexSelector = require('./VertexSelector');\n\n/**\n * @class\n * @member toxi\n * @augments toxi.VertexSelector\n */\nvar PlaneSelector = function(mesh,plane,classifier, tolerance) {\n    VertexSelector.apply(this,[mesh]);\n    this.plane = plane;\n    this.classifier = classifier;\n    this.tolerances = (tolerance === undefined)? 0.0001 : tolerance;\n};\nextend(PlaneSelector,VertexSelector);\nPlaneSelector.prototype.selectVertices = function() {\n    this.clearSelection();\n    var verts = this.mesh.getVertices();\n    var l = verts.length;\n    for (var i=0;i<l;i++) {\n\t\tvar v = verts[i];\n        if (this.plane.classifyPoint(v, this.tolerance) == this.classifier) {\n            this.selection.add(v);\n        }\n    }\n    return this;\n};\n\nmodule.exports = PlaneSelector;\n\n"]},"metadata":{},"sourceType":"script"}