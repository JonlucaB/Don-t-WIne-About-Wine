{"ast":null,"code":"var LinkedMap = require('../internals/LinkedMap');\n\nvar each = require('../internals/each');\n\nvar namedHues = new LinkedMap(),\n    primaryHues = [],\n    Hue;\n/*\n* This class defines color hues and allows them to be access by name. There are\n* also methods to check if a hue is one of the 7 primary hues (rainbow) or to\n* find the closest defined hue for a given color.\n*/\n\n/**\n * construct a new Hue\n * @param {String} name\n * @param {Number} hue (range 0-1)\n * @param {Boolean} [isPrimary] optionally flag as a primary hue\n * @constructor\n */\n\nHue = function (name, hue, isPrimary) {\n  this._isPrimary = isPrimary === true;\n  this.name = name;\n  this.hue = hue;\n  namedHues.put(name, this);\n\n  if (this._isPrimary) {\n    primaryHues.push(this);\n  }\n};\n\nHue.prototype = {\n  constructor: Hue,\n  getHue: function () {\n    return this.hue;\n  },\n  getName: function () {\n    return this.name;\n  },\n  isPrimary: function () {\n    return this._isPrimary;\n  },\n  toString: function () {\n    return \"Hue: ID:\" + this.name + \" @ \" + parseInt(this.hue * 360, 10) + \" degrees\";\n  }\n}; //add presets object, like what `toxi.color.ColorRange` has,\n//allows for easy look-up\n\nHue.PRESETS = {}; //add the basic hues\n\neach([['red', true], ['orange', true], ['yellow', true], ['lime'], ['green', true], ['teal'], ['cyan'], ['azure'], ['blue', true], ['indigo'], ['purple', true], ['pink', true]], function (item, i) {\n  var name = item[0],\n      nameUC = name.toUpperCase(),\n      isPrimary = item[1];\n  Hue[nameUC] = new Hue(name, i * 30 / 360.0, isPrimary);\n  Hue.PRESETS[nameUC] = Hue[nameUC];\n}); // Tolerance value for checking if a given hue is primary\n\nHue.PRIMARY_VARIANCE = 0.01;\n/**\n * Finds the closest defined & named Hue for the given hue vale.\n * Optionally, the serach can be limited to primary hues only.\n * @param {Number} hue\n * @param {Boolean} [primaryOnly]\n * @returns Hue\n */\n\nHue.getClosest = function (hue, primaryOnly) {\n  hue %= 1;\n  primaryOnly = primaryOnly === true;\n  var dist = Number.MAX_VALUE,\n      closest,\n      hues = primaryOnly ? primaryHues : namedHues.getArray();\n  each(hues, function (h) {\n    var d = Math.min(Math.abs(h.getHue() - hue), Math.abs(1 + h.getHue() - hue));\n\n    if (d < dist) {\n      dist = d;\n      closest = h;\n    }\n  });\n  return closest;\n};\n\nHue.getForName = function (name) {\n  return namedHues.get(name);\n};\n\nHue.isPrimary = function (hue, variance) {\n  variance = typeof variance === 'number' ? variance : Hue.PRIMARY_VARIANCE;\n  var isPrimary = false;\n\n  for (var i = 0, len = primaryHues.length; i < len; i++) {\n    var h = primaryHues[i];\n\n    if (Math.abs(hue - h.getHue()) < variance) {\n      isPrimary = true;\n      break;\n    }\n  }\n\n  return isPrimary;\n};\n\nmodule.exports = Hue;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/color/Hue.js"],"names":["LinkedMap","require","each","namedHues","primaryHues","Hue","name","hue","isPrimary","_isPrimary","put","push","prototype","constructor","getHue","getName","toString","parseInt","PRESETS","item","i","nameUC","toUpperCase","PRIMARY_VARIANCE","getClosest","primaryOnly","dist","Number","MAX_VALUE","closest","hues","getArray","h","d","Math","min","abs","getForName","get","variance","len","length","module","exports"],"mappings":"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","sourcesContent":["var LinkedMap = require('../internals/LinkedMap');\nvar each = require('../internals/each');\n\n    var namedHues = new LinkedMap(),\n        primaryHues = [],\n        Hue;\n    /*\n    * This class defines color hues and allows them to be access by name. There are\n    * also methods to check if a hue is one of the 7 primary hues (rainbow) or to\n    * find the closest defined hue for a given color.\n    */\n\n    /**\n     * construct a new Hue\n     * @param {String} name\n     * @param {Number} hue (range 0-1)\n     * @param {Boolean} [isPrimary] optionally flag as a primary hue\n     * @constructor\n     */\n    Hue = function( name, hue, isPrimary ){\n        this._isPrimary = (isPrimary === true );\n        this.name = name;\n        this.hue = hue;\n        namedHues.put( name, this );\n        if( this._isPrimary ){\n            primaryHues.push( this );\n        }\n    };\n\n\n    Hue.prototype = {\n        constructor: Hue,\n        getHue: function(){ return this.hue; },\n        getName: function(){ return this.name; },\n        isPrimary: function(){ return this._isPrimary; },\n        toString: function(){\n            return \"Hue: ID:\" + this.name + \" @ \" + parseInt(this.hue*360, 10) + \" degrees\";\n        }\n    };\n\n    //add presets object, like what `toxi.color.ColorRange` has,\n    //allows for easy look-up\n    Hue.PRESETS = {};\n    //add the basic hues\n    each([\n        ['red', true],\n        ['orange', true],\n        ['yellow', true],\n        ['lime'],\n        ['green',true],\n        ['teal'],\n        ['cyan'],\n        ['azure'],\n        ['blue',true],\n        ['indigo'],\n        ['purple',true],\n        ['pink',true]\n    ], function( item, i ){\n        var name = item[0],\n            nameUC = name.toUpperCase(),\n            isPrimary = item[1];\n        Hue[nameUC] = new Hue( name, i * 30 / 360.0, isPrimary );\n        Hue.PRESETS[nameUC] = Hue[nameUC];\n    });\n\n    // Tolerance value for checking if a given hue is primary\n    Hue.PRIMARY_VARIANCE = 0.01;\n\n    /**\n     * Finds the closest defined & named Hue for the given hue vale.\n     * Optionally, the serach can be limited to primary hues only.\n     * @param {Number} hue\n     * @param {Boolean} [primaryOnly]\n     * @returns Hue\n     */\n    Hue.getClosest = function( hue, primaryOnly ){\n        hue %= 1;\n        primaryOnly = (primaryOnly === true);\n        var dist = Number.MAX_VALUE,\n            closest,\n            hues = primaryOnly ? primaryHues : namedHues.getArray();\n        each(hues, function(h){\n            var d = Math.min( Math.abs(h.getHue() - hue), Math.abs(1 + h.getHue() - hue) );\n            if( d < dist ) {\n                dist = d;\n                closest = h;\n            }\n        });\n        return closest;\n    };\n\n    Hue.getForName = function( name ){\n        return namedHues.get(name);\n    };\n\n    Hue.isPrimary = function( hue, variance ){\n        variance = typeof variance === 'number' ? variance : Hue.PRIMARY_VARIANCE;\n        var isPrimary = false;\n        for( var i=0, len = primaryHues.length; i<len; i++ ){\n            var h = primaryHues[i];\n            if( Math.abs( hue - h.getHue() ) < variance ) {\n                isPrimary = true;\n                break;\n            }\n        }\n        return isPrimary;\n    };\n\n    module.exports = Hue;\n\n"]},"metadata":{},"sourceType":"script"}