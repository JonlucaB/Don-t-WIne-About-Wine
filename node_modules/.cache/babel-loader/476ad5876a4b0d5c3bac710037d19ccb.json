{"ast":null,"code":"var mathUtils = require('../math/mathUtils'),\n    Vec3D = require('./Vec3D'),\n    Line3D = require('./Line3D'),\n    AABB = require('./AABB');\n/**\n * @class\n * @member toxi\n * @param {toxi.Vec3D} a\n * @param {toxi.Vec3D} b\n * @param {toxi.Vec3D} c\n */\n\n\nvar Triangle3D = function (a, b, c) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n};\n\nTriangle3D.createEquilateralFrom = function (a, b) {\n  var c = a.interpolateTo(b, 0.5);\n  var dir = b.sub(a);\n  var n = a.cross(dir.normalize());\n  c.addSelf(n.normalizeTo(dir.magnitude() * mathUtils.SQRT3 / 2));\n  return new Triangle3D(a, b, c);\n};\n\nTriangle3D.isClockwiseInXY = function (a, b, c) {\n  var determ = (b.x - a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y);\n  return determ < 0.0;\n};\n\nTriangle3D.isClockwiseInXZ = function (a, b, c) {\n  var determ = (b.x - a.x) * (c.z - a.z) - (c.x - a.x) * (b.z - a.z);\n  return determ < 0.0;\n};\n\nTriangle3D.isClockwiseInYZ = function (a, b, c) {\n  var determ = (b.y - a.y) * (c.z - a.z) - (c.y - a.y) * (b.z - a.z);\n  return determ < 0.0;\n};\n\nTriangle3D.prototype = {\n  closestPointOnSurface: function (p) {\n    var ab = this.b.sub(this.a);\n    var ac = this.c.sub(this.a);\n    var bc = this.c.sub(this.b);\n    var pa = p.sub(this.a);\n    var pb = p.sub(this.b);\n    var pc = p.sub(this.c);\n    var ap = a.sub(this.p);\n    var bp = b.sub(this.p);\n    var cp = c.sub(this.p); // Compute parametric position s for projection P' of P on AB,\n    // P' = A + s*AB, s = snom/(snom+sdenom)\n\n    var snom = pa.dot(ab); // Compute parametric position t for projection P' of P on AC,\n    // P' = A + t*AC, s = tnom/(tnom+tdenom)\n\n    var tnom = pa.dot(ac);\n\n    if (snom <= 0.0 && tnom <= 0.0) {\n      return this.a; // Vertex region early out\n    }\n\n    var sdenom = pb.dot(this.a.sub(this.b));\n    var tdenom = pc.dot(this.a.sub(this.c)); // Compute parametric position u for projection P' of P on BC,\n    // P' = B + u*BC, u = unom/(unom+udenom)\n\n    var unom = pb.dot(bc);\n    var udenom = pc.dot(this.b.sub(this.c));\n\n    if (sdenom <= 0.0 && unom <= 0.0) {\n      return this.b; // Vertex region early out\n    }\n\n    if (tdenom <= 0.0 && udenom <= 0.0) {\n      return this.c; // Vertex region early out\n    } // P is outside (or on) AB if the triple scalar product [N PA PB] <= 0\n\n\n    var n = ab.cross(ac);\n    var vc = n.dot(ap.crossSelf(bp)); // If P outside AB and within feature region of AB,\n    // return projection of P onto AB\n\n    if (vc <= 0.0 && snom >= 0.0 && sdenom >= 0.0) {\n      // return a + snom / (snom + sdenom) * ab;\n      return this.a.add(ab.scaleSelf(snom / (snom + sdenom)));\n    } // P is outside (or on) BC if the triple scalar product [N PB PC] <= 0\n\n\n    var va = n.dot(bp.crossSelf(cp)); // If P outside BC and within feature region of BC,\n    // return projection of P onto BC\n\n    if (va <= 0.0 && unom >= 0.0 && udenom >= 0.0) {\n      // return b + unom / (unom + udenom) * bc;\n      return this.b.add(bc.scaleSelf(unom / (unom + udenom)));\n    } // P is outside (or on) CA if the triple scalar product [N PC PA] <= 0\n\n\n    var vb = n.dot(cp.crossSelf(ap)); // If P outside CA and within feature region of CA,\n    // return projection of P onto CA\n\n    if (vb <= 0.0 && tnom >= 0.0 && tdenom >= 0.0) {\n      // return a + tnom / (tnom + tdenom) * ac;\n      return this.a.add(ac.scaleSelf(tnom / (tnom + tdenom)));\n    } // P must project inside face region. Compute Q using barycentric\n    // coordinates\n\n\n    var u = va / (va + vb + vc);\n    var v = vb / (va + vb + vc);\n    var w = 1.0 - u - v; // = vc / (va + vb + vc)\n    // return u * a + v * b + w * c;\n\n    return this.a.scale(u).addSelf(this.b.scale(v)).addSelf(this.c.scale(w));\n  },\n  computeCentroid: function () {\n    this.centroid = this.a.add(this.b).addSelf(this.c).scaleSelf(1 / 3);\n    return this.centroid;\n  },\n  computeNormal: function () {\n    this.normal = this.a.sub(this.c).crossSelf(this.a.sub(this.b)).normalize();\n    return this.normal;\n  },\n  containsPoint: function (p) {\n    if (p.equals(this.a) || p.equals(this.b) || p.equals(this.c)) {\n      return true;\n    }\n\n    var v1 = p.sub(this.a).normalize();\n    var v2 = p.sub(this.b).normalize();\n    var v3 = p.sub(this.c).normalize();\n    var total_angles = Math.acos(v1.dot(v2));\n    total_angles += Math.acos(v2.dot(v3));\n    total_angles += Math.acos(v3.dot(v1));\n    return mathUtils.abs(total_angles - mathUtils.TWO_PI) <= 0.005;\n  },\n  flipVertexOrder: function () {\n    var t = this.a;\n    this.a = this.c;\n    this.c = this.t;\n    return this;\n  },\n  fromBarycentric: function (p) {\n    return new Vec3D(this.a.x * p.x + this.b.x * p.y + this.c.x * p.z, this.a.y * p.x + this.b.y * p.y + this.c.y * p.z, this.a.z * p.x + this.b.z * p.y + this.c.z * p.z);\n  },\n  getBoundingBox: function () {\n    var min = Vec3D.min(Vec3D.min(this.a, this.b), this.c);\n    var max = Vec3D.max(Vec3D.max(this.a, this.b), this.c);\n    return AABB.fromMinMax(min, max);\n  },\n  getClosestPointTo: function (p) {\n    var edge = new Line3D(this.a, this.b);\n    var Rab = edge.closestPointTo(p);\n    var Rbc = edge.set(this.b, this.c).closestPointTo(p);\n    var Rca = edge.set(this.c, this.a).closestPointTo(p);\n    var dAB = p.sub(Rab).magSquared();\n    var dBC = p.sub(Rbc).magSquared();\n    var dCA = p.sub(Rca).magSquared();\n    var min = dAB;\n    var result = Rab;\n\n    if (dBC < min) {\n      min = dBC;\n      result = Rbc;\n    }\n\n    if (dCA < min) {\n      result = Rca;\n    }\n\n    return result;\n  },\n  isClockwiseInXY: function () {\n    return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);\n  },\n  isClockwiseInXZ: function () {\n    return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);\n  },\n  isClockwiseInYZ: function () {\n    return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);\n  },\n  set: function (a2, b2, c2) {\n    this.a = a2;\n    this.b = b2;\n    this.c = c2;\n  },\n  toBarycentric: function (p) {\n    var e = b.sub(this.a).cross(this.c.sub(this.a));\n    var n = e.getNormalized(); // Compute twice area of triangle ABC\n\n    var areaABC = n.dot(e); // Compute lambda1\n\n    var areaPBC = n.dot(this.b.sub(p).cross(this.c.sub(p)));\n    var l1 = areaPBC / areaABC; // Compute lambda2\n\n    var areaPCA = n.dot(this.c.sub(p).cross(this.a.sub(p)));\n    var l2 = areaPCA / areaABC; // Compute lambda3\n\n    var l3 = 1.0 - l1 - l2;\n    return new Vec3D(l1, l2, l3);\n  },\n  toString: function () {\n    return \"Triangle: \" + this.a + \",\" + this.b + \",\" + this.c;\n  }\n};\nmodule.exports = Triangle3D;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/geom/Triangle3D.js"],"names":["mathUtils","require","Vec3D","Line3D","AABB","Triangle3D","a","b","c","createEquilateralFrom","interpolateTo","dir","sub","n","cross","normalize","addSelf","normalizeTo","magnitude","SQRT3","isClockwiseInXY","determ","x","y","isClockwiseInXZ","z","isClockwiseInYZ","prototype","closestPointOnSurface","p","ab","ac","bc","pa","pb","pc","ap","bp","cp","snom","dot","tnom","sdenom","tdenom","unom","udenom","vc","crossSelf","add","scaleSelf","va","vb","u","v","w","scale","computeCentroid","centroid","computeNormal","normal","containsPoint","equals","v1","v2","v3","total_angles","Math","acos","abs","TWO_PI","flipVertexOrder","t","fromBarycentric","getBoundingBox","min","max","fromMinMax","getClosestPointTo","edge","Rab","closestPointTo","Rbc","set","Rca","dAB","magSquared","dBC","dCA","result","a2","b2","c2","toBarycentric","e","getNormalized","areaABC","areaPBC","l1","areaPCA","l2","l3","toString","module","exports"],"mappings":"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","sourcesContent":["\n\nvar mathUtils = require('../math/mathUtils'),\n    Vec3D = require('./Vec3D'),\n    Line3D = require('./Line3D'),\n    AABB = require('./AABB');\n\n/**\n * @class\n * @member toxi\n * @param {toxi.Vec3D} a\n * @param {toxi.Vec3D} b\n * @param {toxi.Vec3D} c\n */\nvar Triangle3D = function(a,b,c){\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n};\n\nTriangle3D.createEquilateralFrom = function(a, b) {\n    var c = a.interpolateTo(b, 0.5);\n    var dir = b.sub(a);\n    var n = a.cross(dir.normalize());\n    c.addSelf(n.normalizeTo(dir.magnitude() * mathUtils.SQRT3 / 2));\n    return new Triangle3D(a, b, c);\n};\n\nTriangle3D.isClockwiseInXY = function(a, b, c) {\n\tvar determ = (b.x - a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y);\n\treturn (determ < 0.0);\n};\n\nTriangle3D.isClockwiseInXZ = function(a, b,c) {\n\tvar determ = (b.x - a.x) * (c.z - a.z) - (c.x - a.x) * (b.z - a.z);\n\treturn (determ < 0.0);\n};\n\nTriangle3D.isClockwiseInYZ = function(a,b,c) {\n    var determ = (b.y - a.y) * (c.z - a.z) - (c.y - a.y) * (b.z - a.z);\n    return (determ < 0.0);\n};\n\n\nTriangle3D.prototype = {\n\tclosestPointOnSurface: function(p) {\n        var ab = this.b.sub(this.a);\n        var ac = this.c.sub(this.a);\n        var bc = this.c.sub(this.b);\n\n        var pa = p.sub(this.a);\n        var pb = p.sub(this.b);\n        var pc = p.sub(this.c);\n\n        var ap = a.sub(this.p);\n        var bp = b.sub(this.p);\n        var cp = c.sub(this.p);\n\n        // Compute parametric position s for projection P' of P on AB,\n        // P' = A + s*AB, s = snom/(snom+sdenom)\n        var snom = pa.dot(ab);\n\n        // Compute parametric position t for projection P' of P on AC,\n        // P' = A + t*AC, s = tnom/(tnom+tdenom)\n        var tnom = pa.dot(ac);\n\n        if (snom <= 0.0 && tnom <= 0.0) {\n            return this.a; // Vertex region early out\n        }\n\n        var sdenom = pb.dot(this.a.sub(this.b));\n        var\ttdenom = pc.dot(this.a.sub(this.c));\n\n        // Compute parametric position u for projection P' of P on BC,\n        // P' = B + u*BC, u = unom/(unom+udenom)\n        var unom = pb.dot(bc);\n        var udenom = pc.dot(this.b.sub(this.c));\n\n        if (sdenom <= 0.0 && unom <= 0.0) {\n            return this.b; // Vertex region early out\n        }\n        if (tdenom <= 0.0 && udenom <= 0.0) {\n            return this.c; // Vertex region early out\n        }\n\n        // P is outside (or on) AB if the triple scalar product [N PA PB] <= 0\n        var n = ab.cross(ac);\n        var vc = n.dot(ap.crossSelf(bp));\n\n        // If P outside AB and within feature region of AB,\n        // return projection of P onto AB\n        if (vc <= 0.0 && snom >= 0.0 && sdenom >= 0.0) {\n            // return a + snom / (snom + sdenom) * ab;\n            return this.a.add(ab.scaleSelf(snom / (snom + sdenom)));\n        }\n\n        // P is outside (or on) BC if the triple scalar product [N PB PC] <= 0\n        var va = n.dot(bp.crossSelf(cp));\n        // If P outside BC and within feature region of BC,\n        // return projection of P onto BC\n        if (va <= 0.0 && unom >= 0.0 && udenom >= 0.0) {\n            // return b + unom / (unom + udenom) * bc;\n            return this.b.add(bc.scaleSelf(unom / (unom + udenom)));\n        }\n\n        // P is outside (or on) CA if the triple scalar product [N PC PA] <= 0\n        var vb = n.dot(cp.crossSelf(ap));\n        // If P outside CA and within feature region of CA,\n        // return projection of P onto CA\n        if (vb <= 0.0 && tnom >= 0.0 && tdenom >= 0.0) {\n            // return a + tnom / (tnom + tdenom) * ac;\n            return this.a.add(ac.scaleSelf(tnom / (tnom + tdenom)));\n        }\n\n        // P must project inside face region. Compute Q using barycentric\n        // coordinates\n        var u = va / (va + vb + vc);\n        var v = vb / (va + vb + vc);\n        var w = 1.0 - u - v; // = vc / (va + vb + vc)\n        // return u * a + v * b + w * c;\n        return this.a.scale(u).addSelf(this.b.scale(v)).addSelf(this.c.scale(w));\n    },\n    \n    computeCentroid: function() {\n        this.centroid = this.a.add(this.b).addSelf(this.c).scaleSelf(1 / 3);\n        return this.centroid;\n    },\n    \n    computeNormal: function() {\n        this.normal = this.a.sub(this.c).crossSelf(this.a.sub(this.b)).normalize();\n        return this.normal;\n    },\n    \n    containsPoint: function(p) {\n        if (p.equals(this.a) || p.equals(this.b) || p.equals(this.c)) {\n            return true;\n        }\n        var v1 = p.sub(this.a).normalize();\n        var v2 = p.sub(this.b).normalize();\n        var v3 = p.sub(this.c).normalize();\n\n        var total_angles = Math.acos(v1.dot(v2));\n        total_angles += Math.acos(v2.dot(v3));\n        total_angles += Math.acos(v3.dot(v1));\n\n        return (mathUtils.abs(total_angles - mathUtils.TWO_PI) <= 0.005);\n    },\n\n   flipVertexOrder: function() {\n        var t = this.a;\n        this.a = this.c;\n        this.c = this.t;\n        return this;\n    },\n\n    fromBarycentric: function(p) {\n        return new Vec3D(this.a.x * p.x + this.b.x * p.y + this.c.x * p.z, this.a.y * p.x + this.b.y * p.y + this.c.y * p.z, this.a.z * p.x + this.b.z * p.y + this.c.z * p.z);\n    },\n\n    getBoundingBox: function() {\n        var min = Vec3D.min(Vec3D.min(this.a, this.b), this.c);\n        var max = Vec3D.max(Vec3D.max(this.a, this.b), this.c);\n        return AABB.fromMinMax(min, max);\n    },\n    getClosestPointTo: function(p) {\n        var edge = new Line3D(this.a, this.b);\n        var Rab = edge.closestPointTo(p);\n        var Rbc = edge.set(this.b, this.c).closestPointTo(p);\n        var Rca = edge.set(this.c, this.a).closestPointTo(p);\n\n        var dAB = p.sub(Rab).magSquared();\n        var dBC = p.sub(Rbc).magSquared();\n        var dCA = p.sub(Rca).magSquared();\n\n        var min = dAB;\n        var result = Rab;\n\n        if (dBC < min) {\n            min = dBC;\n            result = Rbc;\n        }\n        if (dCA < min) {\n            result = Rca;\n        }\n\n        return result;\n    },\n\n    isClockwiseInXY: function() {\n        return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);\n    },\n\n    isClockwiseInXZ: function() {\n        return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);\n    },\n\n    isClockwiseInYZ: function() {\n        return Triangle3D.isClockwiseInXY(this.a, this.b, this.c);\n    },\n    \n    set: function(a2, b2, c2) {\n        this.a = a2;\n        this.b = b2;\n        this.c = c2;\n    },\n\n    toBarycentric: function(p) {\n        var  e = b.sub(this.a).cross(this.c.sub(this.a));\n        var  n = e.getNormalized();\n\n        // Compute twice area of triangle ABC\n        var areaABC = n.dot(e);\n        // Compute lambda1\n        var areaPBC = n.dot(this.b.sub(p).cross(this.c.sub(p)));\n        var l1 = areaPBC / areaABC;\n\n        // Compute lambda2\n        var areaPCA = n.dot(this.c.sub(p).cross(this.a.sub(p)));\n        var l2 = areaPCA / areaABC;\n\n        // Compute lambda3\n        var l3 = 1.0 - l1 - l2;\n\n        return new Vec3D(l1, l2, l3);\n    },\n\n    toString: function() {\n        return \"Triangle: \" + this.a + \",\" + this.b + \",\" + this.c;\n    }\n\n};\n\nmodule.exports = Triangle3D;\n\n"]},"metadata":{},"sourceType":"script"}