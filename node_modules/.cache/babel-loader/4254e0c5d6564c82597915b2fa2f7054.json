{"ast":null,"code":"var mathUtils = require('../math/mathUtils'),\n    internals = require('../internals'),\n    Vec3D = require('./Vec3D');\n/**\n * @description Implements a simple row-major 4x4 matrix class, all matrix operations are\n * applied to new instances. Use {@link #transpose()} to convert from\n * column-major formats...\n * @exports Matrix4x4 as toxi.Matrix4x4\n * @constructor\n */\n\n\nvar Matrix4x4 = function (v11, v12, v13, v14, v21, v22, v23, v24, v31, v32, v33, v34, v41, v42, v43, v44) {\n  this.temp = [];\n  this.matrix = [];\n  var self = this;\n\n  if (arguments.length === 0) {\n    //if no variables were supplied\n    this.matrix[0] = [1, 0, 0, 0];\n    this.matrix[1] = [0, 1, 0, 0];\n    this.matrix[2] = [0, 0, 1, 0];\n    this.matrix[3] = [0, 0, 0, 1];\n  } else if (typeof v11 == 'number') {\n    //if the variables were numbers\n    var m1 = [v11, v12, v13, v14];\n    var m2 = [v21, v22, v23, v24];\n    var m3 = [v31, v32, v33, v34];\n    var m4 = [v41, v42, v43, v44];\n    this.matrix = [m1, m2, m3, m4];\n  } else if (internals.is.Array(v11)) {\n    //if it was sent in as one array\n    var array = v11;\n\n    if (array.length != 9 && array.length != 16) {\n      throw new Error(\"Matrix4x4: Array length must == 9 or 16\");\n    }\n\n    if (array.length == 16) {\n      this.matrix = [];\n      this.matrix[0] = array.slice(0, 4);\n      this.matrix[1] = array.slice(4, 8);\n      this.matrix[2] = array.slice(8, 12);\n      this.matrix[3] = array.slice(12);\n    } else {\n      this.matrix[0] = array.slice(0, 3);\n      this.matrix[0][3] = NaN;\n      this.matrix[1] = array.slice(3, 6);\n      this.matrix[1][3] = NaN;\n      this.matrix[2] = array.slice(6, 9);\n      this.matrix[2][3] = NaN;\n      this.matrix[3] = [NaN, NaN, NaN, NaN];\n    }\n  } else if (internals.is.Matrix4x4(v11)) {\n    //else it should've been a Matrix4x4 that was passed in\n    var m = v11,\n        i = 0,\n        j = 0,\n        lenM,\n        lenMM;\n\n    if (m.matrix.length == 16) {\n      for (i = 0; i < 4; i++) {\n        this.matrix[i] = [m.matrix[i][0], m.matrix[i][1], m.matrix[i][2], m.matrix[i][3]];\n      }\n    } else {\n      if (m.matrix.length == 4) {\n        lenM = m.matrix.length;\n\n        for (i = 0; i < lenM; i++) {\n          lenMM = m.matrix[i].length;\n          self.matrix[i] = [];\n\n          for (j = 0; j < lenMM; j++) {\n            self.matrix[i][j] = m.matrix[i][j];\n          }\n        }\n      }\n      /*console.log(\"m.matrix.length: \"+m.matrix.length);\n      //should be a length of 9\n      for(i=0;i<3;i++){\n      \tthis.matrix[i] = [m.matrix[i][0], m.matrix[i][1],m.matrix[i][2],NaN];\n      }\n      this.matrix[3] = [NaN,NaN,NaN,NaN];*/\n\n    }\n  } else {\n    console.error(\"Matrix4x4: incorrect parameters used to construct new instance\");\n  }\n};\n\nMatrix4x4.prototype = {\n  add: function (rhs) {\n    var result = new Matrix4x4(this);\n    return result.addSelf(rhs);\n  },\n  addSelf: function (m) {\n    for (var i = 0; i < 4; i++) {\n      var mi = this.matrix[i];\n      var rhsm = m.matrix[i];\n      mi[0] += rhsm[0];\n      mi[1] += rhsm[1];\n      mi[2] += rhsm[2];\n      mi[3] += rhsm[3];\n    }\n\n    return this;\n  },\n\n  /**\n   * Creates a copy of the given vector, transformed by this matrix.\n   *\n   * @param v\n   * @return transformed vector\n   */\n  applyTo: function (v) {\n    return this.applyToSelf(new Vec3D(v));\n  },\n  applyToSelf: function (v) {\n    for (var i = 0; i < 4; i++) {\n      var m = this.matrix[i];\n      this.temp[i] = v.x * m[0] + v.y * m[1] + v.z * m[2] + m[3];\n    }\n\n    v.set(this.temp[0], this.temp[1], this.temp[2]).scaleSelf(1.0 / this.temp[3]);\n    return v;\n  },\n  copy: function () {\n    return new Matrix4x4(this);\n  },\n  getInverted: function () {\n    return new Matrix4x4(this).invert();\n  },\n  getRotatedAroundAxis: function (axis, theta) {\n    return new Matrix4x4(this).rotateAroundAxis(axis, theta);\n  },\n  getRotatedX: function (theta) {\n    return new Matrix4x4(this).rotateX(theta);\n  },\n  getRotatedY: function (theta) {\n    return new Matrix4x4(this).rotateY(theta);\n  },\n  getRotatedZ: function (theta) {\n    return new Matrix4x4(this).rotateZ(theta);\n  },\n  getTransposed: function () {\n    return new Matrix4x4(this).transpose();\n  },\n  identity: function () {\n    var m = this.matrix[0];\n    m[1] = m[2] = m[3] = 0;\n    m = this.matrix[1];\n    m[0] = m[2] = m[3] = 0;\n    m = this.matrix[2];\n    m[0] = m[1] = m[3] = 0;\n    m = this.matrix[3];\n    m[0] = m[1] = m[2] = 0;\n    this.matrix[0][0] = 1;\n    this.matrix[1][1] = 1;\n    this.matrix[2][2] = 1;\n    this.matrix[3][3] = 1;\n    return this;\n  },\n\n  /**\n   * Matrix Inversion using Cramer's Method Computes Adjoint matrix divided by\n   * determinant Code modified from\n   * http://www.intel.com/design/pentiumiii/sml/24504301.pdf\n   *\n   * @return itself\n   */\n  invert: function () {\n    var tmp = [],\n        //12\n    src = [],\n        //16\n    dst = [],\n        //16\n    mat = this.toArray(),\n        i = 0;\n\n    for (i = 0; i < 4; i++) {\n      var i4 = i << 2;\n      src[i] = mat[i4];\n      src[i + 4] = mat[i4 + 1];\n      src[i + 8] = mat[i4 + 2];\n      src[i + 12] = mat[i4 + 3];\n    } // calculate pairs for first 8 elements (cofactors)\n\n\n    tmp[0] = src[10] * src[15];\n    tmp[1] = src[11] * src[14];\n    tmp[2] = src[9] * src[15];\n    tmp[3] = src[11] * src[13];\n    tmp[4] = src[9] * src[14];\n    tmp[5] = src[10] * src[13];\n    tmp[6] = src[8] * src[15];\n    tmp[7] = src[11] * src[12];\n    tmp[8] = src[8] * src[14];\n    tmp[9] = src[10] * src[12];\n    tmp[10] = src[8] * src[13];\n    tmp[11] = src[9] * src[12]; // calculate first 8 elements (cofactors)\n\n    var src0 = src[0],\n        src1 = src[1],\n        src2 = src[2],\n        src3 = src[3],\n        src4 = src[4],\n        src5 = src[5],\n        src6 = src[6],\n        src7 = src[7];\n    dst[0] = tmp[0] * src5 + tmp[3] * src6 + tmp[4] * src7;\n    dst[0] -= tmp[1] * src5 + tmp[2] * src6 + tmp[5] * src7;\n    dst[1] = tmp[1] * src4 + tmp[6] * src6 + tmp[9] * src7;\n    dst[1] -= tmp[0] * src4 + tmp[7] * src6 + tmp[8] * src7;\n    dst[2] = tmp[2] * src4 + tmp[7] * src5 + tmp[10] * src7;\n    dst[2] -= tmp[3] * src4 + tmp[6] * src5 + tmp[11] * src7;\n    dst[3] = tmp[5] * src4 + tmp[8] * src5 + tmp[11] * src6;\n    dst[3] -= tmp[4] * src4 + tmp[9] * src5 + tmp[10] * src6;\n    dst[4] = tmp[1] * src1 + tmp[2] * src2 + tmp[5] * src3;\n    dst[4] -= tmp[0] * src1 + tmp[3] * src2 + tmp[4] * src3;\n    dst[5] = tmp[0] * src0 + tmp[7] * src2 + tmp[8] * src3;\n    dst[5] -= tmp[1] * src0 + tmp[6] * src2 + tmp[9] * src3;\n    dst[6] = tmp[3] * src0 + tmp[6] * src1 + tmp[11] * src3;\n    dst[6] -= tmp[2] * src0 + tmp[7] * src1 + tmp[10] * src3;\n    dst[7] = tmp[4] * src0 + tmp[9] * src1 + tmp[10] * src2;\n    dst[7] -= tmp[5] * src0 + tmp[8] * src1 + tmp[11] * src2; // calculate pairs for second 8 elements (cofactors)\n\n    tmp[0] = src2 * src7;\n    tmp[1] = src3 * src6;\n    tmp[2] = src1 * src7;\n    tmp[3] = src3 * src5;\n    tmp[4] = src1 * src6;\n    tmp[5] = src2 * src5;\n    tmp[6] = src0 * src7;\n    tmp[7] = src3 * src4;\n    tmp[8] = src0 * src6;\n    tmp[9] = src2 * src4;\n    tmp[10] = src0 * src5;\n    tmp[11] = src1 * src4; // calculate second 8 elements (cofactors)\n\n    src0 = src[8];\n    src1 = src[9];\n    src2 = src[10];\n    src3 = src[11];\n    src4 = src[12];\n    src5 = src[13];\n    src6 = src[14];\n    src7 = src[15];\n    dst[8] = tmp[0] * src5 + tmp[3] * src6 + tmp[4] * src7;\n    dst[8] -= tmp[1] * src5 + tmp[2] * src6 + tmp[5] * src7;\n    dst[9] = tmp[1] * src4 + tmp[6] * src6 + tmp[9] * src7;\n    dst[9] -= tmp[0] * src4 + tmp[7] * src6 + tmp[8] * src7;\n    dst[10] = tmp[2] * src4 + tmp[7] * src5 + tmp[10] * src7;\n    dst[10] -= tmp[3] * src4 + tmp[6] * src5 + tmp[11] * src7;\n    dst[11] = tmp[5] * src4 + tmp[8] * src5 + tmp[11] * src6;\n    dst[11] -= tmp[4] * src4 + tmp[9] * src5 + tmp[10] * src6;\n    dst[12] = tmp[2] * src2 + tmp[5] * src3 + tmp[1] * src1;\n    dst[12] -= tmp[4] * src3 + tmp[0] * src1 + tmp[3] * src2;\n    dst[13] = tmp[8] * src3 + tmp[0] * src0 + tmp[7] * src2;\n    dst[13] -= tmp[6] * src2 + tmp[9] * src3 + tmp[1] * src0;\n    dst[14] = tmp[6] * src1 + tmp[11] * src3 + tmp[3] * src0;\n    dst[14] -= tmp[10] * src3 + tmp[2] * src0 + tmp[7] * src1;\n    dst[15] = tmp[10] * src2 + tmp[4] * src0 + tmp[9] * src1;\n    dst[15] -= tmp[8] * src1 + tmp[11] * src2 + tmp[5] * src0;\n    var det = 1.0 / (src[0] * dst[0] + src[1] * dst[1] + src[2] * dst[2] + src[3] * dst[3]);\n\n    for (i = 0, k = 0; i < 4; i++) {\n      var m = this.matrix[i];\n\n      for (var j = 0; j < 4; j++) {\n        m[j] = dst[k++] * det;\n      }\n    }\n\n    return this;\n  },\n  multiply: function (a) {\n    if (typeof a == \"number\") {\n      return new Matrix4x4(this).multiply(a);\n    } //otherwise it should be a Matrix4x4\n\n\n    return new Matrix4x4(this).multiplySelf(a);\n  },\n  multiplySelf: function (a) {\n    var i = 0,\n        m;\n\n    if (typeof a == \"number\") {\n      for (i = 0; i < 4; i++) {\n        m = this.matrix[i];\n        m[0] *= a;\n        m[1] *= a;\n        m[2] *= a;\n        m[3] *= a;\n      }\n\n      return this;\n    } //otherwise it should be a matrix4x4\n\n\n    var mm0 = a.matrix[0],\n        mm1 = a.matrix[1],\n        mm2 = a.matrix[2],\n        mm3 = a.matrix[3];\n\n    for (i = 0; i < 4; i++) {\n      m = this.matrix[i];\n\n      for (var j = 0; j < 4; j++) {\n        this.temp[j] = m[0] * mm0[j] + m[1] * mm1[j] + m[2] * mm2[j] + m[3] * mm3[j];\n      }\n\n      m[0] = this.temp[0];\n      m[1] = this.temp[1];\n      m[2] = this.temp[2];\n      m[3] = this.temp[3];\n    }\n\n    return this;\n  },\n\n  /**\n   * Applies rotation about arbitrary axis to matrix\n   *\n   * @param axis\n   * @param theta\n   * @return rotation applied to this matrix\n   */\n  rotateAroundAxis: function (axis, theta) {\n    var x, y, z, s, c, t, tx, ty;\n    x = axis.x;\n    y = axis.y;\n    z = axis.z;\n    s = Math.sin(theta);\n    c = Math.cos(theta);\n    t = 1 - c;\n    tx = t * x;\n    ty = t * y;\n\n    _TEMP.set(tx * x + c, tx * y + s * z, tx * z - s * y, 0, tx * y - s * z, ty * y + c, ty * z + s * x, 0, tx * z + s * y, ty * z - s * x, t * z * z + c, 0, 0, 0, 0, 1);\n\n    return this.multiplySelf(_TEMP);\n  },\n\n  /**\n   * Applies rotation about X to this matrix.\n   *\n   * @param theta\n   *            rotation angle in radians\n   * @return itself\n   */\n  rotateX: function (theta) {\n    _TEMP.identity();\n\n    _TEMP.matrix[1][1] = _TEMP.matrix[2][2] = Math.cos(theta);\n    _TEMP.matrix[2][1] = Math.sin(theta);\n    _TEMP.matrix[1][2] = -_TEMP.matrix[2][1];\n    return this.multiplySelf(_TEMP);\n  },\n\n  /**\n   * Applies rotation about Y to this matrix.\n   *\n   * @param theta\n   *            rotation angle in radians\n   * @return itself\n   */\n  rotateY: function (theta) {\n    _TEMP.identity();\n\n    _TEMP.matrix[0][0] = _TEMP.matrix[2][2] = Math.cos(theta);\n    _TEMP.matrix[0][2] = Math.sin(theta);\n    _TEMP.matrix[2][0] = -_TEMP.matrix[0][2];\n    return this.multiplySelf(_TEMP);\n  },\n  // Apply Rotation about Z to Matrix\n  rotateZ: function (theta) {\n    _TEMP.identity();\n\n    _TEMP.matrix[0][0] = _TEMP.matrix[1][1] = Math.cos(theta);\n    _TEMP.matrix[1][0] = Math.sin(theta);\n    _TEMP.matrix[0][1] = -_TEMP.matrix[1][0];\n    return this.multiplySelf(_TEMP);\n  },\n  scale: function (a, b, c) {\n    return new Matrix4x4(this).scaleSelf(a, b, c);\n  },\n  scaleSelf: function (a, b, c) {\n    if (internals.has.XYZ(a)) {\n      b = a.y;\n      c = a.z;\n      a = a.x;\n    } else if (b === undefined || c === undefined) {\n      b = a;\n      c = a;\n    }\n\n    _TEMP.identity();\n\n    _TEMP.matrix[0][0] = a;\n    _TEMP.matrix[1][1] = b;\n    _TEMP.matrix[2][2] = c;\n    return this.multiplySelf(_TEMP);\n  },\n  set: function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n    var mat;\n\n    if (typeof a == \"number\") {\n      mat = this.matrix[0];\n      mat[0] = a;\n      mat[1] = b;\n      mat[2] = c;\n      mat[3] = d;\n      mat = this.matrix[1];\n      mat[0] = e;\n      mat[1] = f;\n      mat[2] = g;\n      mat[3] = h;\n      mat = this.matrix[2];\n      mat[0] = i;\n      mat[1] = j;\n      mat[2] = k;\n      mat[3] = l;\n      mat = this.matrix[3];\n      mat[0] = m;\n      mat[1] = n;\n      mat[2] = o;\n      mat[3] = p;\n    } else {\n      //it must be a matrix4x4\n      for (var it_n = 0; it_n < 4; it_n++) {\n        mat = this.matrix[it_n];\n        var mat_n = mat.matrix[it_n];\n        mat[0] = mat_n[0];\n        mat[1] = mat_n[1];\n        mat[2] = mat_n[2];\n        mat[3] = mat_n[3];\n      }\n    }\n\n    return this;\n  },\n  setFrustrum: function (left, right, top, bottom, near, far) {\n    var rl = right - left,\n        tb = top - bottom,\n        fn = far - near;\n    return this.set(2.0 * near / rl, 0, (left + right) / rl, 0, 0, 2.0 * near / tb, (top + bottom) / tb, 0, 0, 0, -(near + far) / fn, -2 * near * far / fn, 0, 0, -1, 0);\n  },\n  setOrtho: function (left, right, top, bottom, near, far) {\n    var mat = [2.0 / (right - left), 0, 0, (left + right) / (right - left), 0, 2.0 / (top - bottom), 0, (top + bottom) / (top - bottom), 0, 0, -2.0 / (far - near), (far + near) / (far - near), 0, 0, 0, 1];\n    return this.set.apply(this, mat);\n  },\n  setPerspective: function (fov, aspect, near, far) {\n    var y = near * Math.tan(0.5 * mathUtils.radians(fov)),\n        x = aspect * y;\n    return this.setFrustrum(-x, x, y, -y, near, far);\n  },\n  setPosition: function (x, y, z) {\n    this.matrix[0][3] = x;\n    this.matrix[1][3] = y;\n    this.matrix[2][3] = z;\n    return this;\n  },\n  setScale: function (sX, sY, sZ) {\n    this.matrix[0][0] = sX;\n    this.matrix[1][1] = sY;\n    this.matrix[2][2] = sZ;\n    return this;\n  },\n  sub: function (m) {\n    return new Matrix4x4(this).subSelf(m);\n  },\n  subSelf: function (mat) {\n    for (var i = 0; i < 4; i++) {\n      var m = this.matrix[i];\n      var n = mat.matrix[i];\n      m[0] -= n[0];\n      m[1] -= n[1];\n      m[2] -= n[2];\n      m[3] -= n[3];\n    }\n\n    return this;\n  },\n\n  /**\n   * Copies all matrix elements into an linear array.\n   *\n   * @param result\n   *            array (or null to create a new one)\n   * @return matrix as 16 element array\n   */\n  toArray: function (result) {\n    if (result === undefined) {\n      result = [];\n    }\n\n    for (var i = 0, k = 0; i < 4; i++) {\n      var m = this.matrix[i];\n\n      for (var j = 0; j < 4; j++) {\n        result[k++] = m[j];\n      }\n    }\n\n    return result;\n  },\n  toFloatArray: function (result) {\n    return new Float32Array(this.toArray(result));\n  },\n\n  /*\n   * (non-Javadoc)\n   *\n   * @see java.lang.Object#toString()\n   */\n  toString: function () {\n    return \"| \" + this.matrix[0][0] + \" \" + this.matrix[0][1] + \" \" + this.matrix[0][2] + \" \" + this.matrix[0][3] + \" |\\n\" + \"| \" + this.matrix[1][0] + \" \" + this.matrix[1][1] + \" \" + this.matrix[1][2] + \" \" + this.matrix[1][3] + \" |\\n\" + \"| \" + this.matrix[2][0] + \" \" + this.matrix[2][1] + \" \" + this.matrix[2][2] + \" \" + this.matrix[2][3] + \" |\\n\" + \"| \" + this.matrix[3][0] + \" \" + this.matrix[3][1] + \" \" + this.matrix[3][2] + \" \" + this.matrix[3][3] + \" |\";\n  },\n  toTransposedFloatArray: function (result) {\n    if (result === undefined) {\n      result = [];\n    }\n\n    for (var i = 0, k = 0; i < 4; i++) {\n      for (var j = 0; j < 4; j++) {\n        result[k++] = this.matrix[j][i];\n      }\n    }\n\n    return result;\n  },\n  translate: function (dx, dy, dz) {\n    return new Matrix4x4(this).translateSelf(dx, dy, dz);\n  },\n  translateSelf: function (dx, dy, dz) {\n    if (internals.has.XYZ(dx)) {\n      dy = dx.y;\n      dz = dx.z;\n      dx = dx.x;\n    }\n\n    _TEMP.identity();\n\n    _TEMP.setPosition(dx, dy, dz);\n\n    return this.multiplySelf(_TEMP);\n  },\n\n  /**\n   * Converts the matrix (in-place) between column-major to row-major order\n   * (and vice versa).\n   *\n   * @return itself\n   */\n  transpose: function () {\n    return this.set(this.matrix[0][0], this.matrix[1][0], this.matrix[2][0], this.matrix[3][0], this.matrix[0][1], this.matrix[1][1], this.matrix[2][1], this.matrix[3][1], this.matrix[0][2], this.matrix[1][2], this.matrix[2][2], this.matrix[3][2], this.matrix[0][3], this.matrix[1][3], this.matrix[2][3], this.matrix[3][3]);\n  }\n}; //private temp matrix\n\nvar _TEMP = new Matrix4x4();\n\nmodule.exports = Matrix4x4;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/geom/Matrix4x4.js"],"names":["mathUtils","require","internals","Vec3D","Matrix4x4","v11","v12","v13","v14","v21","v22","v23","v24","v31","v32","v33","v34","v41","v42","v43","v44","temp","matrix","self","arguments","length","m1","m2","m3","m4","is","Array","array","Error","slice","NaN","m","i","j","lenM","lenMM","console","error","prototype","add","rhs","result","addSelf","mi","rhsm","applyTo","v","applyToSelf","x","y","z","set","scaleSelf","copy","getInverted","invert","getRotatedAroundAxis","axis","theta","rotateAroundAxis","getRotatedX","rotateX","getRotatedY","rotateY","getRotatedZ","rotateZ","getTransposed","transpose","identity","tmp","src","dst","mat","toArray","i4","src0","src1","src2","src3","src4","src5","src6","src7","det","k","multiply","a","multiplySelf","mm0","mm1","mm2","mm3","s","c","t","tx","ty","Math","sin","cos","_TEMP","scale","b","has","XYZ","undefined","d","e","f","g","h","l","n","o","p","it_n","mat_n","setFrustrum","left","right","top","bottom","near","far","rl","tb","fn","setOrtho","apply","setPerspective","fov","aspect","tan","radians","setPosition","setScale","sX","sY","sZ","sub","subSelf","toFloatArray","Float32Array","toString","toTransposedFloatArray","translate","dx","dy","dz","translateSelf","module","exports"],"mappings":"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","sourcesContent":["\n\nvar mathUtils = require('../math/mathUtils'),\n    internals = require('../internals'),\n\tVec3D = require('./Vec3D');\n\n\n/**\n * @description Implements a simple row-major 4x4 matrix class, all matrix operations are\n * applied to new instances. Use {@link #transpose()} to convert from\n * column-major formats...\n * @exports Matrix4x4 as toxi.Matrix4x4\n * @constructor\n */\nvar Matrix4x4 = function(v11,v12,v13,v14,v21,v22,v23,v24,v31,v32,v33,v34,v41,v42,v43,v44){\n\tthis.temp = [];\n\tthis.matrix = [];\n\tvar self = this;\n\tif(arguments.length === 0) { //if no variables were supplied\n\t\tthis.matrix[0] = [1,0,0,0];\n\t\tthis.matrix[1] = [0,1,0,0];\n\t\tthis.matrix[2] = [0,0,1,0];\n\t\tthis.matrix[3] = [0,0,0,1];\n\t} else if(typeof(v11) == 'number'){ //if the variables were numbers\n\t\tvar m1 = [v11,v12,v13,v14];\n\t\tvar m2 = [v21,v22,v23,v24];\n\t\tvar m3 = [v31,v32,v33,v34];\n\t\tvar m4 = [v41,v42,v43,v44];\n\t\tthis.matrix = [m1,m2,m3,m4];\n\t} else if( internals.is.Array( v11 ) ){ //if it was sent in as one array\n\t\tvar array = v11;\n\t\tif (array.length != 9 && array.length != 16) {\n\t\t\tthrow new Error(\"Matrix4x4: Array length must == 9 or 16\");\n\t\t}\n\t\tif (array.length == 16) {\n\t\t\tthis.matrix = [];\n\t\t\tthis.matrix[0] = array.slice(0,4);\n\t\t\tthis.matrix[1] = array.slice(4,8);\n\t\t\tthis.matrix[2] = array.slice(8,12);\n\t\t\tthis.matrix[3] = array.slice(12);\n\t\t} else {\n\t\t\tthis.matrix[0] = array.slice(0,3);\n\t\t\tthis.matrix[0][3] = NaN;\n\t\t\tthis.matrix[1] = array.slice(3,6);\n\t\t\tthis.matrix[1][3] = NaN;\n\t\t\tthis.matrix[2] = array.slice(6,9);\n\t\t\tthis.matrix[2][3] = NaN;\n\t\t\tthis.matrix[3] = [NaN,NaN,NaN,NaN];\n\t\t}\n\t} else if( internals.is.Matrix4x4( v11 ) ){\n\n\t//else it should've been a Matrix4x4 that was passed in\n\t\tvar m = v11,\n\t\t\ti = 0,\n\t\t\tj = 0,\n\t\t\tlenM,\n\t\t\tlenMM;\n\n\t\tif(m.matrix.length == 16){\n\t\t\tfor(i=0;i<4;i++){\n\t\t\t\tthis.matrix[i] = [m.matrix[i][0], m.matrix[i][1],m.matrix[i][2],m.matrix[i][3]];\n\t\t\t}\n\t\t} else {\n\t\t\tif(m.matrix.length == 4){\n\t\t\t\tlenM = m.matrix.length;\n\t\t\t\tfor(i = 0; i < lenM; i++){\n\t\t\t\t\tlenMM = m.matrix[i].length;\n\t\t\t\t\tself.matrix[i] = [];\n\t\t\t\t\tfor(j = 0; j < lenMM; j++){\n\t\t\t\t\t\tself.matrix[i][j] = m.matrix[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*console.log(\"m.matrix.length: \"+m.matrix.length);\n\t\t\t//should be a length of 9\n\t\t\tfor(i=0;i<3;i++){\n\t\t\t\tthis.matrix[i] = [m.matrix[i][0], m.matrix[i][1],m.matrix[i][2],NaN];\n\t\t\t}\n\t\t\tthis.matrix[3] = [NaN,NaN,NaN,NaN];*/\n\t\t}\n\t} else {\n\t\tconsole.error(\"Matrix4x4: incorrect parameters used to construct new instance\");\n\t}\n};\n\nMatrix4x4.prototype = {\n\tadd: function(rhs) {\n        var result = new Matrix4x4(this);\n        return result.addSelf(rhs);\n    },\n\n    addSelf: function(m) {\n        for (var i = 0; i < 4; i++) {\n            var mi = this.matrix[i];\n            var rhsm = m.matrix[i];\n            mi[0] += rhsm[0];\n            mi[1] += rhsm[1];\n            mi[2] += rhsm[2];\n            mi[3] += rhsm[3];\n        }\n        return this;\n    },\n\n    /**\n     * Creates a copy of the given vector, transformed by this matrix.\n     *\n     * @param v\n     * @return transformed vector\n     */\n    applyTo: function(v) {\n        return this.applyToSelf(new Vec3D(v));\n    },\n\n    applyToSelf: function(v) {\n        for (var i = 0; i < 4; i++) {\n            var m = this.matrix[i];\n            this.temp[i] = v.x * m[0] + v.y * m[1] + v.z * m[2] + m[3];\n        }\n        v.set(this.temp[0], this.temp[1], this.temp[2]).scaleSelf((1.0 / this.temp[3]));\n        return v;\n    },\n\n    copy: function() {\n        return new Matrix4x4(this);\n    },\n\n    getInverted: function() {\n        return new Matrix4x4(this).invert();\n    },\n\n    getRotatedAroundAxis: function(axis,theta) {\n        return new Matrix4x4(this).rotateAroundAxis(axis, theta);\n    },\n\n    getRotatedX: function(theta) {\n        return new Matrix4x4(this).rotateX(theta);\n    },\n\n    getRotatedY: function(theta) {\n        return new Matrix4x4(this).rotateY(theta);\n    },\n\n    getRotatedZ: function(theta) {\n        return new Matrix4x4(this).rotateZ(theta);\n    },\n\n    getTransposed: function() {\n        return new Matrix4x4(this).transpose();\n    },\n\n    identity: function() {\n        var m = this.matrix[0];\n        m[1] = m[2] = m[3] = 0;\n        m = this.matrix[1];\n        m[0] = m[2] = m[3] = 0;\n        m = this.matrix[2];\n        m[0] = m[1] = m[3] = 0;\n        m = this.matrix[3];\n        m[0] = m[1] = m[2] = 0;\n        this.matrix[0][0] = 1;\n        this.matrix[1][1] = 1;\n        this.matrix[2][2] = 1;\n        this.matrix[3][3] = 1;\n        return this;\n    },\n\n    /**\n     * Matrix Inversion using Cramer's Method Computes Adjoint matrix divided by\n     * determinant Code modified from\n     * http://www.intel.com/design/pentiumiii/sml/24504301.pdf\n     *\n     * @return itself\n     */\n\tinvert: function() {\n        var tmp = [], //12\n\t\t\tsrc = [], //16\n\t\t\tdst = [], //16\n\t\t\tmat = this.toArray(),\n\t\t\ti = 0;\n\n        for (i = 0; i < 4; i++) {\n            var i4 = i << 2;\n            src[i] = mat[i4];\n            src[i + 4] = mat[i4 + 1];\n            src[i + 8] = mat[i4 + 2];\n            src[i + 12] = mat[i4 + 3];\n        }\n\n        // calculate pairs for first 8 elements (cofactors)\n        tmp[0] = src[10] * src[15];\n        tmp[1] = src[11] * src[14];\n        tmp[2] = src[9] * src[15];\n        tmp[3] = src[11] * src[13];\n        tmp[4] = src[9] * src[14];\n        tmp[5] = src[10] * src[13];\n        tmp[6] = src[8] * src[15];\n        tmp[7] = src[11] * src[12];\n        tmp[8] = src[8] * src[14];\n        tmp[9] = src[10] * src[12];\n        tmp[10] = src[8] * src[13];\n        tmp[11] = src[9] * src[12];\n\n        // calculate first 8 elements (cofactors)\n        var src0 = src[0],\n\t\t\tsrc1 = src[1],\n\t\t\tsrc2 = src[2],\n\t\t\tsrc3 = src[3],\n\t\t\tsrc4 = src[4],\n\t\t\tsrc5 = src[5],\n\t\t\tsrc6 = src[6],\n\t\t\tsrc7 = src[7];\n\t\tdst[0] = tmp[0] * src5 + tmp[3] * src6 + tmp[4] * src7;\n\t\tdst[0] -= tmp[1] * src5 + tmp[2] * src6 + tmp[5] * src7;\n\t\tdst[1] = tmp[1] * src4 + tmp[6] * src6 + tmp[9] * src7;\n\t\tdst[1] -= tmp[0] * src4 + tmp[7] * src6 + tmp[8] * src7;\n\t\tdst[2] = tmp[2] * src4 + tmp[7] * src5 + tmp[10] * src7;\n\t\tdst[2] -= tmp[3] * src4 + tmp[6] * src5 + tmp[11] * src7;\n\t\tdst[3] = tmp[5] * src4 + tmp[8] * src5 + tmp[11] * src6;\n\t\tdst[3] -= tmp[4] * src4 + tmp[9] * src5 + tmp[10] * src6;\n\t\tdst[4] = tmp[1] * src1 + tmp[2] * src2 + tmp[5] * src3;\n\t\tdst[4] -= tmp[0] * src1 + tmp[3] * src2 + tmp[4] * src3;\n\t\tdst[5] = tmp[0] * src0 + tmp[7] * src2 + tmp[8] * src3;\n\t\tdst[5] -= tmp[1] * src0 + tmp[6] * src2 + tmp[9] * src3;\n\t\tdst[6] = tmp[3] * src0 + tmp[6] * src1 + tmp[11] * src3;\n\t\tdst[6] -= tmp[2] * src0 + tmp[7] * src1 + tmp[10] * src3;\n\t\tdst[7] = tmp[4] * src0 + tmp[9] * src1 + tmp[10] * src2;\n\t\tdst[7] -= tmp[5] * src0 + tmp[8] * src1 + tmp[11] * src2;\n\n        // calculate pairs for second 8 elements (cofactors)\n\t\ttmp[0] = src2 * src7;\n\t\ttmp[1] = src3 * src6;\n\t\ttmp[2] = src1 * src7;\n\t\ttmp[3] = src3 * src5;\n\t\ttmp[4] = src1 * src6;\n\t\ttmp[5] = src2 * src5;\n\t\ttmp[6] = src0 * src7;\n\t\ttmp[7] = src3 * src4;\n\t\ttmp[8] = src0 * src6;\n\t\ttmp[9] = src2 * src4;\n\t\ttmp[10] = src0 * src5;\n\t\ttmp[11] = src1 * src4;\n\n        // calculate second 8 elements (cofactors)\n\t\tsrc0 = src[8];\n\t\tsrc1 = src[9];\n\t\tsrc2 = src[10];\n\t\tsrc3 = src[11];\n\t\tsrc4 = src[12];\n\t\tsrc5 = src[13];\n\t\tsrc6 = src[14];\n\t\tsrc7 = src[15];\n\t\tdst[8] = tmp[0] * src5 + tmp[3] * src6 + tmp[4] * src7;\n\t\tdst[8] -= tmp[1] * src5 + tmp[2] * src6 + tmp[5] * src7;\n\t\tdst[9] = tmp[1] * src4 + tmp[6] * src6 + tmp[9] * src7;\n\t\tdst[9] -= tmp[0] * src4 + tmp[7] * src6 + tmp[8] * src7;\n\t\tdst[10] = tmp[2] * src4 + tmp[7] * src5 + tmp[10] * src7;\n\t\tdst[10] -= tmp[3] * src4 + tmp[6] * src5 + tmp[11] * src7;\n\t\tdst[11] = tmp[5] * src4 + tmp[8] * src5 + tmp[11] * src6;\n\t\tdst[11] -= tmp[4] * src4 + tmp[9] * src5 + tmp[10] * src6;\n\t\tdst[12] = tmp[2] * src2 + tmp[5] * src3 + tmp[1] * src1;\n\t\tdst[12] -= tmp[4] * src3 + tmp[0] * src1 + tmp[3] * src2;\n\t\tdst[13] = tmp[8] * src3 + tmp[0] * src0 + tmp[7] * src2;\n\t\tdst[13] -= tmp[6] * src2 + tmp[9] * src3 + tmp[1] * src0;\n\t\tdst[14] = tmp[6] * src1 + tmp[11] * src3 + tmp[3] * src0;\n\t\tdst[14] -= tmp[10] * src3 + tmp[2] * src0 + tmp[7] * src1;\n\t\tdst[15] = tmp[10] * src2 + tmp[4] * src0 + tmp[9] * src1;\n\t\tdst[15] -= tmp[8] * src1 + tmp[11] * src2 + tmp[5] * src0;\n\n\t\tvar det = 1.0 / (src[0] * dst[0] + src[1] * dst[1] + src[2] * dst[2] + src[3] * dst[3]);\n\t\tfor (i = 0, k = 0; i < 4; i++) {\n\t\t\tvar m = this.matrix[i];\n\t\t\tfor (var j = 0; j < 4; j++) {\n\t\t\t\tm[j] = dst[k++] * det;\n\t\t\t}\n\t\t}\n\t\treturn this;\n    },\n\n    multiply: function(a) {\n\t\tif(typeof(a) == \"number\"){\n\t\t\treturn new Matrix4x4(this).multiply(a);\n\t\t}\n\t\t//otherwise it should be a Matrix4x4\n\t\treturn new Matrix4x4(this).multiplySelf(a);\n    },\n\n    multiplySelf: function(a) {\n\t\tvar i = 0,\n\t\t\tm;\n\t\tif(typeof(a) == \"number\"){\n\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\tm = this.matrix[i];\n\t\t\t\tm[0] *= a;\n\t\t\t\tm[1] *= a;\n\t\t\t\tm[2] *= a;\n\t\t\t\tm[3] *= a;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\t//otherwise it should be a matrix4x4\n\t\tvar mm0 = a.matrix[0],\n\t\t\tmm1 = a.matrix[1],\n\t\t\tmm2 = a.matrix[2],\n\t\t\tmm3 = a.matrix[3];\n        for (i = 0; i < 4; i++) {\n            m = this.matrix[i];\n            for (var j = 0; j < 4; j++) {\n                this.temp[j] = m[0] * mm0[j] + m[1] * mm1[j] + m[2] * mm2[j] + m[3] * mm3[j];\n            }\n            m[0] = this.temp[0];\n            m[1] = this.temp[1];\n            m[2] = this.temp[2];\n            m[3] = this.temp[3];\n        }\n        return this;\n    },\n    /**\n     * Applies rotation about arbitrary axis to matrix\n     *\n     * @param axis\n     * @param theta\n     * @return rotation applied to this matrix\n     */\n    rotateAroundAxis: function(axis, theta) {\n        var x, y, z, s, c, t, tx, ty;\n        x = axis.x;\n        y = axis.y;\n        z = axis.z;\n        s = Math.sin(theta);\n        c = Math.cos(theta);\n        t = 1 - c;\n        tx = t * x;\n        ty = t * y;\n\t\t_TEMP.set(\n\t\t\ttx * x + c, tx * y + s * z, tx * z - s * y, 0, tx * y - s * z,\n\t\t\tty * y + c, ty * z + s * x, 0, tx * z + s * y, ty * z - s * x,\n\t\t\tt * z * z + c, 0, 0, 0, 0, 1\n\t\t);\n        return this.multiplySelf(_TEMP);\n    },\n\n    /**\n     * Applies rotation about X to this matrix.\n     *\n     * @param theta\n     *            rotation angle in radians\n     * @return itself\n     */\n    rotateX: function(theta) {\n        _TEMP.identity();\n        _TEMP.matrix[1][1] = _TEMP.matrix[2][2] = Math.cos(theta);\n        _TEMP.matrix[2][1] = Math.sin(theta);\n        _TEMP.matrix[1][2] = -_TEMP.matrix[2][1];\n        return this.multiplySelf(_TEMP);\n    },\n\n    /**\n     * Applies rotation about Y to this matrix.\n     *\n     * @param theta\n     *            rotation angle in radians\n     * @return itself\n     */\n    rotateY: function(theta) {\n        _TEMP.identity();\n        _TEMP.matrix[0][0] = _TEMP.matrix[2][2] = Math.cos(theta);\n        _TEMP.matrix[0][2] = Math.sin(theta);\n        _TEMP.matrix[2][0] = -_TEMP.matrix[0][2];\n        return this.multiplySelf(_TEMP);\n    },\n\n    // Apply Rotation about Z to Matrix\n    rotateZ: function(theta) {\n        _TEMP.identity();\n        _TEMP.matrix[0][0] = _TEMP.matrix[1][1] = Math.cos(theta);\n        _TEMP.matrix[1][0] = Math.sin(theta);\n        _TEMP.matrix[0][1] = -_TEMP.matrix[1][0];\n        return this.multiplySelf(_TEMP);\n    },\n\n    scale: function(a,b,c) {\n\t\treturn new Matrix4x4(this).scaleSelf(a,b,c);\n    },\n\n    scaleSelf: function(a,b,c) {\n\t\tif( internals.has.XYZ( a ) ){\n\t\t\tb = a.y;\n\t\t\tc = a.z;\n\t\t\ta = a.x;\n\t\t} else if(b === undefined || c === undefined) {\n\t\t\tb = a;\n\t\t\tc = a;\n\t\t}\n        _TEMP.identity();\n        _TEMP.matrix[0][0] = a;\n        _TEMP.matrix[1][1] = b;\n        _TEMP.matrix[2][2] = c;\n        return this.multiplySelf(_TEMP);\n    },\n\n\tset: function(a,b,c, d, e,f,g, h, i, j, k, l, m, n, o, p) {\n\t\tvar mat;\n\t\tif(typeof(a) == \"number\"){\n\t\t\tmat = this.matrix[0];\n\t\t\tmat[0] = a;\n\t\t\tmat[1] = b;\n\t\t\tmat[2] = c;\n\t\t\tmat[3] = d;\n\t\t\tmat = this.matrix[1];\n\t\t\tmat[0] = e;\n\t\t\tmat[1] = f;\n\t\t\tmat[2] = g;\n\t\t\tmat[3] = h;\n\t\t\tmat = this.matrix[2];\n\t\t\tmat[0] = i;\n\t\t\tmat[1] = j;\n\t\t\tmat[2] = k;\n\t\t\tmat[3] = l;\n\t\t\tmat = this.matrix[3];\n\t\t\tmat[0] = m;\n\t\t\tmat[1] = n;\n\t\t\tmat[2] = o;\n\t\t\tmat[3] = p;\n\t\t} else {\n\t\t\t//it must be a matrix4x4\n\t\t\tfor (var it_n = 0; it_n < 4; it_n++) {\n\t            mat = this.matrix[it_n];\n\t\t\t\tvar mat_n = mat.matrix[it_n];\n\t\t\t\tmat[0] = mat_n[0];\n\t\t\t\tmat[1] = mat_n[1];\n\t\t\t\tmat[2] = mat_n[2];\n\t\t\t\tmat[3] = mat_n[3];\n\t\t\t}\n\t\t}\n\t\treturn this;\n    },\n\n    setFrustrum: function(left,right,top,bottom,near,far){\n    \tvar rl = (right - left),\n    \t\ttb = (top - bottom),\n    \t\tfn = (far - near);\n\n\n    \treturn this.set(\n    \t\t(2.0 * near) / rl,\n    \t\t0,\n    \t\t(left + right) / rl,\n    \t\t0,\n    \t\t0,\n    \t\t(2.0 * near) / tb,\n    \t\t(top + bottom) / tb,\n    \t\t0,\n    \t\t0,\n    \t\t0,\n    \t\t-(near + far) / fn,\n    \t\t(-2 * near * far) / fn,\n    \t\t0,\n    \t\t0,\n    \t\t-1,\n    \t\t0\n    \t);\n    },\n\n    setOrtho: function(left,right,top,bottom,near,far){\n    \tvar mat = [\n    \t\t2.0 / (right - left),\n    \t\t0,\n    \t\t0,\n    \t\t(left + right) / (right - left),\n            0,\n            2.0 / (top - bottom),\n            0,\n            (top + bottom) / (top - bottom),\n            0,\n            0,\n            -2.0 / (far - near),\n            (far + near) / (far - near),\n            0,\n            0,\n            0,\n            1\n    \t];\n\n    \treturn this.set.apply(this,mat);\n    },\n\n    setPerspective: function(fov,aspect,near,far){\n    \tvar y = near * Math.tan(0.5 * mathUtils.radians(fov)),\n    \t\tx = aspect * y;\n    \treturn this.setFrustrum(-x,x,y,-y,near,far);\n    },\n\n    setPosition: function(x,y,z){\n    \tthis.matrix[0][3] = x;\n    \tthis.matrix[1][3] = y;\n    \tthis.matrix[2][3] = z;\n    \treturn this;\n    },\n\n    setScale: function(sX,sY,sZ){\n    \tthis.matrix[0][0] = sX;\n    \tthis.matrix[1][1] = sY;\n    \tthis.matrix[2][2] = sZ;\n    \treturn this;\n    },\n\n\n    sub: function(m) {\n\t\treturn new Matrix4x4(this).subSelf(m);\n    },\n\n    subSelf: function(mat) {\n        for (var i = 0; i < 4; i++) {\n            var m = this.matrix[i];\n            var n = mat.matrix[i];\n            m[0] -= n[0];\n            m[1] -= n[1];\n            m[2] -= n[2];\n            m[3] -= n[3];\n        }\n        return this;\n    },\n\n    /**\n     * Copies all matrix elements into an linear array.\n     *\n     * @param result\n     *            array (or null to create a new one)\n     * @return matrix as 16 element array\n     */\n    toArray: function(result) {\n        if (result === undefined) {\n            result = [];\n        }\n        for (var i = 0, k = 0; i < 4; i++) {\n            var m = this.matrix[i];\n            for (var j = 0; j < 4; j++) {\n                result[k++] = m[j];\n            }\n        }\n        return result;\n    },\n\n    toFloatArray:function(result) {\n        return new Float32Array(this.toArray(result));\n    },\n\n    /*\n     * (non-Javadoc)\n     *\n     * @see java.lang.Object#toString()\n     */\n    toString: function() {\n        return \"| \" + this.matrix[0][0] + \" \" + this.matrix[0][1] + \" \" + this.matrix[0][2] + \" \" + this.matrix[0][3] + \" |\\n\" + \"| \" + this.matrix[1][0] + \" \" + this.matrix[1][1] + \" \" + this.matrix[1][2] + \" \" + this.matrix[1][3] + \" |\\n\" + \"| \" + this.matrix[2][0] + \" \" + this.matrix[2][1] + \" \" + this.matrix[2][2] + \" \" + this.matrix[2][3] + \" |\\n\" + \"| \" + this.matrix[3][0] + \" \" + this.matrix[3][1] + \" \" + this.matrix[3][2] + \" \" + this.matrix[3][3] + \" |\";\n    },\n\n    toTransposedFloatArray: function(result) {\n        if (result === undefined) {\n            result = [];\n        }\n        for (var i = 0, k = 0; i < 4; i++) {\n            for (var j = 0; j < 4; j++) {\n                result[k++] = this.matrix[j][i];\n            }\n        }\n        return result;\n    },\n\n    translate: function(dx,dy,dz) {\n\t\treturn new Matrix4x4(this).translateSelf(dx, dy, dz);\n    },\n\n    translateSelf: function( dx, dy, dz) {\n\t\tif( internals.has.XYZ( dx ) ){\n\t\t\tdy = dx.y;\n\t\t\tdz = dx.z;\n\t\t\tdx = dx.x;\n\t\t}\n\t\t_TEMP.identity();\n\t\t_TEMP.setPosition(dx,dy,dz);\n\t\treturn this.multiplySelf(_TEMP);\n    },\n\n    /**\n     * Converts the matrix (in-place) between column-major to row-major order\n     * (and vice versa).\n     *\n     * @return itself\n     */\n    transpose: function() {\n        return this.set(\n\t\t\tthis.matrix[0][0], this.matrix[1][0], this.matrix[2][0], this.matrix[3][0],\n\t\t\tthis.matrix[0][1], this.matrix[1][1], this.matrix[2][1], this.matrix[3][1],\n\t\t\tthis.matrix[0][2], this.matrix[1][2], this.matrix[2][2], this.matrix[3][2],\n\t\t\tthis.matrix[0][3], this.matrix[1][3], this.matrix[2][3], this.matrix[3][3]\n\t\t);\n\t}\n};\n\n//private temp matrix\nvar _TEMP = new Matrix4x4();\n\nmodule.exports = Matrix4x4;\n\n\n"]},"metadata":{},"sourceType":"script"}