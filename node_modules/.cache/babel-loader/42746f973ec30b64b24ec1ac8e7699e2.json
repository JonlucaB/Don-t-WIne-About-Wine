{"ast":null,"code":"/**\n* @class\n* @static\n* @member toxi\n* @description math utilities\n*/\nvar MathUtils = {};\nMathUtils.SQRT2 = Math.sqrt(2);\nMathUtils.SQRT3 = Math.sqrt(3);\nMathUtils.LOG2 = Math.log(2);\nMathUtils.PI = 3.14159265358979323846;\n/**\n* The reciprocal of PI: (1/PI)\n*/\n\nMathUtils.INV_PI = 1.0 / MathUtils.PI;\nMathUtils.HALF_PI = MathUtils.PI / 2;\nMathUtils.THIRD_PI = MathUtils.PI / 3;\nMathUtils.QUARTER_PI = MathUtils.PI / 4;\nMathUtils.TWO_PI = MathUtils.PI * 2;\nMathUtils.THREE_HALVES_PI = MathUtils.TWO_PI - MathUtils.HALF_PI;\nMathUtils.PI_SQUARED = MathUtils.PI * MathUtils.PI;\n/**\n* Epsilon value\n*/\n\nMathUtils.EPS = 1.1920928955078125E-7;\n/**\n* Degrees to radians conversion factor\n*/\n\nMathUtils.DEG2RAD = MathUtils.PI / 180;\n/**\n* Radians to degrees conversion factor\n*/\n\nMathUtils.RAD2DEG = 180 / MathUtils.PI;\nMathUtils.SHIFT23 = 1 << 23;\nMathUtils.INV_SHIFT23 = 1.0 / MathUtils.SHIFT23;\nMathUtils.SIN_A = -4.0 / (MathUtils.PI * MathUtils.PI);\nMathUtils.SIN_B = 4.0 / MathUtils.PI;\nMathUtils.SIN_P = 9.0 / 40;\nMathUtils.abs = Math.abs;\n/**\n* Rounds up the value to the nearest higher power^2 value.\n*\n* @param x\n* @return power^2 value\n*/\n\nMathUtils.ceilPowerOf2 = function (x) {\n  var pow2 = 1;\n\n  while (pow2 < x) {\n    pow2 <<= 1;\n  }\n\n  return pow2;\n};\n\nMathUtils.clip = function (a, _min, _max) {\n  return a < _min ? _min : a > _max ? _max : a;\n};\n/**\n* Clips the value to the 0.0 .. 1.0 interval.\n*\n* @param a\n* @return clipped value\n* @since 0012\n*/\n\n\nMathUtils.clipNormalized = function (a) {\n  if (a < 0) {\n    return 0;\n  } else if (a > 1) {\n    return 1;\n  }\n\n  return a;\n};\n\nMathUtils.cos = Math.cos;\n\nMathUtils.degrees = function (radians) {\n  return radians * MathUtils.RAD2DEG;\n};\n/**\n* Fast cosine approximation.\n*\n* @param x\n*            angle in -PI/2 .. +PI/2 interval\n* @return cosine\n*/\n\n\nMathUtils.fastCos = function (x) {\n  return MathUtils.fastSin(x + (x > MathUtils.HALF_PI ? -MathUtils.THREE_HALVES_PI : MathUtils.HALF_PI));\n};\n/**\n* Fast sine approximation.\n*\n* @param x\n*            angle in -PI/2 .. +PI/2 interval\n* @return sine\n*/\n\n\nMathUtils.fastSin = function (x) {\n  x = MathUtils.SIN_B * x + MathUtils.SIN_A * x * Math.abs(x);\n  return MathUtils.SIN_P * (x * Math.abs(x) - x) + x;\n};\n\nMathUtils.flipCoin = function (rnd) {\n  return Math.random() < 0.5;\n};\n/**\n* This method is a *lot* faster than using (int)Math.floor(x).\n*\n* @param x\n*            value to be floored\n* @return floored value as integer\n*/\n\n\nMathUtils.floor = function (x) {\n  var y = ~~x;\n\n  if (x < 0 && x != y) {\n    y--;\n  }\n\n  return y;\n};\n/**\n* Rounds down the value to the nearest lower power^2 value.\n*\n* @param x\n* @return power^2 value\n*/\n\n\nMathUtils.floorPowerOf2 = function (x) {\n  return ~~Math.pow(2, parseInt(Math.log(x) / MathUtils.LOG2, 10));\n};\n\nMathUtils.max = function (a, b, c) {\n  if (c === undefined) {\n    return Math.max(a, b);\n  }\n\n  return a > b ? a > c ? a : c : b > c ? b : c;\n};\n\nMathUtils.min = function (a, b, c) {\n  if (c === undefined) {\n    return Math.min(a, b);\n  }\n\n  return a < b ? a < c ? a : c : b < c ? b : c;\n};\n/**\n* Returns a random number in the interval -1 .. +1.\n*\n* @return random float\n*/\n\n\nMathUtils.normalizedRandom = function () {\n  return Math.random() * 2 - 1;\n};\n\nMathUtils.radians = function (degrees) {\n  return degrees * MathUtils.DEG2RAD;\n};\n\nMathUtils.random = function (rand, min, max) {\n  //one param\n  if (arguments.length === 1) {\n    return Math.random() * arguments[0];\n  } else if (arguments.length == 2) {\n    //min and max\n    max = min;\n    min = rand;\n    rand = Math.random;\n  }\n\n  if (!min && !max) {\n    return Math.random();\n  } else if (!max) {\n    //if only one is provided, then thats actually the max\n    max = min;\n    return rand() * max;\n  }\n\n  return rand() * (max - min) + min;\n};\n\nMathUtils.reduceAngle = function (theta) {\n  theta %= MathUtils.TWO_PI;\n\n  if (Math.abs(theta) > MathUtils.PI) {\n    theta = theta - MathUtils.TWO_PI;\n  }\n\n  if (Math.abs(theta) > MathUtils.HALF_PI) {\n    theta = MathUtils.PI - theta;\n  }\n\n  return theta;\n};\n\nMathUtils.sign = function (x) {\n  return x < 0 ? -1 : x > 0 ? 1 : 0;\n};\n\nMathUtils.sin = function (theta) {\n  theta = MathUtils.reduceAngle(theta);\n\n  if (Math.abs(theta) <= MathUtils.QUARTER_PI) {\n    return MathUtils.fastSin(theta);\n  }\n\n  return MathUtils.fastCos(MathUtils.HALF_PI - theta);\n};\n\nmodule.exports = MathUtils;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/math/mathUtils.js"],"names":["MathUtils","SQRT2","Math","sqrt","SQRT3","LOG2","log","PI","INV_PI","HALF_PI","THIRD_PI","QUARTER_PI","TWO_PI","THREE_HALVES_PI","PI_SQUARED","EPS","DEG2RAD","RAD2DEG","SHIFT23","INV_SHIFT23","SIN_A","SIN_B","SIN_P","abs","ceilPowerOf2","x","pow2","clip","a","_min","_max","clipNormalized","cos","degrees","radians","fastCos","fastSin","flipCoin","rnd","random","floor","y","floorPowerOf2","pow","parseInt","max","b","c","undefined","min","normalizedRandom","rand","arguments","length","reduceAngle","theta","sign","sin","module","exports"],"mappings":"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","sourcesContent":["\n    /**\n    * @class\n    * @static\n    * @member toxi\n    * @description math utilities\n    */\n    var MathUtils = {};\n    MathUtils.SQRT2 = Math.sqrt(2);\n    MathUtils.SQRT3 = Math.sqrt(3);\n    MathUtils.LOG2 = Math.log(2);\n    MathUtils.PI = 3.14159265358979323846;\n\n    /**\n    * The reciprocal of PI: (1/PI)\n    */\n    MathUtils.INV_PI = 1.0 / MathUtils.PI;\n    MathUtils.HALF_PI = MathUtils.PI / 2;\n    MathUtils.THIRD_PI = MathUtils.PI / 3;\n    MathUtils.QUARTER_PI = MathUtils.PI / 4;\n    MathUtils.TWO_PI = MathUtils.PI * 2;\n    MathUtils.THREE_HALVES_PI = MathUtils.TWO_PI - MathUtils.HALF_PI;\n    MathUtils.PI_SQUARED = MathUtils.PI * MathUtils.PI;\n\n    /**\n    * Epsilon value\n    */\n    MathUtils.EPS = 1.1920928955078125E-7;\n\n    /**\n    * Degrees to radians conversion factor\n    */\n    MathUtils.DEG2RAD = MathUtils.PI / 180;\n\n    /**\n    * Radians to degrees conversion factor\n    */\n    MathUtils.RAD2DEG = 180 / MathUtils.PI;\n    MathUtils.SHIFT23 = 1 << 23;\n    MathUtils.INV_SHIFT23 = 1.0 / MathUtils.SHIFT23;\n    MathUtils.SIN_A = -4.0 / (MathUtils.PI * MathUtils.PI);\n    MathUtils.SIN_B = 4.0 / MathUtils.PI;\n    MathUtils.SIN_P = 9.0 / 40;\n    MathUtils.abs = Math.abs;\n    /**\n    * Rounds up the value to the nearest higher power^2 value.\n    *\n    * @param x\n    * @return power^2 value\n    */\n    MathUtils.ceilPowerOf2 = function(x) {\n        var pow2 = 1;\n        while (pow2 < x) {\n            pow2 <<= 1;\n        }\n        return pow2;\n    };\n\n    MathUtils.clip = function(a, _min, _max) {\n        return a < _min ? _min : (a > _max ? _max : a);\n    };\n    /**\n    * Clips the value to the 0.0 .. 1.0 interval.\n    *\n    * @param a\n    * @return clipped value\n    * @since 0012\n    */\n    MathUtils.clipNormalized = function(a) {\n        if (a < 0) {\n            return 0;\n        } else if (a > 1) {\n            return 1;\n        }\n        return a;\n    };\n\n    MathUtils.cos = Math.cos;\n\n    MathUtils.degrees = function(radians) {\n        return radians * MathUtils.RAD2DEG;\n    };\n\n    /**\n    * Fast cosine approximation.\n    *\n    * @param x\n    *            angle in -PI/2 .. +PI/2 interval\n    * @return cosine\n    */\n    MathUtils.fastCos = function(x) {\n        return MathUtils.fastSin(x + ((x > MathUtils.HALF_PI) ? -MathUtils.THREE_HALVES_PI : MathUtils.HALF_PI));\n    };\n\n    /**\n    * Fast sine approximation.\n    *\n    * @param x\n    *            angle in -PI/2 .. +PI/2 interval\n    * @return sine\n    */\n    MathUtils.fastSin = function(x) {\n        x = MathUtils.SIN_B * x + MathUtils.SIN_A * x * Math.abs(x);\n        return MathUtils.SIN_P * (x * Math.abs(x) - x) + x;\n    };\n\n    MathUtils.flipCoin = function(rnd) {\n        return Math.random() < 0.5;\n    };\n\n    /**\n    * This method is a *lot* faster than using (int)Math.floor(x).\n    *\n    * @param x\n    *            value to be floored\n    * @return floored value as integer\n    */\n\n    MathUtils.floor = function(x) {\n        var y = ~~(x);\n        if (x < 0 && x != y) {\n            y--;\n        }\n        return y;\n    };\n\n    /**\n    * Rounds down the value to the nearest lower power^2 value.\n    *\n    * @param x\n    * @return power^2 value\n    */\n    MathUtils.floorPowerOf2 = function(x) {\n        return ~~( Math.pow(2, parseInt((Math.log(x) / MathUtils.LOG2),10)) );\n    };\n\n    MathUtils.max =  function(a, b, c) {\n        if(c===undefined){\n            return Math.max(a,b);\n        }\n        return (a > b) ? ((a > c) ? a : c) : ((b > c) ? b : c);\n    };\n\n    MathUtils.min = function(a, b, c) {\n        if(c===undefined){\n            return Math.min(a,b);\n        }\n        return (a < b) ? ((a < c) ? a : c) : ((b < c) ? b : c);\n    };\n\n    /**\n    * Returns a random number in the interval -1 .. +1.\n    *\n    * @return random float\n    */\n    MathUtils.normalizedRandom = function() {\n        return Math.random() * 2 - 1;\n    };\n\n    MathUtils.radians = function(degrees) {\n        return degrees * MathUtils.DEG2RAD;\n    };\n\n    MathUtils.random = function(rand,min,max) {\n        //one param\n        if( arguments.length === 1 ){\n            return Math.random() * arguments[0];\n        } else if(arguments.length == 2) {\n            //min and max\n            max = min;\n            min = rand;\n            rand = Math.random;\n        }\n        if(!min && !max) {\n            return Math.random();\n        } else if(!max){\n            //if only one is provided, then thats actually the max\n            max = min;\n            return rand()*max;\n        }\n        return rand() * (max - min) + min;\n    };\n\n    MathUtils.reduceAngle = function(theta) {\n        theta %= MathUtils.TWO_PI;\n        if (Math.abs(theta) > MathUtils.PI) {\n            theta = theta - MathUtils.TWO_PI;\n        }\n        if (Math.abs(theta) > MathUtils.HALF_PI) {\n            theta = MathUtils.PI - theta;\n        }\n        return theta;\n    };\n\n    MathUtils.sign = function(x) {\n        return x < 0 ? -1 : (x > 0 ? 1 : 0);\n    };\n\n    MathUtils.sin = function(theta) {\n        theta = MathUtils.reduceAngle(theta);\n        if (Math.abs(theta) <= MathUtils.QUARTER_PI) {\n            return MathUtils.fastSin(theta);\n        }\n        return MathUtils.fastCos(MathUtils.HALF_PI - theta);\n    };\n\n    module.exports = MathUtils;\n\n\n\n"]},"metadata":{},"sourceType":"script"}