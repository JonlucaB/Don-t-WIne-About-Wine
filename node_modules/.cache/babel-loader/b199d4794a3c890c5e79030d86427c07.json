{"ast":null,"code":"var Circle = require('../../geom/Circle');\n\nvar CircularConstraint = function (a, b) {\n  if (arguments.length == 1) {\n    this.circle = a;\n  } else {\n    this.circle = new Circle(a, b);\n  }\n};\n\nCircularConstraint.prototype.applyConstraint = function (p) {\n  if (this.circle.containsPoint(p)) {\n    p.set(this.circle.add(p.sub(this.circle).normalizeTo(this.circle.getRadius())));\n  }\n};\n\nmodule.exports = CircularConstraint;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/physics2d/constraints/CircularConstraint.js"],"names":["Circle","require","CircularConstraint","a","b","arguments","length","circle","prototype","applyConstraint","p","containsPoint","set","add","sub","normalizeTo","getRadius","module","exports"],"mappings":"AACC,IAAIA,MAAM,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AAEA,IAAIC,kBAAkB,GAAG,UAASC,CAAT,EAAWC,CAAX,EAAa;AACrC,MAAGC,SAAS,CAACC,MAAV,IAAoB,CAAvB,EAAyB;AACxB,SAAKC,MAAL,GAAcJ,CAAd;AACA,GAFD,MAEO;AACN,SAAKI,MAAL,GAAc,IAAIP,MAAJ,CAAWG,CAAX,EAAaC,CAAb,CAAd;AACA;AACD,CAND;;AAQAF,kBAAkB,CAACM,SAAnB,CAA6BC,eAA7B,GAA+C,UAASC,CAAT,EAAW;AACzD,MAAG,KAAKH,MAAL,CAAYI,aAAZ,CAA0BD,CAA1B,CAAH,EAAgC;AAC/BA,IAAAA,CAAC,CAACE,GAAF,CAAM,KAAKL,MAAL,CAAYM,GAAZ,CAAgBH,CAAC,CAACI,GAAF,CAAM,KAAKP,MAAX,EAAmBQ,WAAnB,CAA+B,KAAKR,MAAL,CAAYS,SAAZ,EAA/B,CAAhB,CAAN;AACA;AACD,CAJD;;AAMAC,MAAM,CAACC,OAAP,GAAiBhB,kBAAjB","sourcesContent":["\n\tvar Circle = require('../../geom/Circle');\n\t\n\tvar\tCircularConstraint = function(a,b){\n\t\tif(arguments.length == 1){\n\t\t\tthis.circle = a;\n\t\t} else {\n\t\t\tthis.circle = new Circle(a,b);\n\t\t}\n\t};\n\n\tCircularConstraint.prototype.applyConstraint = function(p){\n\t\tif(this.circle.containsPoint(p)){\n\t\t\tp.set(this.circle.add(p.sub(this.circle).normalizeTo(this.circle.getRadius())));\n\t\t}\n\t};\n\n\tmodule.exports = CircularConstraint;\n\n"]},"metadata":{},"sourceType":"script"}