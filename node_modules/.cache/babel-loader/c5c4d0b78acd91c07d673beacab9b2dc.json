{"ast":null,"code":"var strategies = require('./strategies');\n\nvar vectors = require('../../geom/vectors');\n\nvar MathUtils = require('../../math/mathUtils');\n\nvar internals = require('../../internals');\n\nvar ColorList = require('../ColorList');\n\nvar each = internals.each,\n    Vec2D = vectors.Vec2D; //@private\n\nvar _tones = [new Vec2D(1, 2.2), new Vec2D(2, 1), new Vec2D(-1, -0.5), new Vec2D(-2, 1)];\nmodule.exports = strategies.create('Analagous',\n/**\n* Creates a new instance\n* @param {Number} [theta] optionally provide an angle in degrees, defaults to 10\n* @param {Number} [contrast] optionally provide a contrast, defaults to 0.25\n*/\nfunction (theta, contrast) {\n  this.contrast = typeof contrast === 'number' ? contrast : 0.25;\n  this.theta = MathUtils.radians(typeof theta === 'number' ? theta : 10);\n}, {\n  createListFromColor: function (src) {\n    var self = this;\n    this.contrast = MathUtils.clipNormalized(this.contrast);\n    var colors = new ColorList(src);\n    each(_tones, function (currTone) {\n      var c = src.getRotatedRYB(self.theta * currTone.x),\n          t = 0.44 - currTone.y * 0.1;\n\n      if (src.brightness() - self.contras * currTone.y < t) {\n        c.setBrightness(t);\n      } else {\n        c.setBrightness(src.brightness() - self.contrast * currTone.y);\n      }\n\n      c.desaturate(0.05);\n      colors.add(c);\n    });\n    return colors;\n  },\n  toString: function () {\n    return 'analagous contrast: ' + this.contrast + ' theta: ' + MathUtils.degrees(this.theta);\n  }\n});","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/color/theory/AnalagousStrategy.js"],"names":["strategies","require","vectors","MathUtils","internals","ColorList","each","Vec2D","_tones","module","exports","create","theta","contrast","radians","createListFromColor","src","self","clipNormalized","colors","currTone","c","getRotatedRYB","x","t","y","brightness","contras","setBrightness","desaturate","add","toString","degrees"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,sBAAD,CAAvB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,cAAD,CAAvB;;AACI,IAAIK,IAAI,GAAGF,SAAS,CAACE,IAArB;AAAA,IACIC,KAAK,GAAGL,OAAO,CAACK,KADpB,C,CAGA;;AACA,IAAIC,MAAM,GAAG,CACT,IAAID,KAAJ,CAAU,CAAV,EAAY,GAAZ,CADS,EAET,IAAIA,KAAJ,CAAU,CAAV,EAAY,CAAZ,CAFS,EAGT,IAAIA,KAAJ,CAAU,CAAC,CAAX,EAAa,CAAC,GAAd,CAHS,EAIT,IAAIA,KAAJ,CAAU,CAAC,CAAX,EAAa,CAAb,CAJS,CAAb;AAOAE,MAAM,CAACC,OAAP,GAAiBV,UAAU,CAACW,MAAX,CAAkB,WAAlB;AACb;AACR;AACA;AACA;AACA;AACQ,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AACvB,OAAKA,QAAL,GAAgB,OAAOA,QAAP,KAAoB,QAApB,GAA+BA,QAA/B,GAA0C,IAA1D;AACA,OAAKD,KAAL,GAAaT,SAAS,CAACW,OAAV,CAAmB,OAAOF,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,EAAvD,CAAb;AACH,CATY,EASV;AACHG,EAAAA,mBAAmB,EAAE,UAAUC,GAAV,EAAe;AAChC,QAAIC,IAAI,GAAG,IAAX;AACA,SAAKJ,QAAL,GAAgBV,SAAS,CAACe,cAAV,CAA0B,KAAKL,QAA/B,CAAhB;AACA,QAAIM,MAAM,GAAG,IAAId,SAAJ,CAAeW,GAAf,CAAb;AACAV,IAAAA,IAAI,CAACE,MAAD,EAAS,UAASY,QAAT,EAAkB;AAC3B,UAAIC,CAAC,GAAGL,GAAG,CAACM,aAAJ,CAAkBL,IAAI,CAACL,KAAL,GAAaQ,QAAQ,CAACG,CAAxC,CAAR;AAAA,UACIC,CAAC,GAAG,OAAOJ,QAAQ,CAACK,CAAT,GAAa,GAD5B;;AAEA,UAAGT,GAAG,CAACU,UAAJ,KAAmBT,IAAI,CAACU,OAAL,GAAeP,QAAQ,CAACK,CAA3C,GAA+CD,CAAlD,EAAoD;AAChDH,QAAAA,CAAC,CAACO,aAAF,CAAgBJ,CAAhB;AACH,OAFD,MAEO;AACHH,QAAAA,CAAC,CAACO,aAAF,CAAgBZ,GAAG,CAACU,UAAJ,KAAmBT,IAAI,CAACJ,QAAL,GAAgBO,QAAQ,CAACK,CAA5D;AACH;;AACDJ,MAAAA,CAAC,CAACQ,UAAF,CAAa,IAAb;AACAV,MAAAA,MAAM,CAACW,GAAP,CAAYT,CAAZ;AACH,KAVG,CAAJ;AAWA,WAAOF,MAAP;AACH,GAjBE;AAkBHY,EAAAA,QAAQ,EAAE,YAAU;AAChB,WAAO,yBAAyB,KAAKlB,QAA9B,GAAyC,UAAzC,GAAsDV,SAAS,CAAC6B,OAAV,CAAkB,KAAKpB,KAAvB,CAA7D;AACH;AApBE,CATU,CAAjB","sourcesContent":["var strategies = require('./strategies');\nvar vectors = require('../../geom/vectors');\nvar MathUtils = require('../../math/mathUtils');\nvar internals = require('../../internals');\nvar ColorList = require('../ColorList');\n    var each = internals.each,\n        Vec2D = vectors.Vec2D;\n\n    //@private\n    var _tones = [\n        new Vec2D(1,2.2),\n        new Vec2D(2,1),\n        new Vec2D(-1,-0.5),\n        new Vec2D(-2,1)\n    ];\n\n    module.exports = strategies.create('Analagous',\n        /**\n        * Creates a new instance\n        * @param {Number} [theta] optionally provide an angle in degrees, defaults to 10\n        * @param {Number} [contrast] optionally provide a contrast, defaults to 0.25\n        */\n        function( theta, contrast ){\n            this.contrast = typeof contrast === 'number' ? contrast : 0.25;\n            this.theta = MathUtils.radians( typeof theta === 'number' ? theta : 10 );\n        }, {\n        createListFromColor: function( src ){\n            var self = this;\n            this.contrast = MathUtils.clipNormalized( this.contrast );\n            var colors = new ColorList( src );\n            each(_tones, function(currTone){\n                var c = src.getRotatedRYB(self.theta * currTone.x),\n                    t = 0.44 - currTone.y * 0.1;\n                if(src.brightness() - self.contras * currTone.y < t){\n                    c.setBrightness(t);\n                } else {\n                    c.setBrightness(src.brightness() - self.contrast * currTone.y);\n                }\n                c.desaturate(0.05);\n                colors.add( c );\n            });\n            return colors;\n        },\n        toString: function(){\n            return 'analagous contrast: ' + this.contrast + ' theta: ' + MathUtils.degrees(this.theta);\n        }\n    });\n\n"]},"metadata":{},"sourceType":"script"}