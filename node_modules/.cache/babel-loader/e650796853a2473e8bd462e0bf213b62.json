{"ast":null,"code":"var extend = require('../../internals').extend,\n    VertexSelector = require('./VertexSelector');\n/**\n * @class\n * @member toxi\n * @augments toxi.VertexSelector\n */\n\n\nvar BoxSelector = function (mesh, box) {\n  VertexSelector.apply(this, [mesh]);\n  this.box = box;\n};\n\nextend(BoxSelector, VertexSelector);\n\nBoxSelector.prototype.selectVertices = function () {\n  this.clearSelection();\n  var verts = this.mesh.getVertices();\n  var l = verts.length;\n\n  for (var i = 0; i < l; i++) {\n    var v = verts[i];\n\n    if (this.box.containsPoint(v)) {\n      this.selection.add(v);\n    }\n  }\n\n  return this;\n};\n\nmodule.exports = BoxSelector;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/geom/mesh/BoxSelector.js"],"names":["extend","require","VertexSelector","BoxSelector","mesh","box","apply","prototype","selectVertices","clearSelection","verts","getVertices","l","length","i","v","containsPoint","selection","add","module","exports"],"mappings":"AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAAP,CAA2BD,MAAxC;AAAA,IACIE,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAD5B;AAGA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,WAAW,GAAG,UAASC,IAAT,EAAcC,GAAd,EAAmB;AACjCH,EAAAA,cAAc,CAACI,KAAf,CAAqB,IAArB,EAA0B,CAACF,IAAD,CAA1B;AACA,OAAKC,GAAL,GAAWA,GAAX;AACH,CAHD;;AAKAL,MAAM,CAACG,WAAD,EAAaD,cAAb,CAAN;;AAEAC,WAAW,CAACI,SAAZ,CAAsBC,cAAtB,GAAuC,YAAW;AAC9C,OAAKC,cAAL;AACA,MAAIC,KAAK,GAAG,KAAKN,IAAL,CAAUO,WAAV,EAAZ;AACA,MAAIC,CAAC,GAAGF,KAAK,CAACG,MAAd;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,CAAf,EAAiBE,CAAC,EAAlB,EAAsB;AACxB,QAAIC,CAAC,GAAGL,KAAK,CAACI,CAAD,CAAb;;AACM,QAAI,KAAKT,GAAL,CAASW,aAAT,CAAuBD,CAAvB,CAAJ,EAA+B;AAC3B,WAAKE,SAAL,CAAeC,GAAf,CAAmBH,CAAnB;AACH;AACJ;;AACD,SAAO,IAAP;AACH,CAXD;;AAcAI,MAAM,CAACC,OAAP,GAAiBjB,WAAjB","sourcesContent":["\n\nvar extend = require('../../internals').extend,\n    VertexSelector = require('./VertexSelector');\n\n/**\n * @class\n * @member toxi\n * @augments toxi.VertexSelector\n */\nvar BoxSelector = function(mesh,box) {\n    VertexSelector.apply(this,[mesh]);\n    this.box = box;\n};\n\nextend(BoxSelector,VertexSelector);\n\nBoxSelector.prototype.selectVertices = function() {\n    this.clearSelection();\n    var verts = this.mesh.getVertices();\n    var l = verts.length;\n    for (var i=0;i<l;i++) {\n\t\tvar v = verts[i];\n        if (this.box.containsPoint(v)) {\n            this.selection.add(v);\n        }\n    }\n    return this;\n};\n\n\nmodule.exports = BoxSelector;\n\n\n"]},"metadata":{},"sourceType":"script"}