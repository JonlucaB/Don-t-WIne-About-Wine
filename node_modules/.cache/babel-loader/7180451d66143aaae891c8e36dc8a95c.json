{"ast":null,"code":"//these 2 modules get defined\nvar Face, WEFace;\n\n(function () {\n  var Triangle3D = require('../Triangle3D');\n\n  Face = function (a, b, c, uvA, uvB, uvC) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    var aminusc = this.a.sub(this.c);\n    var aminusb = this.a.sub(this.b);\n    var cross = aminusc.crossSelf(aminusb);\n    this.normal = cross.normalize();\n    this.a.addFaceNormal(this.normal);\n    this.b.addFaceNormal(this.normal);\n    this.c.addFaceNormal(this.normal);\n\n    if (uvA !== undefined) {\n      this.uvA = uvA;\n      this.uvB = uvB;\n      this.uvC = uvC;\n    }\n  };\n\n  Face.prototype = {\n    computeNormal: function () {\n      this.normal = this.a.sub(this.c).crossSelf(this.a.sub(this.b)).normalize();\n    },\n    flipVertexOrder: function () {\n      var t = this.a;\n      this.a = this.b;\n      this.b = t;\n      this.normal.invert();\n    },\n    getCentroid: function () {\n      return this.a.add(this.b).addSelf(this.c).scale(1.0 / 3);\n    },\n    getClass: function () {\n      return \"Face\";\n    },\n    getVertices: function (verts) {\n      if (verts !== undefined) {\n        verts[0] = this.a;\n        verts[1] = this.b;\n        verts[2] = this.c;\n      } else {\n        verts = [this.a, this.b, this.c];\n      }\n\n      return verts;\n    },\n    toString: function () {\n      return this.getClass() + \" \" + this.a + \", \" + this.b + \", \" + this.c;\n    },\n\n    /**\n     * Creates a generic {@link Triangle3D} instance using this face's vertices.\n     * The new instance is made up of copies of the original vertices and\n     * manipulating them will not impact the originals.\n     *\n     * @return triangle copy of this mesh face\n     */\n    toTriangle: function () {\n      return new Triangle3D(this.a.copy(), this.b.copy(), this.c.copy());\n    }\n  };\n})(); //define WEFace\n\n\n(function () {\n  var internals = require('../../internals');\n\n  var proto; //@param {WEVertex} a\n  //@param {WEVertex} b\n  //@param {WEVertex} c\n  //@param {Vec2D} [uvA]\n  //@param {Vec2D} [uvB]\n  //@param {Vec2D} [uvC]\n\n  WEFace = function (a, b, c, uvA, uvB, uvC) {\n    Face.call(this, a, b, c, uvA, uvB, uvC);\n    this.edges = [];\n  };\n\n  internals.extend(WEFace, Face);\n  proto = WEFace.prototype; //@param {WingedEdge} edge\n\n  proto.addEdge = function (edge) {\n    this.edges.push(edge);\n  };\n\n  proto.getEdges = function () {\n    return this.edges;\n  }; //@param {WEVertex[]} [verts]\n\n\n  proto.getVertices = function (verts) {\n    if (verts !== undefined) {\n      verts[0] = this.a;\n      verts[1] = this.b;\n      verts[2] = this.c;\n    } else {\n      verts = [this.a, this.b, this.c];\n    }\n\n    return verts;\n  };\n})();\n\nFace.WEFace = WEFace;\nmodule.exports = Face;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/geom/mesh/Face.js"],"names":["Face","WEFace","Triangle3D","require","a","b","c","uvA","uvB","uvC","aminusc","sub","aminusb","cross","crossSelf","normal","normalize","addFaceNormal","undefined","prototype","computeNormal","flipVertexOrder","t","invert","getCentroid","add","addSelf","scale","getClass","getVertices","verts","toString","toTriangle","copy","internals","proto","call","edges","extend","addEdge","edge","push","getEdges","module","exports"],"mappings":"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","sourcesContent":["\n\t//these 2 modules get defined\n\tvar Face, WEFace;\n\n\t(function(){\n\t\tvar Triangle3D = require('../Triangle3D');\n\t\tFace = function(a,b,c,uvA,uvB,uvC) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\t\tvar aminusc = this.a.sub(this.c);\n\t\t\tvar aminusb = this.a.sub(this.b);\n\t\t\tvar cross = aminusc.crossSelf(aminusb);\n\t\t\tthis.normal = cross.normalize();\n\t\t\tthis.a.addFaceNormal(this.normal);\n\t\t\tthis.b.addFaceNormal(this.normal);\n\t\t\tthis.c.addFaceNormal(this.normal);\n\t\t\t\n\t\t\tif(uvA !== undefined){\n\t\t\t\tthis.uvA = uvA;\n\t\t\t\tthis.uvB = uvB;\n\t\t\t\tthis.uvC = uvC;\n\t\t\t}\n\t\t};\n\n\t\tFace.prototype = {\n\t\t\tcomputeNormal: function() {\n\t\t\t\tthis.normal = this.a.sub(this.c).crossSelf(this.a.sub(this.b)).normalize();\n\t\t\t},\n\n\t\t\tflipVertexOrder: function() {\n\t\t\t\tvar t = this.a;\n\t\t\t\tthis.a = this.b;\n\t\t\t\tthis.b = t;\n\t\t\t\tthis.normal.invert();\n\t\t\t},\n\t\t\t\n\t\t\tgetCentroid: function() {\n\t\t\t\treturn this.a.add(this.b).addSelf(this.c).scale(1.0 / 3);\n\t\t\t},\n\t\t\t\n\t\t\tgetClass: function(){\n\t\t\t\treturn \"Face\";\n\t\t\t},\n\n\t\t\tgetVertices: function(verts) {\n\t\t\t\tif (verts !== undefined) {\n\t\t\t\t\tverts[0] = this.a;\n\t\t\t\t\tverts[1] = this.b;\n\t\t\t\t\tverts[2] = this.c;\n\t\t\t\t} else {\n\t\t\t\t\tverts = [ this.a, this.b, this.c ];\n\t\t\t\t}\n\t\t\t\treturn verts;\n\t\t\t},\n\n\t\t\ttoString: function() {\n\t\t\t\treturn this.getClass() + \" \" + this.a + \", \" + this.b + \", \" + this.c;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a generic {@link Triangle3D} instance using this face's vertices.\n\t\t\t * The new instance is made up of copies of the original vertices and\n\t\t\t * manipulating them will not impact the originals.\n\t\t\t *\n\t\t\t * @return triangle copy of this mesh face\n\t\t\t */\n\t\t\ttoTriangle: function() {\n\t\t\t\treturn new Triangle3D(this.a.copy(), this.b.copy(), this.c.copy());\n\t\t\t}\n\t\t};\n\t}());\n\n\t//define WEFace\n\t(function(){\n\t\tvar internals = require('../../internals');\n\t\tvar proto;\n\t\t//@param {WEVertex} a\n\t\t//@param {WEVertex} b\n\t\t//@param {WEVertex} c\n\t\t//@param {Vec2D} [uvA]\n\t\t//@param {Vec2D} [uvB]\n\t\t//@param {Vec2D} [uvC]\n\t\tWEFace = function( a, b, c, uvA, uvB, uvC ){\n\t\t\tFace.call(this, a, b, c, uvA, uvB, uvC);\n\t\t\tthis.edges = [];\n\t\t};\n\t\tinternals.extend( WEFace, Face );\n\t\tproto = WEFace.prototype;\n\t\t//@param {WingedEdge} edge\n\t\tproto.addEdge = function( edge ){\n\t\t\tthis.edges.push( edge );\n\t\t};\n\t\tproto.getEdges = function(){\n\t\t\treturn this.edges;\n\t\t};\n\t\t//@param {WEVertex[]} [verts]\n\t\tproto.getVertices = function( verts ){\n\t\t\tif( verts !== undefined ){\n\t\t\t\tverts[0] = this.a;\n\t\t\t\tverts[1] = this.b;\n\t\t\t\tverts[2] = this.c;\n\t\t\t} else {\n\t\t\t\tverts = [ this.a, this.b, this.c ];\n\t\t\t}\n\t\t\treturn verts;\n\t\t};\n\t}());\n\tFace.WEFace = WEFace;\n\tmodule.exports = Face;\n\n"]},"metadata":{},"sourceType":"script"}