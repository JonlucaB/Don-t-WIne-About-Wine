{"ast":null,"code":"/**\n* @class Exponential curve interpolation with adjustable exponent. Use exp in the\n* following ranges to achieve these effects:\n* <ul>\n* <li>0.0 &lt; x &lt; 1.0 : ease in (steep changes towards b)</li>\n* <li>1.0 : same as {@link LinearInterpolation}</li>\n* <li>&gt; 1.0 : ease-out (steep changes from a)</li>\n* </ul>\n* @member toxi\n*/\nvar ExponentialInterpolation = function (exp) {\n  this.exponent = exp === undefined ? 2 : exp;\n};\n\nExponentialInterpolation.interpolate = function (a, b, f, exponent) {\n  return a + (b - a) * Math.pow(f, exponent);\n};\n\nExponentialInterpolation.prototype.interpolate = function (a, b, f) {\n  return a + (b - a) * Math.pow(f, this.exponent);\n};\n\nmodule.exports = ExponentialInterpolation;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/math/ExponentialInterpolation.js"],"names":["ExponentialInterpolation","exp","exponent","undefined","interpolate","a","b","f","Math","pow","prototype","module","exports"],"mappings":"AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,IAAIA,wBAAwB,GAAG,UAASC,GAAT,EAAc;AACzC,OAAKC,QAAL,GAAiBD,GAAG,KAAKE,SAAT,GAAsB,CAAtB,GAA0BF,GAA1C;AACH,CAFD;;AAKAD,wBAAwB,CAACI,WAAzB,GAAuC,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBL,QAAlB,EAA4B;AAC/D,SAAOG,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,IAAUG,IAAI,CAACC,GAAL,CAASF,CAAT,EAAYL,QAAZ,CAArB;AACH,CAFD;;AAIAF,wBAAwB,CAACU,SAAzB,CAAmCN,WAAnC,GAAiD,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkB;AAC/D,SAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,IAAUG,IAAI,CAACC,GAAL,CAASF,CAAT,EAAY,KAAKL,QAAjB,CAArB;AACH,CAFD;;AAIAS,MAAM,CAACC,OAAP,GAAiBZ,wBAAjB","sourcesContent":["\n    /**\n    * @class Exponential curve interpolation with adjustable exponent. Use exp in the\n    * following ranges to achieve these effects:\n    * <ul>\n    * <li>0.0 &lt; x &lt; 1.0 : ease in (steep changes towards b)</li>\n    * <li>1.0 : same as {@link LinearInterpolation}</li>\n    * <li>&gt; 1.0 : ease-out (steep changes from a)</li>\n    * </ul>\n    * @member toxi\n    */\n    var\tExponentialInterpolation = function(exp) {\n        this.exponent = (exp === undefined) ? 2 : exp;\n    };\n\n\n    ExponentialInterpolation.interpolate = function(a, b, f, exponent) {\n        return a + (b - a) * Math.pow(f, exponent);\n    };\n\n    ExponentialInterpolation.prototype.interpolate = function(a, b, f) {\n        return a + (b - a) * Math.pow(f, this.exponent);\n    };\n\n    module.exports = ExponentialInterpolation;\n\n\n"]},"metadata":{},"sourceType":"script"}