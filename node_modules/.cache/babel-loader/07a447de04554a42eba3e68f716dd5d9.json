{"ast":null,"code":"/**\n* @class Initializes the s-curve with default sharpness = 2\n* @member toxi\n*/\nvar SigmoidInterpolation = function (s) {\n  if (s === undefined) {\n    s = 2.0;\n  }\n\n  this.setSharpness(s);\n};\n\nvar interpolate = function (a, b, f, sharpness) {\n  f = (f * 2 - 1) * sharpness;\n  f = 1.0 / (1.0 + Math.exp(-f));\n  return a + (b - a) * f;\n};\n\nSigmoidInterpolation.prototype = {\n  getSharpness: function () {\n    return this.sharpness;\n  },\n  interpolate: function (a, b, f) {\n    return interpolate(a, b, f, this.sharpPremult);\n  },\n  setSharpness: function (s) {\n    this.sharpness = s;\n    this.sharpPremult = 5 * s;\n  }\n};\nSigmoidInterpolation.interpolate = interpolate;\nmodule.exports = SigmoidInterpolation;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/math/SigmoidInterpolation.js"],"names":["SigmoidInterpolation","s","undefined","setSharpness","interpolate","a","b","f","sharpness","Math","exp","prototype","getSharpness","sharpPremult","module","exports"],"mappings":"AACI;AACJ;AACA;AACA;AACI,IAAIA,oBAAoB,GAAG,UAASC,CAAT,EAAY;AACnC,MAAGA,CAAC,KAAKC,SAAT,EAAmB;AACfD,IAAAA,CAAC,GAAG,GAAJ;AACH;;AACD,OAAKE,YAAL,CAAkBF,CAAlB;AACH,CALD;;AAOA,IAAIG,WAAW,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,SAAnB,EAA8B;AAC5CD,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,CAAJ,GAAQ,CAAT,IAAcC,SAAlB;AACAD,EAAAA,CAAC,GAAI,OAAO,MAAME,IAAI,CAACC,GAAL,CAAS,CAACH,CAAV,CAAb,CAAL;AACA,SAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,IAAUE,CAArB;AACH,CAJD;;AAMAP,oBAAoB,CAACW,SAArB,GAAiC;AAC7BC,EAAAA,YAAY,EAAE,YAAW;AACrB,WAAO,KAAKJ,SAAZ;AACH,GAH4B;AAK7BJ,EAAAA,WAAW,EAAE,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkB;AAC3B,WAAOH,WAAW,CAAEC,CAAF,EAAKC,CAAL,EAAQC,CAAR,EAAW,KAAKM,YAAhB,CAAlB;AACH,GAP4B;AAS7BV,EAAAA,YAAY,EAAE,UAASF,CAAT,EAAY;AACtB,SAAKO,SAAL,GAAiBP,CAAjB;AACA,SAAKY,YAAL,GAAoB,IAAIZ,CAAxB;AACH;AAZ4B,CAAjC;AAeAD,oBAAoB,CAACI,WAArB,GAAmCA,WAAnC;AAEAU,MAAM,CAACC,OAAP,GAAiBf,oBAAjB","sourcesContent":["\n    /**\n    * @class Initializes the s-curve with default sharpness = 2\n    * @member toxi\n    */\n    var\tSigmoidInterpolation = function(s) {\n        if(s === undefined){\n            s = 2.0;\n        }\n        this.setSharpness(s);\n    };\n\n    var interpolate = function( a, b, f, sharpness ){\n        f = (f * 2 - 1) * sharpness;\n        f = (1.0 / (1.0 + Math.exp(-f)));\n        return a + (b - a) * f;\n    };\n\n    SigmoidInterpolation.prototype = {\n        getSharpness: function() {\n            return this.sharpness;\n        },\n\n        interpolate: function(a, b, f) {\n            return interpolate( a, b, f, this.sharpPremult );\n        },\n\n        setSharpness: function(s) {\n            this.sharpness = s;\n            this.sharpPremult = 5 * s;\n        }\n    };\n\n    SigmoidInterpolation.interpolate = interpolate;\n\n    module.exports = SigmoidInterpolation;\n\n\n"]},"metadata":{},"sourceType":"script"}