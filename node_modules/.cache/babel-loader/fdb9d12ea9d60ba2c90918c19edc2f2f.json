{"ast":null,"code":"var is = require('./is'); //imitate the basic functionality of a Java Iterator\n\n\nvar ArrayIterator = function (collection) {\n  this.__it = collection.slice(0);\n};\n\nArrayIterator.prototype = {\n  hasNext: function () {\n    return this.__it.length > 0;\n  },\n  next: function () {\n    return this.__it.shift();\n  }\n};\n\nvar ObjectIterator = function (object) {\n  this.__obj = {};\n  this.__keys = [];\n\n  for (var prop in object) {\n    this.__obj[prop] = object[prop];\n\n    this.__keys.push(prop);\n  }\n\n  this.__it = new ArrayIterator(this.__keys);\n};\n\nObjectIterator.prototype = {\n  hasNext: function () {\n    return this.__it.hasNext();\n  },\n  next: function () {\n    var key = this.__it.next();\n\n    return this.__obj[key];\n  }\n};\n\nvar Iterator = function (collection) {\n  if (is.array(collection)) {\n    return new ArrayIterator(collection);\n  }\n\n  return new ObjectIterator(collection);\n};\n\nmodule.exports = Iterator;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/internals/Iterator.js"],"names":["is","require","ArrayIterator","collection","__it","slice","prototype","hasNext","length","next","shift","ObjectIterator","object","__obj","__keys","prop","push","key","Iterator","array","module","exports"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAhB,C,CACC;;;AACG,IAAIC,aAAa,GAAG,UAASC,UAAT,EAAoB;AACpC,OAAKC,IAAL,GAAYD,UAAU,CAACE,KAAX,CAAiB,CAAjB,CAAZ;AACH,CAFD;;AAGAH,aAAa,CAACI,SAAd,GAA0B;AACtBC,EAAAA,OAAO,EAAE,YAAU;AACf,WAAO,KAAKH,IAAL,CAAUI,MAAV,GAAmB,CAA1B;AACH,GAHqB;AAItBC,EAAAA,IAAI,EAAE,YAAU;AACZ,WAAO,KAAKL,IAAL,CAAUM,KAAV,EAAP;AACH;AANqB,CAA1B;;AAQA,IAAIC,cAAc,GAAG,UAASC,MAAT,EAAgB;AACjC,OAAKC,KAAL,GAAa,EAAb;AACA,OAAKC,MAAL,GAAc,EAAd;;AACA,OAAI,IAAIC,IAAR,IAAgBH,MAAhB,EAAuB;AACnB,SAAKC,KAAL,CAAWE,IAAX,IAAmBH,MAAM,CAACG,IAAD,CAAzB;;AACA,SAAKD,MAAL,CAAYE,IAAZ,CAAiBD,IAAjB;AACH;;AACD,OAAKX,IAAL,GAAY,IAAIF,aAAJ,CAAkB,KAAKY,MAAvB,CAAZ;AACH,CARD;;AASAH,cAAc,CAACL,SAAf,GAA2B;AACvBC,EAAAA,OAAO,EAAE,YAAU;AACf,WAAO,KAAKH,IAAL,CAAUG,OAAV,EAAP;AACH,GAHsB;AAIvBE,EAAAA,IAAI,EAAE,YAAU;AACZ,QAAIQ,GAAG,GAAG,KAAKb,IAAL,CAAUK,IAAV,EAAV;;AACA,WAAO,KAAKI,KAAL,CAAWI,GAAX,CAAP;AACH;AAPsB,CAA3B;;AAUA,IAAIC,QAAQ,GAAG,UAASf,UAAT,EAAoB;AAC/B,MAAGH,EAAE,CAACmB,KAAH,CAAShB,UAAT,CAAH,EAAwB;AACpB,WAAO,IAAID,aAAJ,CAAkBC,UAAlB,CAAP;AACH;;AACD,SAAO,IAAIQ,cAAJ,CAAmBR,UAAnB,CAAP;AACH,CALD;;AAOAiB,MAAM,CAACC,OAAP,GAAiBH,QAAjB","sourcesContent":["var is = require('./is');\n\t//imitate the basic functionality of a Java Iterator\n    var ArrayIterator = function(collection){\n        this.__it = collection.slice(0);\n    };\n    ArrayIterator.prototype = {\n        hasNext: function(){\n            return this.__it.length > 0;\n        },\n        next: function(){\n            return this.__it.shift();\n        }\n    };\n    var ObjectIterator = function(object){\n        this.__obj = {};\n        this.__keys = [];\n        for(var prop in object){\n            this.__obj[prop] = object[prop];\n            this.__keys.push(prop);\n        }\n        this.__it = new ArrayIterator(this.__keys);\n    };\n    ObjectIterator.prototype = {\n        hasNext: function(){\n            return this.__it.hasNext();\n        },\n        next: function(){\n            var key = this.__it.next();\n            return this.__obj[key];\n        }\n    };\n\n    var Iterator = function(collection){\n        if(is.array(collection)){\n            return new ArrayIterator(collection);\n        }\n        return new ObjectIterator(collection);\n    };\n\n    module.exports = Iterator;\n\n"]},"metadata":{},"sourceType":"script"}