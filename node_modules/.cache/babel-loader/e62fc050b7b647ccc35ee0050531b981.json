{"ast":null,"code":"var has = require('../../internals/has');\n\nvar is = require('../../internals/is');\n\nvar has = has.all,\n    isTColor = is.TColor;\n\nexports.create = function (name, constructor, extend) {\n  if (arguments.length === 2) {\n    extend = constructor;\n\n    constructor = function () {};\n  }\n\n  var _NAME = name.charAt(0).toLowerCase() + name.slice(1, name.length);\n\n  constructor.prototype.constructor = constructor;\n\n  constructor.prototype.getName = function () {\n    return _NAME;\n  };\n\n  constructor.prototype.toString = constructor.prototype.getName;\n\n  for (var prop in extend) {\n    constructor.prototype[prop] = extend[prop];\n  } //wrap this function in an error-condition\n\n\n  (function (createList) {\n    constructor.prototype.createListFromColor = function (src) {\n      if (!isTColor(src)) {\n        throw new Error('src color was not a valid TColor');\n      }\n\n      return createList.call(this, src);\n    };\n  })(constructor.prototype.createListFromColor);\n\n  return constructor;\n};\n\nexports.wrap = function (x, min, threshold, plus) {\n  if (x - min < threshold) {\n    return x + plus;\n  }\n\n  return x - min;\n};","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/color/theory/strategies.js"],"names":["has","require","is","all","isTColor","TColor","exports","create","name","constructor","extend","arguments","length","_NAME","charAt","toLowerCase","slice","prototype","getName","toString","prop","createList","createListFromColor","src","Error","call","wrap","x","min","threshold","plus"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAjB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,oBAAD,CAAhB;;AAEI,IAAID,GAAG,GAAGA,GAAG,CAACG,GAAd;AAAA,IACIC,QAAQ,GAAGF,EAAE,CAACG,MADlB;;AAGAC,OAAO,CAACC,MAAR,GAAiB,UAAUC,IAAV,EAAgBC,WAAhB,EAA6BC,MAA7B,EAAqC;AAClD,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxBF,IAAAA,MAAM,GAAGD,WAAT;;AACAA,IAAAA,WAAW,GAAG,YAAU,CAAE,CAA1B;AACH;;AACD,MAAII,KAAK,GAAGL,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BP,IAAI,CAACQ,KAAL,CAAW,CAAX,EAAaR,IAAI,CAACI,MAAlB,CAA3C;;AACAH,EAAAA,WAAW,CAACQ,SAAZ,CAAsBR,WAAtB,GAAoCA,WAApC;;AACAA,EAAAA,WAAW,CAACQ,SAAZ,CAAsBC,OAAtB,GAAgC,YAAU;AAAE,WAAOL,KAAP;AAAe,GAA3D;;AACAJ,EAAAA,WAAW,CAACQ,SAAZ,CAAsBE,QAAtB,GAAiCV,WAAW,CAACQ,SAAZ,CAAsBC,OAAvD;;AACA,OAAK,IAAIE,IAAT,IAAiBV,MAAjB,EAAyB;AACrBD,IAAAA,WAAW,CAACQ,SAAZ,CAAsBG,IAAtB,IAA8BV,MAAM,CAACU,IAAD,CAApC;AACH,GAXiD,CAYlD;;;AACA,GAAC,UAASC,UAAT,EAAoB;AACjBZ,IAAAA,WAAW,CAACQ,SAAZ,CAAsBK,mBAAtB,GAA4C,UAAUC,GAAV,EAAe;AACvD,UAAI,CAACnB,QAAQ,CAACmB,GAAD,CAAb,EAAoB;AAChB,cAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACH;;AACD,aAAOH,UAAU,CAACI,IAAX,CAAgB,IAAhB,EAAsBF,GAAtB,CAAP;AACH,KALD;AAMH,GAPD,EAOGd,WAAW,CAACQ,SAAZ,CAAsBK,mBAPzB;;AASA,SAAOb,WAAP;AACH,CAvBD;;AAyBAH,OAAO,CAACoB,IAAR,GAAe,UAAUC,CAAV,EAAaC,GAAb,EAAkBC,SAAlB,EAA6BC,IAA7B,EAAmC;AAC9C,MAAIH,CAAC,GAAGC,GAAJ,GAAUC,SAAd,EAAyB;AACrB,WAAOF,CAAC,GAAGG,IAAX;AACH;;AACD,SAAOH,CAAC,GAAGC,GAAX;AACH,CALD","sourcesContent":["var has = require('../../internals/has');\nvar is = require('../../internals/is');\n\n    var has = has.all,\n        isTColor = is.TColor;\n\n    exports.create = function( name, constructor, extend ){\n        if( arguments.length === 2 ){\n            extend = constructor;\n            constructor = function(){};\n        }\n        var _NAME = name.charAt(0).toLowerCase() + name.slice(1,name.length);\n        constructor.prototype.constructor = constructor;\n        constructor.prototype.getName = function(){ return _NAME; };\n        constructor.prototype.toString = constructor.prototype.getName;\n        for( var prop in extend ){\n            constructor.prototype[prop] = extend[prop];\n        }\n        //wrap this function in an error-condition\n        (function(createList){\n            constructor.prototype.createListFromColor = function( src ){\n                if( !isTColor(src) ){\n                    throw new Error('src color was not a valid TColor');\n                }\n                return createList.call(this, src);\n            };\n        })(constructor.prototype.createListFromColor);\n\n        return constructor;\n    };\n\n    exports.wrap = function( x, min, threshold, plus ){\n        if( x - min < threshold ){\n            return x + plus;\n        }\n        return x - min;\n    };\n\n\n"]},"metadata":{},"sourceType":"script"}