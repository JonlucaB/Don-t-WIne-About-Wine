{"ast":null,"code":"var AttractionBehavior = function (attractor, radius, strength, jitter) {\n  if (arguments.length < 3) {\n    throw new Error(\"Constructor received incorrect Parameters\");\n  }\n\n  this.jitter = jitter || 0;\n  this.attractor = attractor;\n  this.strength = strength;\n  this.setRadius(radius);\n};\n\nAttractionBehavior.prototype = {\n  applyBehavior: function (p) {\n    //apply() is reserved, so this is now applyBehavior\n    var delta = this.attractor.sub(p);\n    var dist = delta.magSquared();\n\n    if (dist < this.radiusSquared) {\n      var f = delta.normalizeTo(1.0 - dist / this.radiusSquared).jitter(this.jitter).scaleSelf(this.attrStrength);\n      p.addForce(f);\n    }\n  },\n  configure: function (timeStep) {\n    this.timeStep = timeStep;\n    this.setStrength(this.strength);\n  },\n  getAttractor: function () {\n    return this.attractor;\n  },\n  getJitter: function () {\n    return this.jitter;\n  },\n  getRadius: function () {\n    return this.radius;\n  },\n  getStrength: function () {\n    return this.strength;\n  },\n  setAttractor: function (attractor) {\n    this.attractor = attractor;\n  },\n  setJitter: function (jitter) {\n    this.jitter = jitter;\n  },\n  setRadius: function (r) {\n    this.radius = r;\n    this.radiusSquared = r * r;\n  },\n  setStrength: function (strength) {\n    this.strength = strength;\n    this.attrStrength = strength * this.timeStep;\n  }\n};\nmodule.exports = AttractionBehavior;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/physics2d/behaviors/AttractionBehavior.js"],"names":["AttractionBehavior","attractor","radius","strength","jitter","arguments","length","Error","setRadius","prototype","applyBehavior","p","delta","sub","dist","magSquared","radiusSquared","f","normalizeTo","scaleSelf","attrStrength","addForce","configure","timeStep","setStrength","getAttractor","getJitter","getRadius","getStrength","setAttractor","setJitter","r","module","exports"],"mappings":"AACI,IAAIA,kBAAkB,GAAG,UAASC,SAAT,EAAmBC,MAAnB,EAA0BC,QAA1B,EAAmCC,MAAnC,EAA0C;AAC/D,MAAGC,SAAS,CAACC,MAAV,GAAmB,CAAtB,EAAwB;AACpB,UAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACH;;AACD,OAAKH,MAAL,GAAcA,MAAM,IAAI,CAAxB;AACA,OAAKH,SAAL,GAAiBA,SAAjB;AACA,OAAKE,QAAL,GAAgBA,QAAhB;AACA,OAAKK,SAAL,CAAeN,MAAf;AACH,CARD;;AAUAF,kBAAkB,CAACS,SAAnB,GAA+B;AAC3BC,EAAAA,aAAa,EAAE,UAASC,CAAT,EAAW;AAAE;AACxB,QAAIC,KAAK,GAAG,KAAKX,SAAL,CAAeY,GAAf,CAAmBF,CAAnB,CAAZ;AACA,QAAIG,IAAI,GAAGF,KAAK,CAACG,UAAN,EAAX;;AACA,QAAGD,IAAI,GAAG,KAAKE,aAAf,EAA6B;AACzB,UAAIC,CAAC,GAAGL,KAAK,CAACM,WAAN,CAAmB,MAAMJ,IAAI,GAAG,KAAKE,aAArC,EAAqDZ,MAArD,CAA4D,KAAKA,MAAjE,EAAyEe,SAAzE,CAAmF,KAAKC,YAAxF,CAAR;AACAT,MAAAA,CAAC,CAACU,QAAF,CAAWJ,CAAX;AACH;AACJ,GAR0B;AAU3BK,EAAAA,SAAS,EAAE,UAASC,QAAT,EAAkB;AACzB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,WAAL,CAAiB,KAAKrB,QAAtB;AACH,GAb0B;AAe3BsB,EAAAA,YAAY,EAAE,YAAU;AACpB,WAAO,KAAKxB,SAAZ;AACH,GAjB0B;AAmB3ByB,EAAAA,SAAS,EAAE,YAAU;AACjB,WAAO,KAAKtB,MAAZ;AACH,GArB0B;AAuB3BuB,EAAAA,SAAS,EAAE,YAAU;AACjB,WAAO,KAAKzB,MAAZ;AACH,GAzB0B;AA2B3B0B,EAAAA,WAAW,EAAE,YAAU;AACnB,WAAO,KAAKzB,QAAZ;AACH,GA7B0B;AA+B3B0B,EAAAA,YAAY,EAAE,UAAS5B,SAAT,EAAmB;AAC7B,SAAKA,SAAL,GAAiBA,SAAjB;AACH,GAjC0B;AAmC3B6B,EAAAA,SAAS,EAAE,UAAS1B,MAAT,EAAgB;AACvB,SAAKA,MAAL,GAAcA,MAAd;AACH,GArC0B;AAuC3BI,EAAAA,SAAS,EAAE,UAASuB,CAAT,EAAW;AAClB,SAAK7B,MAAL,GAAc6B,CAAd;AACA,SAAKf,aAAL,GAAqBe,CAAC,GAAGA,CAAzB;AACH,GA1C0B;AA4C3BP,EAAAA,WAAW,EAAE,UAASrB,QAAT,EAAkB;AAC3B,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKiB,YAAL,GAAoBjB,QAAQ,GAAG,KAAKoB,QAApC;AACH;AA/C0B,CAA/B;AAkDAS,MAAM,CAACC,OAAP,GAAiBjC,kBAAjB","sourcesContent":["\n    var AttractionBehavior = function(attractor,radius,strength,jitter){\n        if(arguments.length < 3){\n            throw new Error(\"Constructor received incorrect Parameters\");\n        }\n        this.jitter = jitter || 0;\n        this.attractor = attractor;\n        this.strength = strength;\n        this.setRadius(radius);\n    };\n\n    AttractionBehavior.prototype = {\n        applyBehavior: function(p){ //apply() is reserved, so this is now applyBehavior\n            var delta = this.attractor.sub(p);\n            var dist = delta.magSquared();\n            if(dist < this.radiusSquared){\n                var f = delta.normalizeTo((1.0 - dist / this.radiusSquared)).jitter(this.jitter).scaleSelf(this.attrStrength);\n                p.addForce(f);\n            }\n        },\n\n        configure: function(timeStep){\n            this.timeStep = timeStep;\n            this.setStrength(this.strength);\n        },\n\n        getAttractor: function(){\n            return this.attractor;\n        },\n\n        getJitter: function(){\n            return this.jitter;\n        },\n\n        getRadius: function(){\n            return this.radius;\n        },\n\n        getStrength: function(){\n            return this.strength;\n        },\n\n        setAttractor: function(attractor){\n            this.attractor = attractor;\n        },\n\n        setJitter: function(jitter){\n            this.jitter = jitter;\n        },\n\n        setRadius: function(r){\n            this.radius = r;\n            this.radiusSquared = r * r;\n        },\n\n        setStrength: function(strength){\n            this.strength = strength;\n            this.attrStrength = strength * this.timeStep;\n        }\n    };\n\n    module.exports = AttractionBehavior;\n\n\n"]},"metadata":{},"sourceType":"script"}