{"ast":null,"code":"var Matrix4x4 = require('../geom/Matrix4x4'),\n    Vec3D = require('../geom/Vec3D'),\n    TriangleMesh = require('../geom/mesh/TriangleMesh');\n\nvar ToxiclibsSupport = function (processing, optional_gfx) {\n  if (typeof Processing === 'undefined') {\n    throw new Error(\"Processing.js has not been loaded\");\n  }\n\n  this.sketch = processing;\n  this.app = processing;\n\n  if (optional_gfx !== undefined) {\n    this.gfx = processing;\n  } else {\n    this.gfx = this.app;\n  }\n\n  this._normalMap = new Matrix4x4().translateSelf(128, 128, 128).scaleSelf(127);\n};\n\nToxiclibsSupport.prototype = {\n  box: function (aabb, smooth) {\n    var mesh = aabb.toMesh();\n\n    if (smooth === undefined) {\n      smooth = false;\n    }\n\n    if (smooth) {\n      mesh.computeVertexNormals();\n    }\n\n    this.mesh(mesh, smooth, 0);\n  },\n  circle: function (p, radius) {\n    this.gfx.ellipse(p.x, p.y, radius, radius);\n  },\n  cone: function () {\n    var cone = arguments[0],\n        res = 6,\n        thetaOffset = 0,\n        topClosed = true,\n        bottomClosed = true,\n        smooth = false;\n\n    if (arguments.length == 5) {\n      res = arguments[1];\n      topClosed = arguments[2];\n      bottomClosed = arguments[3];\n      smooth = arguments[4];\n    } else if (arguments.length == 3) {\n      res = arguments[1];\n      smooth = arguments[2];\n    }\n\n    var mesh = cone.toMesh({\n      mesh: new TriangleMesh(),\n      steps: res,\n      thetaOffset: thetaOffset,\n      topClosed: topClosed,\n      bottomClosed: bottomClosed\n    });\n\n    if (smooth) {\n      mesh.computeVertexNormals();\n    }\n\n    window.mesh = mesh;\n    this.mesh(mesh, smooth, 0);\n  },\n  cylinder: function (cyl, res, smooth) {\n    if (arguments.length == 1) {\n      this.mesh(cyl.toMesh(), false, 0);\n    } else {\n      var mesh = cyl.toMesh(res, 0);\n\n      if (smooth === undefined) {\n        smooth = false;\n      }\n\n      if (smooth) {\n        mesh.computeVertexNormals();\n      }\n\n      this.mesh(mesh, smooth, 0);\n    }\n  },\n\n  /*\n  Pjs currently doesn't provide access to PGraphics properties,\n  such as ellipseMode. So I am allowing it as an optional propery\n  */\n  ellipse: function (e, ellipseMode) {\n    var r = e.getRadii();\n\n    if (ellipseMode === undefined) {\n      ellipseMode = this.app.CENTER;\n    }\n\n    if (ellipseMode === this.app.CENTER) {\n      this.gfx.ellipse(e.x, e.y, r.x * 2, r.y * 2);\n    } else if (ellipseMode === this.app.RADIUS) {\n      this.gfx.ellipse(e.x, e.y, r.x * 2, r.y * 2);\n    } else if (ellipseMode === this.app.CORNER || this.gfx.ellipseMode === this.app.CORNERS) {\n      this.gfx.ellipse(e.x - r.x, e.y - r.y, r.x * 2, r.y * 2);\n    }\n  },\n  getGraphics: function () {\n    return this.gfx;\n  },\n  line: function () {\n    var a, b;\n\n    if (arguments.length == 1) {\n      var line = arguments[0];\n      a = line.a;\n      b = line.b;\n    } else {\n      a = arguments[0], b = arguments[1];\n    }\n\n    if (a.z === undefined) {\n      this.gfx.line(a.x, a.y, b.x, b.y);\n    } else {\n      this.gfx.line(a.x, a.y, a.z, b.x, b.y, b.z);\n    }\n  },\n  lineStrip2D: function (points) {\n    //var isFilled = this.fill; //TODO <-- verify how this works!\n    //this.gfx.fill = false;\n    this.processVertices2D(points, this.app.POLYGON, false); //this.gfx.fill = isFilled;\n  },\n  lineStrip3D: function (points) {\n    //var isFilled = this.gfx.fill;\n    //this.gfx.fill = false;\n    this.processVertices3D(points, this.app.POLYGON, false); //this.gfx.fill = isFilled;\n  },\n  mesh: function (mesh, smooth, normalLength) {\n    if (smooth === undefined) {\n      smooth = false;\n    }\n\n    if (normalLength === undefined) {\n      normalLength = 0;\n    }\n\n    this.gfx.beginShape(this.app.TRIANGLES);\n    var i = 0,\n        len = mesh.faces.length;\n\n    if (smooth) {\n      for (i = 0; i < len; i++) {\n        var f = mesh.faces[i];\n        this.gfx.normal(f.a.normal.x, f.a.normal.y, f.a.normal.z);\n        this.gfx.vertex(f.a.x, f.a.y, f.a.z);\n        this.gfx.normal(f.b.normal.x, f.b.normal.y, f.b.normal.z);\n        this.gfx.vertex(f.b.x, f.b.y, f.b.z);\n        this.gfx.normal(f.c.normal.x, f.c.normal.y, f.c.normal.z);\n        this.gfx.vertex(f.c.x, f.c.y, f.c.z);\n      }\n    } else {\n      for (var i = 0; i < len; i++) {\n        var f = mesh.faces[i];\n        this.gfx.normal(f.normal.x, f.normal.y, f.normal.z);\n        this.gfx.vertex(f.a.x, f.a.y, f.a.z);\n        this.gfx.vertex(f.b.x, f.b.y, f.b.z);\n        this.gfx.vertex(f.c.x, f.c.y, f.c.z);\n      }\n    }\n\n    this.gfx.endShape();\n\n    if (normalLength > 0) {\n      var strokeCol = 0;\n      var isStroked = this.gfx.stroke; //TODO <-- verify this works!\n\n      if (isStroked) {\n        strokeCol = this.gfx.strokeColor;\n      }\n\n      len = mesh.vertices.length;\n\n      if (smooth) {\n        for (i = 0; i < len; i++) {\n          var v = mesh.vertices[i],\n              w = v.add(v.normal.scale(normalLength));\n          n = v.normal.scale(127);\n          this.gfx.stroke(n.x + 128, n.y + 128, n.z + 128);\n          this.gfx.line(v.x, v.y, v.z, w.x, w.y, w.z);\n        }\n      } else {\n        var third = 1 / 3;\n        len = mesh.faces.length;\n\n        for (i = 0; i < len; i++) {\n          var f = mesh.faces[i],\n              c = f.a.add(f.b).addSelf(f.c).scaleSelf(third),\n              d = c.add(f.normal.scale(normalLength)),\n              n = f.normal.scale(127);\n          this.gfx.stroke(n.x + 128, n.y + 128, n.z + 128);\n          this.gfx.line(c.x, c.y, c.z, d.x, d.y, d.z);\n        }\n      }\n\n      if (isStroked) {\n        this.gfx.stroke(strokeCol);\n      } else {\n        this.gfx.noStroke();\n      }\n    }\n  },\n  meshNormalMapped: function (mesh, vertexNormals, normalLength) {\n    this.gfx.beginShape(this.app.TRIANGLES);\n    var i = 0,\n        len = mesh.faces.length;\n\n    if (vertexNormals) {\n      for (i = 0; i < len; i++) {\n        var f = mesh.faces[i],\n            n = this._normalMap.applyTo(f.a.normal);\n\n        this.gfx.fill(n.x, n.y, n.z);\n        this.gfx.normal(f.a.normal.x, f.a.normal.y, f.a.normal.z);\n        this.gfx.vertex(f.a.x, f.a.y, f.a.z);\n        n = this._normalMap.applyTo(f.b.normal);\n        this.gfx.fill(n.x, n.y, n.z);\n        this.gfx.normal(f.b.normal.x, f.b.normal.y, f.b.normal.z);\n        this.gfx.vertex(f.b.x, f.b.y, f.b.z);\n        n = this._normalMap.applyTo(f.c.nromal);\n        this.gfx.fil(n.x, n.y, n.z);\n        this.gfx.normal(f.c.normal.x, f.c.normal.y, f.c.normal.z);\n        this.gfx.vertex(f.c.x, f.c.y, f.c.z);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        var f = mesh.faces[i];\n        this.gfx.normal(f.normal.x, f.normal.y, f.normal.z);\n        this.gfx.vertex(f.a.x, f.a.y, f.a.z);\n        this.gfx.vertex(f.b.x, f.b.y, f.b.z);\n        this.gfx.vertex(f.c.x, f.c.y, f.c.z);\n      }\n    }\n\n    this.gfx.endShape();\n\n    if (normalLength > 0) {\n      if (vertexNormals) {\n        len = mesh.vertices.length;\n\n        for (i = 0; i < len; i++) {\n          var v = mesh.vertices[i],\n              w = v.add(v.normal.scale(normalLength)),\n              n = v.normal.scale(127);\n          this.gfx.stroke(n.x + 128, n.y + 128, n.z + 128);\n          this.gfx.line(v.x, v.y, v.z, w.x, w.y, w.z);\n        }\n      } else {\n        len = mesh.faces.length;\n\n        for (i = 0; i < len; i++) {\n          var f = mesh.faces[i],\n              c = f.getCentroid(),\n              d = c.add(f.normal.scale(normalLength)),\n              n = f.normal.scale(127);\n          this.gfx.stroke(n.x + 128, n.y + 128, n.z + 128);\n          this.gfx.line(c.x, c.y, c.z, d.x, d.y, d.z);\n        }\n      }\n    }\n  },\n  origin: function () {\n    var o = undefined,\n        len = undefined;\n\n    if (arguments.length == 1) {\n      len = arguments[0];\n      o = Vec3D.ZERO;\n    } else {\n      o = arguments[0];\n      len = arguments[1];\n    }\n\n    this.gfx.stroke(255, 0, 0);\n    this.gfx.line(o.x, o.y, o.z, o.x + len, o.y, o.z);\n    this.gfx.stroke(0, 255, 0);\n    this.gfx.line(o.x, o.y, o.z, o.x, o.y + len, o.z);\n    this.gfx.stroke(0, 0, 255);\n    this.gfx.line(o.x, o.y, o.z, o.x, o.y, o.z + len);\n  },\n  plane: function (plane, size) {\n    this.mesh(plane.toMesh(size), false, 0);\n  },\n  point: function (p) {\n    if (p.z === undefined) {\n      this.gfx.point(p.x, p.y);\n    } else {\n      this.gfx.point(p.x, p.y, p.z);\n    }\n  },\n\n  /**\n   * iterates and draws the provided 2D points\n   * @param {Array} or {Processing#Iterator} points to iterate\n   */\n  points2D: function (points) {\n    this.processVertices2D(points, this.app.POINTS, false);\n  },\n\n  /**\n   * iterates and draws the provided 3D points\n   * @param {Array} or {Processing#Iterator} points to iterate\n   */\n  points3D: function (points) {\n    this.processVertices3D(points, this.app.POINTS, false);\n  },\n  polygon2D: function (poly) {\n    this.processVertices2D(poly.vertices, this.app.POLYGON, false);\n  },\n\n  /**\n   * Processes the 2D vertices from a Processing.js Iterator object\n   * @params {Iterator} iterator\n   * @params {Number} shapeID\n   * @params {Boolean} closed\n   */\n  processVertices2D: function (iterator, shapeID, closed) {\n    //if first param wasnt passed in as a pjs Iterator, make it one\n    if (iterator.hasNext === undefined || iterator.next === undefined) {\n      iterator = new this.app.ObjectIterator(iterator);\n    }\n\n    this.gfx.beginShape(shapeID);\n\n    for (var v = void 0; iterator.hasNext() && ((v = iterator.next()) || true);) {\n      this.gfx.vertex(v.x, v.y);\n    }\n    /*var i=0,\n    \tlen = points.length;\n    for(i=0;i<len;i++){\n    \tvar v = points[i];\n    \tthis.gfx.vertex(v.x,v.y);\n    }*/\n\n\n    if (closed) {\n      this.gfx.endShape(this.app.CLOSE);\n    } else {\n      this.gfx.endShape();\n    }\n  },\n\n  /**\n   * Processes the 3D vertices from a Processing.js Iterator object\n   * @params {Iterator} iterator\n   * @params {Number} shapeID\n   * @params {Boolean} closed\n   */\n  processVertices3D: function (iterator, shapeID, closed) {\n    //if first param wasnt passed in as a pjs Iterator, make it one\n    if (iterator.hasNext === undefined || iterator.next === undefined) {\n      iterator = new this.app.ObjectIterator(iterator);\n    }\n\n    this.gfx.beginShape(shapeID);\n\n    for (var v = void 0; iterator.hasNext() && ((v = iterator.next()) || true);) {\n      this.gfx.vertex(v.x, v.y, v.z);\n    }\n    /*var i=0,\n    \tlen = points.length;\n    for(i=0;i<len;i++){\n    \tvar v = points[i];\n    \tthis.gfx.vertex(v.x,v.y,v.z);\n    }*/\n\n\n    if (closed) {\n      this.gfx.endShape(this.app.CLOSE);\n    } else {\n      this.gfx.endShape();\n    }\n  },\n  ray: function (ray, length) {\n    var e = ray.getPointAtDistance(length);\n\n    if (ray.z === undefined) {\n      this.gfx.line(ray.x, ray.y, e.x, e.y);\n    } else {\n      this.gfx.line(ray.x, ray.y, ray.z, e.x, e.y, e.z);\n    }\n  },\n\n  /*\n  Pjs currently doesn't provide access to PGraphics properties,\n  such as rectMode. So I am allowing it as an optional propery\n  */\n  rect: function (r, rectMode) {\n    if (rectMode === undefined) {\n      rectMode = this.app.CORNER;\n    }\n\n    if (rectMode === this.app.CORNER) {\n      this.gfx.rect(r.x, r.y, r.width, r.height);\n    } else if (rectMode === this.app.CORNERS) {\n      this.gfx.rect(r.x, r.y, r.x + r.width, r.y + r.height);\n    } else if (rectMode === this.app.CENTER) {\n      this.gfx.rect(r.x + r.widt * 0.5, r.y + r.height * 0.5, r.width, r.height);\n    } else if (rectMode === this.app.RADIUS) {\n      var rw = r.width * 0.5,\n          rh = r.height * 0.5;\n      this.gfx.rect(r.x + rw, r.y + rh, rw, rh);\n    }\n  },\n  setGraphics: function (gfx) {\n    this.gfx = gfx;\n  },\n  sphere: function (sphere, res, smooth) {\n    this.mesh(sphere.toMesh(res), smooth);\n  },\n  texturedMesh: function (mesh, tex, smooth) {\n    this.gfx.beginShape(this.app.TRIANGLES);\n    this.gfx.texture(tex);\n    var i = 0,\n        len = mesh.faces.length;\n\n    if (smooth) {\n      for (i = 0; i < len; i++) {\n        var f = mesh.faces[i];\n\n        if (f.uvA !== undefined && f.uvB !== undefined && f.uvC !== undefined) {\n          this.gfx.normal(f.a.normal.x, f.a.normal.y, f.a.normal.z);\n          this.gfx.vertex(f.a.x, f.a.y, f.a.z, f.uvA.x, f.uvA.y);\n          this.gfx.normal(f.b.normal.x, f.b.normal.y, f.b.normal.z);\n          this.gfx.vertex(f.b.x, f.b.y, f.b.z, f.uvB.x, f.uvB.y);\n          this.gfx.normal(f.c.normal.x, f.c.normal.y, f.c.normal.z);\n          this.gfx.vertex(f.c.x, f.c.y, f.c.z, f.uvC.x, f.uvC.y);\n        } else {\n          this.gfx.vertex(f.a.x, f.a.y, f.a.z);\n          this.gfx.vertex(f.b.x, f.b.y, f.b.z);\n          this.gfx.vertex(f.c.x, f.c.y, f.c.z);\n        }\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        var f = mesh.faces[i];\n        this.gfx.normal(f.normal.x, f.normal.y, f.normal.z);\n\n        if (f.uvA !== undefined && f.uvB !== undefined && f.uvC !== undefined) {\n          this.gfx.vertex(f.a.x, f.a.y, f.a.z, f.uvA.x, f.uvA.y);\n          this.gfx.vertex(f.b.x, f.b.y, f.b.z, f.uvB.x, f.uvB.y);\n          this.gfx.vertex(f.c.x, f.c.y, f.c.z, f.uvC.x, f.uvC.y);\n        } else {\n          this.gfx.vertex(f.a.x, f.a.y, f.a.z);\n          this.gfx.vertex(f.b.x, f.b.y, f.b.z);\n          this.gfx.vertex(f.c.x, f.c.y, f.c.z);\n        }\n      }\n    }\n\n    this.gfx.endShape();\n  },\n  //works for Triangle3D or Triangle2D\n  triangle: function (tri, isFullShape) {\n    var isTriangle = function () {\n      if (tri.a !== undefined && tri.b !== undefined && tri.c !== undefined) {\n        return tri.a.x !== undefined;\n      }\n\n      return false;\n    },\n        isTriangle3D = function () {\n      if (isTriangle()) {\n        return tri.a.z !== undefined;\n      }\n\n      return false;\n    };\n\n    if (isFullShape || isFullShape === undefined) {\n      this.gfx.beginShape(this.app.TRIANGLES);\n    }\n\n    if (isTriangle3D()) {\n      var n = tri.computeNormal();\n      this.gfx.normal(n.x, n.y, n.z);\n      this.gfx.vertex(tri.a.x, tri.a.y, tri.a.z);\n      this.gfx.vertex(tri.b.x, tri.b.y, tri.b.z);\n      this.gfx.vertex(tri.c.x, tri.c.y, tri.c.z);\n    } else {\n      //should be Triangle2D\n      this.gfx.vertex(tri.a.x, tri.a.y);\n      this.gfx.vertex(tri.b.x, tri.b.y);\n      this.gfx.vertex(tri.c.x, tri.c.y);\n    }\n\n    if (isFullShape || isFullShape === undefined) {\n      this.gfx.endShape();\n    }\n  },\n  vertex: function (v) {\n    if (v.z === undefined) {\n      this.gfx.vertex(v.x, v.y);\n    } else {\n      this.gfx.vertex(v.x, v.y, v.z);\n    }\n  }\n};\nmodule.exports = ToxiclibsSupport;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/processing/ToxiclibsSupport.js"],"names":["Matrix4x4","require","Vec3D","TriangleMesh","ToxiclibsSupport","processing","optional_gfx","Processing","Error","sketch","app","undefined","gfx","_normalMap","translateSelf","scaleSelf","prototype","box","aabb","smooth","mesh","toMesh","computeVertexNormals","circle","p","radius","ellipse","x","y","cone","arguments","res","thetaOffset","topClosed","bottomClosed","length","steps","window","cylinder","cyl","e","ellipseMode","r","getRadii","CENTER","RADIUS","CORNER","CORNERS","getGraphics","line","a","b","z","lineStrip2D","points","processVertices2D","POLYGON","lineStrip3D","processVertices3D","normalLength","beginShape","TRIANGLES","i","len","faces","f","normal","vertex","c","endShape","strokeCol","isStroked","stroke","strokeColor","vertices","v","w","add","scale","n","third","addSelf","d","noStroke","meshNormalMapped","vertexNormals","applyTo","fill","nromal","fil","getCentroid","origin","o","ZERO","plane","size","point","points2D","POINTS","points3D","polygon2D","poly","iterator","shapeID","closed","hasNext","next","ObjectIterator","CLOSE","ray","getPointAtDistance","rect","rectMode","width","height","widt","rw","rh","setGraphics","sphere","texturedMesh","tex","texture","uvA","uvB","uvC","triangle","tri","isFullShape","isTriangle","isTriangle3D","computeNormal","module","exports"],"mappings":"AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,mBAAD,CAAvB;AAAA,IACCC,KAAK,GAAGD,OAAO,CAAC,eAAD,CADhB;AAAA,IAECE,YAAY,GAAGF,OAAO,CAAC,2BAAD,CAFvB;;AAIA,IAAIG,gBAAgB,GAAG,UAASC,UAAT,EAAoBC,YAApB,EAAiC;AACvD,MAAG,OAAOC,UAAP,KAAsB,WAAzB,EAAqC;AACpC,UAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACA;;AACD,OAAKC,MAAL,GAAcJ,UAAd;AACA,OAAKK,GAAL,GAAWL,UAAX;;AACA,MAAGC,YAAY,KAAKK,SAApB,EAA8B;AAC7B,SAAKC,GAAL,GAAWP,UAAX;AACA,GAFD,MAEO;AACN,SAAKO,GAAL,GAAW,KAAKF,GAAhB;AACA;;AACD,OAAKG,UAAL,GAAkB,IAAIb,SAAJ,GAAgBc,aAAhB,CAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA2CC,SAA3C,CAAqD,GAArD,CAAlB;AACA,CAZD;;AAgBAX,gBAAgB,CAACY,SAAjB,GAA6B;AAC5BC,EAAAA,GAAG,EAAE,UAASC,IAAT,EAAcC,MAAd,EAAqB;AACzB,QAAIC,IAAI,GAAGF,IAAI,CAACG,MAAL,EAAX;;AACA,QAAGF,MAAM,KAAKR,SAAd,EAAwB;AACvBQ,MAAAA,MAAM,GAAG,KAAT;AACA;;AACD,QAAGA,MAAH,EAAU;AACTC,MAAAA,IAAI,CAACE,oBAAL;AACA;;AACD,SAAKF,IAAL,CAAUA,IAAV,EAAeD,MAAf,EAAsB,CAAtB;AACA,GAV2B;AAY5BI,EAAAA,MAAM,EAAE,UAASC,CAAT,EAAWC,MAAX,EAAkB;AACzB,SAAKb,GAAL,CAASc,OAAT,CAAiBF,CAAC,CAACG,CAAnB,EAAqBH,CAAC,CAACI,CAAvB,EAAyBH,MAAzB,EAAgCA,MAAhC;AACA,GAd2B;AAgB5BI,EAAAA,IAAI,EAAE,YAAU;AACf,QAAIA,IAAI,GAAGC,SAAS,CAAC,CAAD,CAApB;AAAA,QACCC,GAAG,GAAG,CADP;AAAA,QAECC,WAAW,GAAG,CAFf;AAAA,QAGCC,SAAS,GAAG,IAHb;AAAA,QAICC,YAAY,GAAG,IAJhB;AAAA,QAKCf,MAAM,GAAG,KALV;;AAMA,QAAGW,SAAS,CAACK,MAAV,IAAoB,CAAvB,EAAyB;AACxBJ,MAAAA,GAAG,GAAGD,SAAS,CAAC,CAAD,CAAf;AACAG,MAAAA,SAAS,GAAGH,SAAS,CAAC,CAAD,CAArB;AACAI,MAAAA,YAAY,GAAGJ,SAAS,CAAC,CAAD,CAAxB;AACAX,MAAAA,MAAM,GAAGW,SAAS,CAAC,CAAD,CAAlB;AACA,KALD,MAKO,IAAGA,SAAS,CAACK,MAAV,IAAoB,CAAvB,EAAyB;AAC/BJ,MAAAA,GAAG,GAAGD,SAAS,CAAC,CAAD,CAAf;AACAX,MAAAA,MAAM,GAAGW,SAAS,CAAC,CAAD,CAAlB;AACA;;AAED,QAAIV,IAAI,GAAGS,IAAI,CAACR,MAAL,CAAY;AACtBD,MAAAA,IAAI,EAAE,IAAIjB,YAAJ,EADgB;AAEtBiC,MAAAA,KAAK,EAAEL,GAFe;AAGtBC,MAAAA,WAAW,EAAEA,WAHS;AAItBC,MAAAA,SAAS,EAAEA,SAJW;AAKtBC,MAAAA,YAAY,EAAEA;AALQ,KAAZ,CAAX;;AAQA,QAAGf,MAAH,EAAU;AACTC,MAAAA,IAAI,CAACE,oBAAL;AACA;;AACDe,IAAAA,MAAM,CAACjB,IAAP,GAAcA,IAAd;AACA,SAAKA,IAAL,CAAUA,IAAV,EAAeD,MAAf,EAAsB,CAAtB;AACA,GA9C2B;AAgD5BmB,EAAAA,QAAQ,EAAE,UAASC,GAAT,EAAaR,GAAb,EAAiBZ,MAAjB,EAAwB;AACjC,QAAGW,SAAS,CAACK,MAAV,IAAoB,CAAvB,EAAyB;AACxB,WAAKf,IAAL,CAAUmB,GAAG,CAAClB,MAAJ,EAAV,EAAuB,KAAvB,EAA6B,CAA7B;AACA,KAFD,MAEO;AACN,UAAID,IAAI,GAAGmB,GAAG,CAAClB,MAAJ,CAAWU,GAAX,EAAe,CAAf,CAAX;;AACA,UAAGZ,MAAM,KAAKR,SAAd,EAAwB;AACvBQ,QAAAA,MAAM,GAAG,KAAT;AACA;;AACD,UAAGA,MAAH,EAAU;AACTC,QAAAA,IAAI,CAACE,oBAAL;AACA;;AACD,WAAKF,IAAL,CAAUA,IAAV,EAAeD,MAAf,EAAsB,CAAtB;AACA;AACD,GA7D2B;;AA+D5B;AACD;AACA;AACA;AACCO,EAAAA,OAAO,EAAE,UAASc,CAAT,EAAWC,WAAX,EAAuB;AAC/B,QAAIC,CAAC,GAAGF,CAAC,CAACG,QAAF,EAAR;;AACA,QAAGF,WAAW,KAAK9B,SAAnB,EAA6B;AAC5B8B,MAAAA,WAAW,GAAG,KAAK/B,GAAL,CAASkC,MAAvB;AACA;;AACD,QAAGH,WAAW,KAAK,KAAK/B,GAAL,CAASkC,MAA5B,EAAmC;AAClC,WAAKhC,GAAL,CAASc,OAAT,CAAiBc,CAAC,CAACb,CAAnB,EAAqBa,CAAC,CAACZ,CAAvB,EAAyBc,CAAC,CAACf,CAAF,GAAI,CAA7B,EAA+Be,CAAC,CAACd,CAAF,GAAI,CAAnC;AACA,KAFD,MAEO,IAAGa,WAAW,KAAK,KAAK/B,GAAL,CAASmC,MAA5B,EAAmC;AACzC,WAAKjC,GAAL,CAASc,OAAT,CAAiBc,CAAC,CAACb,CAAnB,EAAqBa,CAAC,CAACZ,CAAvB,EAAyBc,CAAC,CAACf,CAAF,GAAI,CAA7B,EAA+Be,CAAC,CAACd,CAAF,GAAI,CAAnC;AACA,KAFM,MAEA,IAAGa,WAAW,KAAK,KAAK/B,GAAL,CAASoC,MAAzB,IAAmC,KAAKlC,GAAL,CAAS6B,WAAT,KAAyB,KAAK/B,GAAL,CAASqC,OAAxE,EAAgF;AACtF,WAAKnC,GAAL,CAASc,OAAT,CAAiBc,CAAC,CAACb,CAAF,GAAIe,CAAC,CAACf,CAAvB,EAAyBa,CAAC,CAACZ,CAAF,GAAIc,CAAC,CAACd,CAA/B,EAAiCc,CAAC,CAACf,CAAF,GAAI,CAArC,EAAuCe,CAAC,CAACd,CAAF,GAAI,CAA3C;AACA;AACD,GA/E2B;AAiF5BoB,EAAAA,WAAW,EAAE,YAAU;AACtB,WAAO,KAAKpC,GAAZ;AACA,GAnF2B;AAqF5BqC,EAAAA,IAAI,EAAE,YAAU;AACf,QAAIC,CAAJ,EACCC,CADD;;AAEA,QAAGrB,SAAS,CAACK,MAAV,IAAoB,CAAvB,EAAyB;AACxB,UAAIc,IAAI,GAAGnB,SAAS,CAAC,CAAD,CAApB;AACAoB,MAAAA,CAAC,GAAGD,IAAI,CAACC,CAAT;AACAC,MAAAA,CAAC,GAAGF,IAAI,CAACE,CAAT;AACA,KAJD,MAIO;AACND,MAAAA,CAAC,GAAGpB,SAAS,CAAC,CAAD,CAAb,EACAqB,CAAC,GAAGrB,SAAS,CAAC,CAAD,CADb;AAEA;;AACD,QAAGoB,CAAC,CAACE,CAAF,KAAQzC,SAAX,EAAqB;AACpB,WAAKC,GAAL,CAASqC,IAAT,CAAcC,CAAC,CAACvB,CAAhB,EAAkBuB,CAAC,CAACtB,CAApB,EAAsBuB,CAAC,CAACxB,CAAxB,EAA0BwB,CAAC,CAACvB,CAA5B;AACA,KAFD,MAEO;AACN,WAAKhB,GAAL,CAASqC,IAAT,CAAcC,CAAC,CAACvB,CAAhB,EAAkBuB,CAAC,CAACtB,CAApB,EAAsBsB,CAAC,CAACE,CAAxB,EAA0BD,CAAC,CAACxB,CAA5B,EAA8BwB,CAAC,CAACvB,CAAhC,EAAkCuB,CAAC,CAACC,CAApC;AACA;AACD,GArG2B;AAuG5BC,EAAAA,WAAW,EAAE,UAASC,MAAT,EAAgB;AAC5B;AACA;AACA,SAAKC,iBAAL,CAAuBD,MAAvB,EAA8B,KAAK5C,GAAL,CAAS8C,OAAvC,EAA+C,KAA/C,EAH4B,CAI5B;AACA,GA5G2B;AA8G5BC,EAAAA,WAAW,EAAE,UAASH,MAAT,EAAgB;AAC5B;AACA;AACA,SAAKI,iBAAL,CAAuBJ,MAAvB,EAA8B,KAAK5C,GAAL,CAAS8C,OAAvC,EAA+C,KAA/C,EAH4B,CAI5B;AACA,GAnH2B;AAqH5BpC,EAAAA,IAAI,EAAE,UAASA,IAAT,EAAcD,MAAd,EAAqBwC,YAArB,EAAkC;AACvC,QAAGxC,MAAM,KAAKR,SAAd,EAAwB;AACvBQ,MAAAA,MAAM,GAAG,KAAT;AACA;;AACD,QAAGwC,YAAY,KAAKhD,SAApB,EAA8B;AAC7BgD,MAAAA,YAAY,GAAG,CAAf;AACA;;AAED,SAAK/C,GAAL,CAASgD,UAAT,CAAoB,KAAKlD,GAAL,CAASmD,SAA7B;AACA,QAAIC,CAAC,GAAE,CAAP;AAAA,QACCC,GAAG,GAAG3C,IAAI,CAAC4C,KAAL,CAAW7B,MADlB;;AAEA,QAAGhB,MAAH,EAAU;AACT,WAAI2C,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACC,GAAV,EAAcD,CAAC,EAAf,EAAkB;AACjB,YAAIG,CAAC,GAAG7C,IAAI,CAAC4C,KAAL,CAAWF,CAAX,CAAR;AACA,aAAKlD,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWvC,CAA3B,EAA6BsC,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWtC,CAAxC,EAA0CqC,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWd,CAArD;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACf,CAAF,CAAIvB,CAApB,EAAsBsC,CAAC,CAACf,CAAF,CAAItB,CAA1B,EAA4BqC,CAAC,CAACf,CAAF,CAAIE,CAAhC;AACA,aAAKxC,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWvC,CAA3B,EAA6BsC,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWtC,CAAxC,EAA0CqC,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWd,CAArD;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACd,CAAF,CAAIxB,CAApB,EAAsBsC,CAAC,CAACd,CAAF,CAAIvB,CAA1B,EAA4BqC,CAAC,CAACd,CAAF,CAAIC,CAAhC;AACA,aAAKxC,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWvC,CAA3B,EAA6BsC,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWtC,CAAxC,EAA0CqC,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWd,CAArD;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACG,CAAF,CAAIzC,CAApB,EAAsBsC,CAAC,CAACG,CAAF,CAAIxC,CAA1B,EAA4BqC,CAAC,CAACG,CAAF,CAAIhB,CAAhC;AACA;AACD,KAVD,MAUO;AACN,WAAI,IAAIU,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,GAAd,EAAkBD,CAAC,EAAnB,EAAsB;AACrB,YAAIG,CAAC,GAAG7C,IAAI,CAAC4C,KAAL,CAAWF,CAAX,CAAR;AACA,aAAKlD,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACC,MAAF,CAASvC,CAAzB,EAA2BsC,CAAC,CAACC,MAAF,CAAStC,CAApC,EAAsCqC,CAAC,CAACC,MAAF,CAASd,CAA/C;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACf,CAAF,CAAIvB,CAApB,EAAsBsC,CAAC,CAACf,CAAF,CAAItB,CAA1B,EAA4BqC,CAAC,CAACf,CAAF,CAAIE,CAAhC;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACd,CAAF,CAAIxB,CAApB,EAAsBsC,CAAC,CAACd,CAAF,CAAIvB,CAA1B,EAA4BqC,CAAC,CAACd,CAAF,CAAIC,CAAhC;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACG,CAAF,CAAIzC,CAApB,EAAsBsC,CAAC,CAACG,CAAF,CAAIxC,CAA1B,EAA4BqC,CAAC,CAACG,CAAF,CAAIhB,CAAhC;AACA;AACD;;AACD,SAAKxC,GAAL,CAASyD,QAAT;;AACA,QAAGV,YAAY,GAAG,CAAlB,EAAoB;AACnB,UAAIW,SAAS,GAAG,CAAhB;AACA,UAAIC,SAAS,GAAG,KAAK3D,GAAL,CAAS4D,MAAzB,CAFmB,CAEe;;AAClC,UAAGD,SAAH,EAAa;AACZD,QAAAA,SAAS,GAAG,KAAK1D,GAAL,CAAS6D,WAArB;AACA;;AACDV,MAAAA,GAAG,GAAG3C,IAAI,CAACsD,QAAL,CAAcvC,MAApB;;AACA,UAAGhB,MAAH,EAAU;AACT,aAAI2C,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACC,GAAV,EAAcD,CAAC,EAAf,EAAkB;AACjB,cAAIa,CAAC,GAAGvD,IAAI,CAACsD,QAAL,CAAcZ,CAAd,CAAR;AAAA,cACCc,CAAC,GAAGD,CAAC,CAACE,GAAF,CAAMF,CAAC,CAACT,MAAF,CAASY,KAAT,CAAenB,YAAf,CAAN,CADL;AAECoB,UAAAA,CAAC,GAAGJ,CAAC,CAACT,MAAF,CAASY,KAAT,CAAe,GAAf,CAAJ;AACD,eAAKlE,GAAL,CAAS4D,MAAT,CAAgBO,CAAC,CAACpD,CAAF,GAAM,GAAtB,EAA2BoD,CAAC,CAACnD,CAAF,GAAM,GAAjC,EAAsCmD,CAAC,CAAC3B,CAAF,GAAM,GAA5C;AACA,eAAKxC,GAAL,CAASqC,IAAT,CAAc0B,CAAC,CAAChD,CAAhB,EAAkBgD,CAAC,CAAC/C,CAApB,EAAsB+C,CAAC,CAACvB,CAAxB,EAA0BwB,CAAC,CAACjD,CAA5B,EAA8BiD,CAAC,CAAChD,CAAhC,EAAkCgD,CAAC,CAACxB,CAApC;AACA;AACD,OARD,MAQO;AACN,YAAI4B,KAAK,GAAG,IAAI,CAAhB;AACAjB,QAAAA,GAAG,GAAG3C,IAAI,CAAC4C,KAAL,CAAW7B,MAAjB;;AACA,aAAI2B,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACC,GAAV,EAAcD,CAAC,EAAf,EAAkB;AACjB,cAAIG,CAAC,GAAG7C,IAAI,CAAC4C,KAAL,CAAWF,CAAX,CAAR;AAAA,cACCM,CAAC,GAAGH,CAAC,CAACf,CAAF,CAAI2B,GAAJ,CAAQZ,CAAC,CAACd,CAAV,EAAa8B,OAAb,CAAqBhB,CAAC,CAACG,CAAvB,EAA0BrD,SAA1B,CAAoCiE,KAApC,CADL;AAAA,cAECE,CAAC,GAAGd,CAAC,CAACS,GAAF,CAAMZ,CAAC,CAACC,MAAF,CAASY,KAAT,CAAenB,YAAf,CAAN,CAFL;AAAA,cAGCoB,CAAC,GAAGd,CAAC,CAACC,MAAF,CAASY,KAAT,CAAe,GAAf,CAHL;AAIA,eAAKlE,GAAL,CAAS4D,MAAT,CAAgBO,CAAC,CAACpD,CAAF,GAAI,GAApB,EAAwBoD,CAAC,CAACnD,CAAF,GAAI,GAA5B,EAAgCmD,CAAC,CAAC3B,CAAF,GAAI,GAApC;AACA,eAAKxC,GAAL,CAASqC,IAAT,CAAcmB,CAAC,CAACzC,CAAhB,EAAkByC,CAAC,CAACxC,CAApB,EAAsBwC,CAAC,CAAChB,CAAxB,EAA0B8B,CAAC,CAACvD,CAA5B,EAA8BuD,CAAC,CAACtD,CAAhC,EAAkCsD,CAAC,CAAC9B,CAApC;AACA;AACD;;AACD,UAAGmB,SAAH,EAAa;AACZ,aAAK3D,GAAL,CAAS4D,MAAT,CAAgBF,SAAhB;AACA,OAFD,MAEO;AACN,aAAK1D,GAAL,CAASuE,QAAT;AACA;AACD;AACD,GArL2B;AAuL5BC,EAAAA,gBAAgB,EAAE,UAAShE,IAAT,EAAciE,aAAd,EAA4B1B,YAA5B,EAAyC;AAC1D,SAAK/C,GAAL,CAASgD,UAAT,CAAoB,KAAKlD,GAAL,CAASmD,SAA7B;AACA,QAAIC,CAAC,GAAE,CAAP;AAAA,QACCC,GAAG,GAAG3C,IAAI,CAAC4C,KAAL,CAAW7B,MADlB;;AAEA,QAAGkD,aAAH,EAAiB;AAChB,WAAIvB,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACC,GAAV,EAAcD,CAAC,EAAf,EAAkB;AACjB,YAAIG,CAAC,GAAG7C,IAAI,CAAC4C,KAAL,CAAWF,CAAX,CAAR;AAAA,YACCiB,CAAC,GAAG,KAAKlE,UAAL,CAAgByE,OAAhB,CAAwBrB,CAAC,CAACf,CAAF,CAAIgB,MAA5B,CADL;;AAEA,aAAKtD,GAAL,CAAS2E,IAAT,CAAcR,CAAC,CAACpD,CAAhB,EAAkBoD,CAAC,CAACnD,CAApB,EAAsBmD,CAAC,CAAC3B,CAAxB;AACA,aAAKxC,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWvC,CAA3B,EAA6BsC,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWtC,CAAxC,EAA0CqC,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWd,CAArD;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACf,CAAF,CAAIvB,CAApB,EAAsBsC,CAAC,CAACf,CAAF,CAAItB,CAA1B,EAA4BqC,CAAC,CAACf,CAAF,CAAIE,CAAhC;AACA2B,QAAAA,CAAC,GAAG,KAAKlE,UAAL,CAAgByE,OAAhB,CAAwBrB,CAAC,CAACd,CAAF,CAAIe,MAA5B,CAAJ;AACA,aAAKtD,GAAL,CAAS2E,IAAT,CAAcR,CAAC,CAACpD,CAAhB,EAAkBoD,CAAC,CAACnD,CAApB,EAAsBmD,CAAC,CAAC3B,CAAxB;AACA,aAAKxC,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWvC,CAA3B,EAA6BsC,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWtC,CAAxC,EAA0CqC,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWd,CAArD;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACd,CAAF,CAAIxB,CAApB,EAAsBsC,CAAC,CAACd,CAAF,CAAIvB,CAA1B,EAA4BqC,CAAC,CAACd,CAAF,CAAIC,CAAhC;AACA2B,QAAAA,CAAC,GAAG,KAAKlE,UAAL,CAAgByE,OAAhB,CAAwBrB,CAAC,CAACG,CAAF,CAAIoB,MAA5B,CAAJ;AACA,aAAK5E,GAAL,CAAS6E,GAAT,CAAaV,CAAC,CAACpD,CAAf,EAAiBoD,CAAC,CAACnD,CAAnB,EAAqBmD,CAAC,CAAC3B,CAAvB;AACA,aAAKxC,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWvC,CAA3B,EAA6BsC,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWtC,CAAxC,EAA0CqC,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWd,CAArD;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACG,CAAF,CAAIzC,CAApB,EAAsBsC,CAAC,CAACG,CAAF,CAAIxC,CAA1B,EAA4BqC,CAAC,CAACG,CAAF,CAAIhB,CAAhC;AACA;AACD,KAhBD,MAgBO;AACN,WAAIU,CAAC,GAAG,CAAR,EAAUA,CAAC,GAACC,GAAZ,EAAgBD,CAAC,EAAjB,EAAoB;AACnB,YAAIG,CAAC,GAAG7C,IAAI,CAAC4C,KAAL,CAAWF,CAAX,CAAR;AACA,aAAKlD,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACC,MAAF,CAASvC,CAAzB,EAA2BsC,CAAC,CAACC,MAAF,CAAStC,CAApC,EAAsCqC,CAAC,CAACC,MAAF,CAASd,CAA/C;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACf,CAAF,CAAIvB,CAApB,EAAsBsC,CAAC,CAACf,CAAF,CAAItB,CAA1B,EAA4BqC,CAAC,CAACf,CAAF,CAAIE,CAAhC;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACd,CAAF,CAAIxB,CAApB,EAAsBsC,CAAC,CAACd,CAAF,CAAIvB,CAA1B,EAA4BqC,CAAC,CAACd,CAAF,CAAIC,CAAhC;AACA,aAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACG,CAAF,CAAIzC,CAApB,EAAsBsC,CAAC,CAACG,CAAF,CAAIxC,CAA1B,EAA4BqC,CAAC,CAACG,CAAF,CAAIhB,CAAhC;AACA;AACD;;AACD,SAAKxC,GAAL,CAASyD,QAAT;;AACA,QAAGV,YAAY,GAAG,CAAlB,EAAoB;AACnB,UAAG0B,aAAH,EAAiB;AAChBtB,QAAAA,GAAG,GAAG3C,IAAI,CAACsD,QAAL,CAAcvC,MAApB;;AACA,aAAI2B,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACC,GAAV,EAAcD,CAAC,EAAf,EAAkB;AACjB,cAAIa,CAAC,GAAGvD,IAAI,CAACsD,QAAL,CAAcZ,CAAd,CAAR;AAAA,cACCc,CAAC,GAAGD,CAAC,CAACE,GAAF,CAAMF,CAAC,CAACT,MAAF,CAASY,KAAT,CAAenB,YAAf,CAAN,CADL;AAAA,cAECoB,CAAC,GAAGJ,CAAC,CAACT,MAAF,CAASY,KAAT,CAAe,GAAf,CAFL;AAGA,eAAKlE,GAAL,CAAS4D,MAAT,CAAgBO,CAAC,CAACpD,CAAF,GAAI,GAApB,EAAwBoD,CAAC,CAACnD,CAAF,GAAI,GAA5B,EAAgCmD,CAAC,CAAC3B,CAAF,GAAI,GAApC;AACA,eAAKxC,GAAL,CAASqC,IAAT,CAAc0B,CAAC,CAAChD,CAAhB,EAAkBgD,CAAC,CAAC/C,CAApB,EAAsB+C,CAAC,CAACvB,CAAxB,EAA0BwB,CAAC,CAACjD,CAA5B,EAA8BiD,CAAC,CAAChD,CAAhC,EAAkCgD,CAAC,CAACxB,CAApC;AACA;AACD,OATD,MASO;AACNW,QAAAA,GAAG,GAAG3C,IAAI,CAAC4C,KAAL,CAAW7B,MAAjB;;AACA,aAAI2B,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACC,GAAV,EAAcD,CAAC,EAAf,EAAkB;AACjB,cAAIG,CAAC,GAAG7C,IAAI,CAAC4C,KAAL,CAAWF,CAAX,CAAR;AAAA,cACCM,CAAC,GAAGH,CAAC,CAACyB,WAAF,EADL;AAAA,cAECR,CAAC,GAAGd,CAAC,CAACS,GAAF,CAAMZ,CAAC,CAACC,MAAF,CAASY,KAAT,CAAenB,YAAf,CAAN,CAFL;AAAA,cAGCoB,CAAC,GAAGd,CAAC,CAACC,MAAF,CAASY,KAAT,CAAe,GAAf,CAHL;AAIA,eAAKlE,GAAL,CAAS4D,MAAT,CAAgBO,CAAC,CAACpD,CAAF,GAAI,GAApB,EAAwBoD,CAAC,CAACnD,CAAF,GAAI,GAA5B,EAAgCmD,CAAC,CAAC3B,CAAF,GAAI,GAApC;AACA,eAAKxC,GAAL,CAASqC,IAAT,CAAcmB,CAAC,CAACzC,CAAhB,EAAkByC,CAAC,CAACxC,CAApB,EAAsBwC,CAAC,CAAChB,CAAxB,EAA0B8B,CAAC,CAACvD,CAA5B,EAA8BuD,CAAC,CAACtD,CAAhC,EAAkCsD,CAAC,CAAC9B,CAApC;AACA;AACD;AACD;AACD,GA3O2B;AA6O5BuC,EAAAA,MAAM,EAAE,YAAU;AACjB,QAAIC,CAAC,GAAGjF,SAAR;AAAA,QAAmBoD,GAAG,GAAGpD,SAAzB;;AACA,QAAGmB,SAAS,CAACK,MAAV,IAAoB,CAAvB,EAAyB;AACxB4B,MAAAA,GAAG,GAAGjC,SAAS,CAAC,CAAD,CAAf;AACA8D,MAAAA,CAAC,GAAG1F,KAAK,CAAC2F,IAAV;AACA,KAHD,MAGO;AACND,MAAAA,CAAC,GAAG9D,SAAS,CAAC,CAAD,CAAb;AACAiC,MAAAA,GAAG,GAAGjC,SAAS,CAAC,CAAD,CAAf;AACA;;AAED,SAAKlB,GAAL,CAAS4D,MAAT,CAAgB,GAAhB,EAAoB,CAApB,EAAsB,CAAtB;AACA,SAAK5D,GAAL,CAASqC,IAAT,CAAc2C,CAAC,CAACjE,CAAhB,EAAkBiE,CAAC,CAAChE,CAApB,EAAsBgE,CAAC,CAACxC,CAAxB,EAA0BwC,CAAC,CAACjE,CAAF,GAAIoC,GAA9B,EAAkC6B,CAAC,CAAChE,CAApC,EAAsCgE,CAAC,CAACxC,CAAxC;AACA,SAAKxC,GAAL,CAAS4D,MAAT,CAAgB,CAAhB,EAAkB,GAAlB,EAAsB,CAAtB;AACA,SAAK5D,GAAL,CAASqC,IAAT,CAAc2C,CAAC,CAACjE,CAAhB,EAAkBiE,CAAC,CAAChE,CAApB,EAAsBgE,CAAC,CAACxC,CAAxB,EAA0BwC,CAAC,CAACjE,CAA5B,EAA8BiE,CAAC,CAAChE,CAAF,GAAImC,GAAlC,EAAsC6B,CAAC,CAACxC,CAAxC;AACA,SAAKxC,GAAL,CAAS4D,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,EAAoB,GAApB;AACA,SAAK5D,GAAL,CAASqC,IAAT,CAAc2C,CAAC,CAACjE,CAAhB,EAAkBiE,CAAC,CAAChE,CAApB,EAAsBgE,CAAC,CAACxC,CAAxB,EAA0BwC,CAAC,CAACjE,CAA5B,EAA8BiE,CAAC,CAAChE,CAAhC,EAAkCgE,CAAC,CAACxC,CAAF,GAAIW,GAAtC;AACA,GA7P2B;AA+P5B+B,EAAAA,KAAK,EAAE,UAASA,KAAT,EAAeC,IAAf,EAAoB;AAC1B,SAAK3E,IAAL,CAAU0E,KAAK,CAACzE,MAAN,CAAa0E,IAAb,CAAV,EAA6B,KAA7B,EAAmC,CAAnC;AACA,GAjQ2B;AAmQ5BC,EAAAA,KAAK,EAAE,UAASxE,CAAT,EAAW;AACjB,QAAGA,CAAC,CAAC4B,CAAF,KAAQzC,SAAX,EAAqB;AACpB,WAAKC,GAAL,CAASoF,KAAT,CAAexE,CAAC,CAACG,CAAjB,EAAmBH,CAAC,CAACI,CAArB;AACA,KAFD,MAEO;AACN,WAAKhB,GAAL,CAASoF,KAAT,CAAexE,CAAC,CAACG,CAAjB,EAAmBH,CAAC,CAACI,CAArB,EAAuBJ,CAAC,CAAC4B,CAAzB;AACA;AACD,GAzQ2B;;AA2Q5B;AACD;AACA;AACA;AACC6C,EAAAA,QAAQ,EAAE,UAAS3C,MAAT,EAAgB;AACzB,SAAKC,iBAAL,CAAuBD,MAAvB,EAA8B,KAAK5C,GAAL,CAASwF,MAAvC,EAA8C,KAA9C;AACA,GAjR2B;;AAkR5B;AACD;AACA;AACA;AACCC,EAAAA,QAAQ,EAAE,UAAS7C,MAAT,EAAgB;AACzB,SAAKI,iBAAL,CAAuBJ,MAAvB,EAA8B,KAAK5C,GAAL,CAASwF,MAAvC,EAA8C,KAA9C;AACA,GAxR2B;AA0R5BE,EAAAA,SAAS,EAAE,UAASC,IAAT,EAAc;AACxB,SAAK9C,iBAAL,CAAuB8C,IAAI,CAAC3B,QAA5B,EAAqC,KAAKhE,GAAL,CAAS8C,OAA9C,EAAsD,KAAtD;AACA,GA5R2B;;AA6R5B;AACD;AACA;AACA;AACA;AACA;AACCD,EAAAA,iBAAiB,EAAE,UAAS+C,QAAT,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAmC;AACrD;AACA,QAAGF,QAAQ,CAACG,OAAT,KAAqB9F,SAArB,IAAkC2F,QAAQ,CAACI,IAAT,KAAkB/F,SAAvD,EAAiE;AAChE2F,MAAAA,QAAQ,GAAG,IAAI,KAAK5F,GAAL,CAASiG,cAAb,CAA6BL,QAA7B,CAAX;AACA;;AACD,SAAK1F,GAAL,CAASgD,UAAT,CAAoB2C,OAApB;;AACA,SAAI,IAAI5B,CAAC,GAAI,KAAK,CAAlB,EAAsB2B,QAAQ,CAACG,OAAT,OAAuB,CAAC9B,CAAC,GAAI2B,QAAQ,CAACI,IAAT,EAAN,KAA0B,IAAjD,CAAtB,GAA8E;AAC7E,WAAK9F,GAAL,CAASuD,MAAT,CAAgBQ,CAAC,CAAChD,CAAlB,EAAoBgD,CAAC,CAAC/C,CAAtB;AACA;AACD;AACF;AACA;AACA;AACA;AACA;;;AACE,QAAG4E,MAAH,EAAU;AACT,WAAK5F,GAAL,CAASyD,QAAT,CAAkB,KAAK3D,GAAL,CAASkG,KAA3B;AACA,KAFD,MAEO;AACN,WAAKhG,GAAL,CAASyD,QAAT;AACA;AACD,GAvT2B;;AAyT5B;AACD;AACA;AACA;AACA;AACA;AACCX,EAAAA,iBAAiB,EAAE,UAAS4C,QAAT,EAAkBC,OAAlB,EAA0BC,MAA1B,EAAiC;AACnD;AACA,QAAGF,QAAQ,CAACG,OAAT,KAAqB9F,SAArB,IAAkC2F,QAAQ,CAACI,IAAT,KAAkB/F,SAAvD,EAAiE;AAChE2F,MAAAA,QAAQ,GAAG,IAAI,KAAK5F,GAAL,CAASiG,cAAb,CAA6BL,QAA7B,CAAX;AACA;;AACD,SAAK1F,GAAL,CAASgD,UAAT,CAAoB2C,OAApB;;AACA,SAAI,IAAI5B,CAAC,GAAI,KAAK,CAAlB,EAAsB2B,QAAQ,CAACG,OAAT,OAAuB,CAAC9B,CAAC,GAAI2B,QAAQ,CAACI,IAAT,EAAN,KAA0B,IAAjD,CAAtB,GAA8E;AAC7E,WAAK9F,GAAL,CAASuD,MAAT,CAAgBQ,CAAC,CAAChD,CAAlB,EAAoBgD,CAAC,CAAC/C,CAAtB,EAAwB+C,CAAC,CAACvB,CAA1B;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;;AACE,QAAGoD,MAAH,EAAU;AACT,WAAK5F,GAAL,CAASyD,QAAT,CAAkB,KAAK3D,GAAL,CAASkG,KAA3B;AACA,KAFD,MAEO;AACN,WAAKhG,GAAL,CAASyD,QAAT;AACA;AACD,GApV2B;AAsV5BwC,EAAAA,GAAG,EAAE,UAASA,GAAT,EAAc1E,MAAd,EAAqB;AACzB,QAAIK,CAAC,GAAGqE,GAAG,CAACC,kBAAJ,CAAuB3E,MAAvB,CAAR;;AACA,QAAG0E,GAAG,CAACzD,CAAJ,KAAUzC,SAAb,EAAuB;AACtB,WAAKC,GAAL,CAASqC,IAAT,CAAc4D,GAAG,CAAClF,CAAlB,EAAoBkF,GAAG,CAACjF,CAAxB,EAA0BY,CAAC,CAACb,CAA5B,EAA8Ba,CAAC,CAACZ,CAAhC;AACA,KAFD,MAEO;AACN,WAAKhB,GAAL,CAASqC,IAAT,CAAc4D,GAAG,CAAClF,CAAlB,EAAoBkF,GAAG,CAACjF,CAAxB,EAA0BiF,GAAG,CAACzD,CAA9B,EAAgCZ,CAAC,CAACb,CAAlC,EAAoCa,CAAC,CAACZ,CAAtC,EAAwCY,CAAC,CAACY,CAA1C;AACA;AACD,GA7V2B;;AA+V5B;AACD;AACA;AACA;AACC2D,EAAAA,IAAI,EAAE,UAASrE,CAAT,EAAWsE,QAAX,EAAoB;AACzB,QAAGA,QAAQ,KAAKrG,SAAhB,EAA0B;AACzBqG,MAAAA,QAAQ,GAAG,KAAKtG,GAAL,CAASoC,MAApB;AACA;;AACD,QAAGkE,QAAQ,KAAK,KAAKtG,GAAL,CAASoC,MAAzB,EAAgC;AAC/B,WAAKlC,GAAL,CAASmG,IAAT,CAAcrE,CAAC,CAACf,CAAhB,EAAkBe,CAAC,CAACd,CAApB,EAAsBc,CAAC,CAACuE,KAAxB,EAA8BvE,CAAC,CAACwE,MAAhC;AACA,KAFD,MAEO,IAAGF,QAAQ,KAAK,KAAKtG,GAAL,CAASqC,OAAzB,EAAiC;AACvC,WAAKnC,GAAL,CAASmG,IAAT,CAAcrE,CAAC,CAACf,CAAhB,EAAkBe,CAAC,CAACd,CAApB,EAAsBc,CAAC,CAACf,CAAF,GAAIe,CAAC,CAACuE,KAA5B,EAAkCvE,CAAC,CAACd,CAAF,GAAIc,CAAC,CAACwE,MAAxC;AACA,KAFM,MAEA,IAAGF,QAAQ,KAAK,KAAKtG,GAAL,CAASkC,MAAzB,EAAgC;AACtC,WAAKhC,GAAL,CAASmG,IAAT,CAAcrE,CAAC,CAACf,CAAF,GAAIe,CAAC,CAACyE,IAAF,GAAO,GAAzB,EAA6BzE,CAAC,CAACd,CAAF,GAAIc,CAAC,CAACwE,MAAF,GAAS,GAA1C,EAA8CxE,CAAC,CAACuE,KAAhD,EAAsDvE,CAAC,CAACwE,MAAxD;AACA,KAFM,MAEA,IAAGF,QAAQ,KAAK,KAAKtG,GAAL,CAASmC,MAAzB,EAAgC;AACtC,UAAIuE,EAAE,GAAG1E,CAAC,CAACuE,KAAF,GAAU,GAAnB;AAAA,UACCI,EAAE,GAAG3E,CAAC,CAACwE,MAAF,GAAU,GADhB;AAEA,WAAKtG,GAAL,CAASmG,IAAT,CAAcrE,CAAC,CAACf,CAAF,GAAIyF,EAAlB,EAAqB1E,CAAC,CAACd,CAAF,GAAIyF,EAAzB,EAA4BD,EAA5B,EAA+BC,EAA/B;AACA;AACD,GAlX2B;AAoX5BC,EAAAA,WAAW,EAAE,UAAS1G,GAAT,EAAa;AACzB,SAAKA,GAAL,GAAWA,GAAX;AACA,GAtX2B;AAuX5B2G,EAAAA,MAAM,EAAE,UAASA,MAAT,EAAiBxF,GAAjB,EAAqBZ,MAArB,EAA4B;AACnC,SAAKC,IAAL,CAAUmG,MAAM,CAAClG,MAAP,CAAcU,GAAd,CAAV,EAA8BZ,MAA9B;AACA,GAzX2B;AA0X5BqG,EAAAA,YAAY,EAAE,UAASpG,IAAT,EAAcqG,GAAd,EAAkBtG,MAAlB,EAAyB;AACtC,SAAKP,GAAL,CAASgD,UAAT,CAAoB,KAAKlD,GAAL,CAASmD,SAA7B;AACA,SAAKjD,GAAL,CAAS8G,OAAT,CAAiBD,GAAjB;AACA,QAAI3D,CAAC,GAAE,CAAP;AAAA,QACCC,GAAG,GAAG3C,IAAI,CAAC4C,KAAL,CAAW7B,MADlB;;AAEA,QAAGhB,MAAH,EAAU;AACT,WAAI2C,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACC,GAAV,EAAcD,CAAC,EAAf,EAAkB;AACjB,YAAIG,CAAC,GAAG7C,IAAI,CAAC4C,KAAL,CAAWF,CAAX,CAAR;;AACA,YAAGG,CAAC,CAAC0D,GAAF,KAAUhH,SAAV,IAAuBsD,CAAC,CAAC2D,GAAF,KAAUjH,SAAjC,IAA8CsD,CAAC,CAAC4D,GAAF,KAAUlH,SAA3D,EAAqE;AACpE,eAAKC,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWvC,CAA3B,EAA8BsC,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWtC,CAAzC,EAA4CqC,CAAC,CAACf,CAAF,CAAIgB,MAAJ,CAAWd,CAAvD;AACY,eAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACf,CAAF,CAAIvB,CAApB,EAAuBsC,CAAC,CAACf,CAAF,CAAItB,CAA3B,EAA8BqC,CAAC,CAACf,CAAF,CAAIE,CAAlC,EAAqCa,CAAC,CAAC0D,GAAF,CAAMhG,CAA3C,EAA8CsC,CAAC,CAAC0D,GAAF,CAAM/F,CAApD;AACA,eAAKhB,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWvC,CAA3B,EAA8BsC,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWtC,CAAzC,EAA4CqC,CAAC,CAACd,CAAF,CAAIe,MAAJ,CAAWd,CAAvD;AACA,eAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACd,CAAF,CAAIxB,CAApB,EAAuBsC,CAAC,CAACd,CAAF,CAAIvB,CAA3B,EAA8BqC,CAAC,CAACd,CAAF,CAAIC,CAAlC,EAAqCa,CAAC,CAAC2D,GAAF,CAAMjG,CAA3C,EAA8CsC,CAAC,CAAC2D,GAAF,CAAMhG,CAApD;AACA,eAAKhB,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWvC,CAA3B,EAA8BsC,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWtC,CAAzC,EAA4CqC,CAAC,CAACG,CAAF,CAAIF,MAAJ,CAAWd,CAAvD;AACA,eAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACG,CAAF,CAAIzC,CAApB,EAAuBsC,CAAC,CAACG,CAAF,CAAIxC,CAA3B,EAA8BqC,CAAC,CAACG,CAAF,CAAIhB,CAAlC,EAAqCa,CAAC,CAAC4D,GAAF,CAAMlG,CAA3C,EAA8CsC,CAAC,CAAC4D,GAAF,CAAMjG,CAApD;AACH,SAPV,MAOgB;AACH,eAAKhB,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACf,CAAF,CAAIvB,CAApB,EAAuBsC,CAAC,CAACf,CAAF,CAAItB,CAA3B,EAA8BqC,CAAC,CAACf,CAAF,CAAIE,CAAlC;AACA,eAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACd,CAAF,CAAIxB,CAApB,EAAuBsC,CAAC,CAACd,CAAF,CAAIvB,CAA3B,EAA8BqC,CAAC,CAACd,CAAF,CAAIC,CAAlC;AACA,eAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACG,CAAF,CAAIzC,CAApB,EAAuBsC,CAAC,CAACG,CAAF,CAAIxC,CAA3B,EAA8BqC,CAAC,CAACG,CAAF,CAAIhB,CAAlC;AACZ;AACD;AACD,KAhBD,MAgBO;AACN,WAAIU,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACC,GAAV,EAAcD,CAAC,EAAf,EAAkB;AACjB,YAAIG,CAAC,GAAE7C,IAAI,CAAC4C,KAAL,CAAWF,CAAX,CAAP;AACA,aAAKlD,GAAL,CAASsD,MAAT,CAAgBD,CAAC,CAACC,MAAF,CAASvC,CAAzB,EAA2BsC,CAAC,CAACC,MAAF,CAAStC,CAApC,EAAsCqC,CAAC,CAACC,MAAF,CAASd,CAA/C;;AACA,YAAGa,CAAC,CAAC0D,GAAF,KAAUhH,SAAV,IAAuBsD,CAAC,CAAC2D,GAAF,KAAUjH,SAAjC,IAA8CsD,CAAC,CAAC4D,GAAF,KAAUlH,SAA3D,EAAqE;AACpE,eAAKC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACf,CAAF,CAAIvB,CAApB,EAAuBsC,CAAC,CAACf,CAAF,CAAItB,CAA3B,EAA8BqC,CAAC,CAACf,CAAF,CAAIE,CAAlC,EAAqCa,CAAC,CAAC0D,GAAF,CAAMhG,CAA3C,EAA8CsC,CAAC,CAAC0D,GAAF,CAAM/F,CAApD;AACY,eAAKhB,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACd,CAAF,CAAIxB,CAApB,EAAuBsC,CAAC,CAACd,CAAF,CAAIvB,CAA3B,EAA8BqC,CAAC,CAACd,CAAF,CAAIC,CAAlC,EAAqCa,CAAC,CAAC2D,GAAF,CAAMjG,CAA3C,EAA8CsC,CAAC,CAAC2D,GAAF,CAAMhG,CAApD;AACA,eAAKhB,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACG,CAAF,CAAIzC,CAApB,EAAuBsC,CAAC,CAACG,CAAF,CAAIxC,CAA3B,EAA8BqC,CAAC,CAACG,CAAF,CAAIhB,CAAlC,EAAqCa,CAAC,CAAC4D,GAAF,CAAMlG,CAA3C,EAA8CsC,CAAC,CAAC4D,GAAF,CAAMjG,CAApD;AACH,SAJV,MAIgB;AACH,eAAKhB,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACf,CAAF,CAAIvB,CAApB,EAAuBsC,CAAC,CAACf,CAAF,CAAItB,CAA3B,EAA8BqC,CAAC,CAACf,CAAF,CAAIE,CAAlC;AACA,eAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACd,CAAF,CAAIxB,CAApB,EAAuBsC,CAAC,CAACd,CAAF,CAAIvB,CAA3B,EAA8BqC,CAAC,CAACd,CAAF,CAAIC,CAAlC;AACA,eAAKxC,GAAL,CAASuD,MAAT,CAAgBF,CAAC,CAACG,CAAF,CAAIzC,CAApB,EAAuBsC,CAAC,CAACG,CAAF,CAAIxC,CAA3B,EAA8BqC,CAAC,CAACG,CAAF,CAAIhB,CAAlC;AACZ;AACD;AACD;;AACD,SAAKxC,GAAL,CAASyD,QAAT;AACA,GA/Z2B;AAia5B;AACAyD,EAAAA,QAAQ,EAAE,UAASC,GAAT,EAAaC,WAAb,EAAyB;AAElC,QAAIC,UAAU,GAAG,YAAU;AAC1B,UAAGF,GAAG,CAAC7E,CAAJ,KAAUvC,SAAV,IAAuBoH,GAAG,CAAC5E,CAAJ,KAAUxC,SAAjC,IAA8CoH,GAAG,CAAC3D,CAAJ,KAAUzD,SAA3D,EAAqE;AACpE,eAAQoH,GAAG,CAAC7E,CAAJ,CAAMvB,CAAN,KAAYhB,SAApB;AACA;;AACD,aAAO,KAAP;AACA,KALD;AAAA,QAMAuH,YAAY,GAAG,YAAU;AACxB,UAAGD,UAAU,EAAb,EAAgB;AACf,eAAQF,GAAG,CAAC7E,CAAJ,CAAME,CAAN,KAAYzC,SAApB;AACA;;AACD,aAAO,KAAP;AACA,KAXD;;AAaA,QAAGqH,WAAW,IAAIA,WAAW,KAAKrH,SAAlC,EAA4C;AAC3C,WAAKC,GAAL,CAASgD,UAAT,CAAoB,KAAKlD,GAAL,CAASmD,SAA7B;AACA;;AACD,QAAGqE,YAAY,EAAf,EAAkB;AACjB,UAAInD,CAAC,GAAGgD,GAAG,CAACI,aAAJ,EAAR;AACA,WAAKvH,GAAL,CAASsD,MAAT,CAAgBa,CAAC,CAACpD,CAAlB,EAAoBoD,CAAC,CAACnD,CAAtB,EAAwBmD,CAAC,CAAC3B,CAA1B;AACA,WAAKxC,GAAL,CAASuD,MAAT,CAAgB4D,GAAG,CAAC7E,CAAJ,CAAMvB,CAAtB,EAAyBoG,GAAG,CAAC7E,CAAJ,CAAMtB,CAA/B,EAAkCmG,GAAG,CAAC7E,CAAJ,CAAME,CAAxC;AACA,WAAKxC,GAAL,CAASuD,MAAT,CAAgB4D,GAAG,CAAC5E,CAAJ,CAAMxB,CAAtB,EAAyBoG,GAAG,CAAC5E,CAAJ,CAAMvB,CAA/B,EAAkCmG,GAAG,CAAC5E,CAAJ,CAAMC,CAAxC;AACA,WAAKxC,GAAL,CAASuD,MAAT,CAAgB4D,GAAG,CAAC3D,CAAJ,CAAMzC,CAAtB,EAAyBoG,GAAG,CAAC3D,CAAJ,CAAMxC,CAA/B,EAAkCmG,GAAG,CAAC3D,CAAJ,CAAMhB,CAAxC;AACA,KAND,MAMO;AAAE;AACR,WAAKxC,GAAL,CAASuD,MAAT,CAAgB4D,GAAG,CAAC7E,CAAJ,CAAMvB,CAAtB,EAAwBoG,GAAG,CAAC7E,CAAJ,CAAMtB,CAA9B;AACA,WAAKhB,GAAL,CAASuD,MAAT,CAAgB4D,GAAG,CAAC5E,CAAJ,CAAMxB,CAAtB,EAAwBoG,GAAG,CAAC5E,CAAJ,CAAMvB,CAA9B;AACA,WAAKhB,GAAL,CAASuD,MAAT,CAAgB4D,GAAG,CAAC3D,CAAJ,CAAMzC,CAAtB,EAAwBoG,GAAG,CAAC3D,CAAJ,CAAMxC,CAA9B;AACA;;AACE,QAAGoG,WAAW,IAAIA,WAAW,KAAKrH,SAAlC,EAA4C;AAC3C,WAAKC,GAAL,CAASyD,QAAT;AACA;AACJ,GAlc2B;AAoc5BF,EAAAA,MAAM,EAAE,UAASQ,CAAT,EAAW;AAClB,QAAGA,CAAC,CAACvB,CAAF,KAAQzC,SAAX,EAAqB;AACpB,WAAKC,GAAL,CAASuD,MAAT,CAAgBQ,CAAC,CAAChD,CAAlB,EAAoBgD,CAAC,CAAC/C,CAAtB;AACA,KAFD,MAEO;AACN,WAAKhB,GAAL,CAASuD,MAAT,CAAgBQ,CAAC,CAAChD,CAAlB,EAAoBgD,CAAC,CAAC/C,CAAtB,EAAwB+C,CAAC,CAACvB,CAA1B;AACA;AACD;AA1c2B,CAA7B;AA6cAgF,MAAM,CAACC,OAAP,GAAiBjI,gBAAjB","sourcesContent":["\n\nvar Matrix4x4 = require('../geom/Matrix4x4'),\n\tVec3D = require('../geom/Vec3D'),\n\tTriangleMesh = require('../geom/mesh/TriangleMesh');\n\nvar\tToxiclibsSupport = function(processing,optional_gfx){\n\tif(typeof Processing === 'undefined'){\n\t\tthrow new Error(\"Processing.js has not been loaded\");\n\t}\n\tthis.sketch = processing;\n\tthis.app = processing;\n\tif(optional_gfx !== undefined){\n\t\tthis.gfx = processing;\n\t} else {\n\t\tthis.gfx = this.app;\n\t}\n\tthis._normalMap = new Matrix4x4().translateSelf(128,128,128).scaleSelf(127);\n};\n\n\n\nToxiclibsSupport.prototype = {\n\tbox: function(aabb,smooth){\n\t\tvar mesh = aabb.toMesh();\n\t\tif(smooth === undefined){\n\t\t\tsmooth = false;\n\t\t}\n\t\tif(smooth){\n\t\t\tmesh.computeVertexNormals();\n\t\t}\n\t\tthis.mesh(mesh,smooth,0);\n\t},\n\t\n\tcircle: function(p,radius){\n\t\tthis.gfx.ellipse(p.x,p.y,radius,radius);\n\t},\n\t\n\tcone: function(){\n\t\tvar cone = arguments[0],\n\t\t\tres = 6,\n\t\t\tthetaOffset = 0,\n\t\t\ttopClosed = true,\n\t\t\tbottomClosed = true,\n\t\t\tsmooth = false;\n\t\tif(arguments.length == 5){\n\t\t\tres = arguments[1];\n\t\t\ttopClosed = arguments[2];\n\t\t\tbottomClosed = arguments[3];\n\t\t\tsmooth = arguments[4];\n\t\t} else if(arguments.length == 3){\n\t\t\tres = arguments[1];\n\t\t\tsmooth = arguments[2];\n\t\t}\n\t\t\n\t\tvar mesh = cone.toMesh({\n\t\t\tmesh: new TriangleMesh(),\n\t\t\tsteps: res,\n\t\t\tthetaOffset: thetaOffset,\n\t\t\ttopClosed: topClosed,\n\t\t\tbottomClosed: bottomClosed\n\t\t});\n\t\t\n\t\tif(smooth){\n\t\t\tmesh.computeVertexNormals();\n\t\t}\n\t\twindow.mesh = mesh;\n\t\tthis.mesh(mesh,smooth,0);\n\t},\n\t\n\tcylinder: function(cyl,res,smooth){\n\t\tif(arguments.length == 1){\n\t\t\tthis.mesh(cyl.toMesh(),false,0);\n\t\t} else {\n\t\t\tvar mesh = cyl.toMesh(res,0);\n\t\t\tif(smooth === undefined){\n\t\t\t\tsmooth = false;\n\t\t\t}\n\t\t\tif(smooth){\n\t\t\t\tmesh.computeVertexNormals();\n\t\t\t}\n\t\t\tthis.mesh(mesh,smooth,0);\n\t\t}\n\t},\n\t\n\t/*\n\tPjs currently doesn't provide access to PGraphics properties,\n\tsuch as ellipseMode. So I am allowing it as an optional propery\n\t*/\n\tellipse: function(e,ellipseMode){\n\t\tvar r = e.getRadii();\n\t\tif(ellipseMode === undefined){\n\t\t\tellipseMode = this.app.CENTER;\n\t\t}\n\t\tif(ellipseMode === this.app.CENTER){\n\t\t\tthis.gfx.ellipse(e.x,e.y,r.x*2,r.y*2);\n\t\t} else if(ellipseMode === this.app.RADIUS){\n\t\t\tthis.gfx.ellipse(e.x,e.y,r.x*2,r.y*2);\n\t\t} else if(ellipseMode === this.app.CORNER || this.gfx.ellipseMode === this.app.CORNERS){\n\t\t\tthis.gfx.ellipse(e.x-r.x,e.y-r.y,r.x*2,r.y*2);\n\t\t}\n\t},\n\t\n\tgetGraphics: function(){\n\t\treturn this.gfx;\n\t},\n\t\n\tline: function(){\n\t\tvar a,\n\t\t\tb;\n\t\tif(arguments.length == 1){\n\t\t\tvar line = arguments[0];\n\t\t\ta = line.a;\n\t\t\tb = line.b;\n\t\t} else {\n\t\t\ta = arguments[0],\n\t\t\tb = arguments[1];\n\t\t}\n\t\tif(a.z === undefined){\n\t\t\tthis.gfx.line(a.x,a.y,b.x,b.y);\n\t\t} else {\n\t\t\tthis.gfx.line(a.x,a.y,a.z,b.x,b.y,b.z);\n\t\t}\n\t},\n\t\n\tlineStrip2D: function(points){\n\t\t//var isFilled = this.fill; //TODO <-- verify how this works!\n\t\t//this.gfx.fill = false;\n\t\tthis.processVertices2D(points,this.app.POLYGON,false);\n\t\t//this.gfx.fill = isFilled;\n\t},\n\t\n\tlineStrip3D: function(points){\n\t\t//var isFilled = this.gfx.fill;\n\t\t//this.gfx.fill = false;\n\t\tthis.processVertices3D(points,this.app.POLYGON,false);\n\t\t//this.gfx.fill = isFilled;\n\t},\n\t\n\tmesh: function(mesh,smooth,normalLength){\n\t\tif(smooth === undefined){\n\t\t\tsmooth = false;\n\t\t}\n\t\tif(normalLength === undefined){\n\t\t\tnormalLength = 0;\n\t\t}\n\t\t\n\t\tthis.gfx.beginShape(this.app.TRIANGLES);\n\t\tvar i= 0,\n\t\t\tlen = mesh.faces.length;\n\t\tif(smooth){\n\t\t\tfor(i=0;i<len;i++){\n\t\t\t\tvar f = mesh.faces[i];\n\t\t\t\tthis.gfx.normal(f.a.normal.x,f.a.normal.y,f.a.normal.z);\n\t\t\t\tthis.gfx.vertex(f.a.x,f.a.y,f.a.z);\n\t\t\t\tthis.gfx.normal(f.b.normal.x,f.b.normal.y,f.b.normal.z);\n\t\t\t\tthis.gfx.vertex(f.b.x,f.b.y,f.b.z);\n\t\t\t\tthis.gfx.normal(f.c.normal.x,f.c.normal.y,f.c.normal.z);\n\t\t\t\tthis.gfx.vertex(f.c.x,f.c.y,f.c.z);\n\t\t\t}\n\t\t} else {\n\t\t\tfor(var i=0;i<len;i++){\n\t\t\t\tvar f = mesh.faces[i];\n\t\t\t\tthis.gfx.normal(f.normal.x,f.normal.y,f.normal.z);\n\t\t\t\tthis.gfx.vertex(f.a.x,f.a.y,f.a.z);\n\t\t\t\tthis.gfx.vertex(f.b.x,f.b.y,f.b.z);\n\t\t\t\tthis.gfx.vertex(f.c.x,f.c.y,f.c.z);\n\t\t\t}\n\t\t}\n\t\tthis.gfx.endShape();\n\t\tif(normalLength > 0){\n\t\t\tvar strokeCol = 0;\n\t\t\tvar isStroked = this.gfx.stroke;  //TODO <-- verify this works!\n\t\t\tif(isStroked){\n\t\t\t\tstrokeCol = this.gfx.strokeColor;\n\t\t\t}\n\t\t\tlen = mesh.vertices.length;\n\t\t\tif(smooth){\n\t\t\t\tfor(i=0;i<len;i++){\n\t\t\t\t\tvar v = mesh.vertices[i],\n\t\t\t\t\t\tw = v.add(v.normal.scale(normalLength));\n\t\t\t\t\t\tn = v.normal.scale(127);\n\t\t\t\t\tthis.gfx.stroke(n.x + 128, n.y + 128, n.z + 128);\n\t\t\t\t\tthis.gfx.line(v.x,v.y,v.z,w.x,w.y,w.z);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar third = 1 / 3;\n\t\t\t\tlen = mesh.faces.length;\n\t\t\t\tfor(i=0;i<len;i++){\n\t\t\t\t\tvar f = mesh.faces[i],\n\t\t\t\t\t\tc = f.a.add(f.b).addSelf(f.c).scaleSelf(third),\n\t\t\t\t\t\td = c.add(f.normal.scale(normalLength)),\n\t\t\t\t\t\tn = f.normal.scale(127);\n\t\t\t\t\tthis.gfx.stroke(n.x+128,n.y+128,n.z+128);\n\t\t\t\t\tthis.gfx.line(c.x,c.y,c.z,d.x,d.y,d.z);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(isStroked){\n\t\t\t\tthis.gfx.stroke(strokeCol);\n\t\t\t} else {\n\t\t\t\tthis.gfx.noStroke();\n\t\t\t}\n\t\t}\n\t},\n\t\n\tmeshNormalMapped: function(mesh,vertexNormals,normalLength){\n\t\tthis.gfx.beginShape(this.app.TRIANGLES);\n\t\tvar i =0,\n\t\t\tlen = mesh.faces.length;\n\t\tif(vertexNormals){\n\t\t\tfor(i=0;i<len;i++){\n\t\t\t\tvar f = mesh.faces[i],\n\t\t\t\t\tn = this._normalMap.applyTo(f.a.normal);\n\t\t\t\tthis.gfx.fill(n.x,n.y,n.z);\n\t\t\t\tthis.gfx.normal(f.a.normal.x,f.a.normal.y,f.a.normal.z);\n\t\t\t\tthis.gfx.vertex(f.a.x,f.a.y,f.a.z);\n\t\t\t\tn = this._normalMap.applyTo(f.b.normal);\n\t\t\t\tthis.gfx.fill(n.x,n.y,n.z);\n\t\t\t\tthis.gfx.normal(f.b.normal.x,f.b.normal.y,f.b.normal.z);\n\t\t\t\tthis.gfx.vertex(f.b.x,f.b.y,f.b.z);\n\t\t\t\tn = this._normalMap.applyTo(f.c.nromal);\n\t\t\t\tthis.gfx.fil(n.x,n.y,n.z);\n\t\t\t\tthis.gfx.normal(f.c.normal.x,f.c.normal.y,f.c.normal.z);\n\t\t\t\tthis.gfx.vertex(f.c.x,f.c.y,f.c.z);\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i = 0;i<len;i++){\n\t\t\t\tvar f = mesh.faces[i];\n\t\t\t\tthis.gfx.normal(f.normal.x,f.normal.y,f.normal.z);\n\t\t\t\tthis.gfx.vertex(f.a.x,f.a.y,f.a.z);\n\t\t\t\tthis.gfx.vertex(f.b.x,f.b.y,f.b.z);\n\t\t\t\tthis.gfx.vertex(f.c.x,f.c.y,f.c.z);\n\t\t\t}\n\t\t}\n\t\tthis.gfx.endShape();\n\t\tif(normalLength > 0){\n\t\t\tif(vertexNormals){\n\t\t\t\tlen = mesh.vertices.length;\n\t\t\t\tfor(i=0;i<len;i++){\n\t\t\t\t\tvar v = mesh.vertices[i],\n\t\t\t\t\t\tw = v.add(v.normal.scale(normalLength)),\n\t\t\t\t\t\tn = v.normal.scale(127);\n\t\t\t\t\tthis.gfx.stroke(n.x+128,n.y+128,n.z+128);\n\t\t\t\t\tthis.gfx.line(v.x,v.y,v.z,w.x,w.y,w.z);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlen = mesh.faces.length;\n\t\t\t\tfor(i=0;i<len;i++){\n\t\t\t\t\tvar f = mesh.faces[i],\n\t\t\t\t\t\tc = f.getCentroid(),\n\t\t\t\t\t\td = c.add(f.normal.scale(normalLength)),\n\t\t\t\t\t\tn = f.normal.scale(127);\n\t\t\t\t\tthis.gfx.stroke(n.x+128,n.y+128,n.z+128);\n\t\t\t\t\tthis.gfx.line(c.x,c.y,c.z,d.x,d.y,d.z);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\torigin: function(){\n\t\tvar o = undefined, len = undefined;\n\t\tif(arguments.length == 1){\n\t\t\tlen = arguments[0];\n\t\t\to = Vec3D.ZERO;\n\t\t} else {\n\t\t\to = arguments[0];\n\t\t\tlen = arguments[1];\n\t\t}\n\t\t\n\t\tthis.gfx.stroke(255,0,0);\n\t\tthis.gfx.line(o.x,o.y,o.z,o.x+len,o.y,o.z);\n\t\tthis.gfx.stroke(0,255,0);\n\t\tthis.gfx.line(o.x,o.y,o.z,o.x,o.y+len,o.z);\n\t\tthis.gfx.stroke(0,0,255);\n\t\tthis.gfx.line(o.x,o.y,o.z,o.x,o.y,o.z+len);\n\t},\n\t\n\tplane: function(plane,size){\n\t\tthis.mesh(plane.toMesh(size),false,0);\n\t},\n\t\n\tpoint: function(p){\n\t\tif(p.z === undefined){\n\t\t\tthis.gfx.point(p.x,p.y);\n\t\t} else {\n\t\t\tthis.gfx.point(p.x,p.y,p.z);\n\t\t}\n\t},\n\t\n\t/**\n\t * iterates and draws the provided 2D points\n\t * @param {Array} or {Processing#Iterator} points to iterate\n\t */\n\tpoints2D: function(points){\n\t\tthis.processVertices2D(points,this.app.POINTS,false);\n\t},\n\t/**\n\t * iterates and draws the provided 3D points\n\t * @param {Array} or {Processing#Iterator} points to iterate\n\t */\n\tpoints3D: function(points){\n\t\tthis.processVertices3D(points,this.app.POINTS,false);\n\t},\n\t\n\tpolygon2D: function(poly){\n\t\tthis.processVertices2D(poly.vertices,this.app.POLYGON,false);\n\t},\n\t/**\n\t * Processes the 2D vertices from a Processing.js Iterator object\n\t * @params {Iterator} iterator\n\t * @params {Number} shapeID\n\t * @params {Boolean} closed\n\t */\n\tprocessVertices2D: function(iterator, shapeID, closed){\n\t\t//if first param wasnt passed in as a pjs Iterator, make it one\n\t\tif(iterator.hasNext === undefined || iterator.next === undefined){\n\t\t\titerator = new this.app.ObjectIterator( iterator );\n\t\t}\n\t\tthis.gfx.beginShape(shapeID);\n\t\tfor(var v  = void(0); iterator.hasNext() && ((v  = iterator.next()) || true);){\n\t\t\tthis.gfx.vertex(v.x,v.y);\n\t\t}\n\t\t/*var i=0,\n\t\t\tlen = points.length;\n\t\tfor(i=0;i<len;i++){\n\t\t\tvar v = points[i];\n\t\t\tthis.gfx.vertex(v.x,v.y);\n\t\t}*/\n\t\tif(closed){\n\t\t\tthis.gfx.endShape(this.app.CLOSE);\n\t\t} else {\n\t\t\tthis.gfx.endShape();\n\t\t}\n\t},\n\t\n\t/**\n\t * Processes the 3D vertices from a Processing.js Iterator object\n\t * @params {Iterator} iterator\n\t * @params {Number} shapeID\n\t * @params {Boolean} closed\n\t */\n\tprocessVertices3D: function(iterator,shapeID,closed){\n\t\t//if first param wasnt passed in as a pjs Iterator, make it one\n\t\tif(iterator.hasNext === undefined || iterator.next === undefined){\n\t\t\titerator = new this.app.ObjectIterator( iterator );\n\t\t}\n\t\tthis.gfx.beginShape(shapeID);\n\t\tfor(var v  = void(0); iterator.hasNext() && ((v  = iterator.next()) || true);){\n\t\t\tthis.gfx.vertex(v.x,v.y,v.z);\n\t\t}\n\n\t\t/*var i=0,\n\t\t\tlen = points.length;\n\t\tfor(i=0;i<len;i++){\n\t\t\tvar v = points[i];\n\t\t\tthis.gfx.vertex(v.x,v.y,v.z);\n\t\t}*/\n\t\tif(closed){\n\t\t\tthis.gfx.endShape(this.app.CLOSE);\n\t\t} else {\n\t\t\tthis.gfx.endShape();\n\t\t}\n\t},\n\t\n\tray: function(ray, length){\n\t\tvar e = ray.getPointAtDistance(length);\n\t\tif(ray.z === undefined){\n\t\t\tthis.gfx.line(ray.x,ray.y,e.x,e.y);\n\t\t} else {\n\t\t\tthis.gfx.line(ray.x,ray.y,ray.z,e.x,e.y,e.z);\n\t\t}\n\t},\n\t\n\t/*\n\tPjs currently doesn't provide access to PGraphics properties,\n\tsuch as rectMode. So I am allowing it as an optional propery\n\t*/\n\trect: function(r,rectMode){\n\t\tif(rectMode === undefined){\n\t\t\trectMode = this.app.CORNER;\n\t\t}\n\t\tif(rectMode === this.app.CORNER){\n\t\t\tthis.gfx.rect(r.x,r.y,r.width,r.height);\n\t\t} else if(rectMode === this.app.CORNERS){\n\t\t\tthis.gfx.rect(r.x,r.y,r.x+r.width,r.y+r.height);\n\t\t} else if(rectMode === this.app.CENTER){\n\t\t\tthis.gfx.rect(r.x+r.widt*0.5,r.y+r.height*0.5,r.width,r.height);\n\t\t} else if(rectMode === this.app.RADIUS){\n\t\t\tvar rw = r.width * 0.5,\n\t\t\t\trh = r.height *0.5;\n\t\t\tthis.gfx.rect(r.x+rw,r.y+rh,rw,rh);\n\t\t}\n\t},\n\t\n\tsetGraphics: function(gfx){\n\t\tthis.gfx = gfx;\n\t},\n\tsphere: function(sphere, res,smooth){\n\t\tthis.mesh(sphere.toMesh(res), smooth);\n\t},\n\ttexturedMesh: function(mesh,tex,smooth){\n\t\tthis.gfx.beginShape(this.app.TRIANGLES);\n\t\tthis.gfx.texture(tex);\n\t\tvar i =0,\n\t\t\tlen = mesh.faces.length;\n\t\tif(smooth){\n\t\t\tfor(i=0;i<len;i++){\n\t\t\t\tvar f = mesh.faces[i];\n\t\t\t\tif(f.uvA !== undefined && f.uvB !== undefined && f.uvC !== undefined){\n\t\t\t\t\tthis.gfx.normal(f.a.normal.x, f.a.normal.y, f.a.normal.z);\n                \tthis.gfx.vertex(f.a.x, f.a.y, f.a.z, f.uvA.x, f.uvA.y);\n                \tthis.gfx.normal(f.b.normal.x, f.b.normal.y, f.b.normal.z);\n                \tthis.gfx.vertex(f.b.x, f.b.y, f.b.z, f.uvB.x, f.uvB.y);\n                \tthis.gfx.normal(f.c.normal.x, f.c.normal.y, f.c.normal.z);\n                \tthis.gfx.vertex(f.c.x, f.c.y, f.c.z, f.uvC.x, f.uvC.y);\n            \t} else {\n                \tthis.gfx.vertex(f.a.x, f.a.y, f.a.z);\n                \tthis.gfx.vertex(f.b.x, f.b.y, f.b.z);\n                \tthis.gfx.vertex(f.c.x, f.c.y, f.c.z);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor(i=0;i<len;i++){\n\t\t\t\tvar f= mesh.faces[i];\n\t\t\t\tthis.gfx.normal(f.normal.x,f.normal.y,f.normal.z);\n\t\t\t\tif(f.uvA !== undefined && f.uvB !== undefined && f.uvC !== undefined){\n\t\t\t\t\tthis.gfx.vertex(f.a.x, f.a.y, f.a.z, f.uvA.x, f.uvA.y);\n                \tthis.gfx.vertex(f.b.x, f.b.y, f.b.z, f.uvB.x, f.uvB.y);\n                \tthis.gfx.vertex(f.c.x, f.c.y, f.c.z, f.uvC.x, f.uvC.y);\n            \t} else {\n                \tthis.gfx.vertex(f.a.x, f.a.y, f.a.z);\n                \tthis.gfx.vertex(f.b.x, f.b.y, f.b.z);\n                \tthis.gfx.vertex(f.c.x, f.c.y, f.c.z);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.gfx.endShape();\n\t},\n\t\n\t//works for Triangle3D or Triangle2D\n\ttriangle: function(tri,isFullShape){\n\n\t\tvar isTriangle = function(){\n\t\t\tif(tri.a !== undefined && tri.b !== undefined && tri.c !== undefined){\n\t\t\t\treturn (tri.a.x !== undefined);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tisTriangle3D = function(){\n\t\t\tif(isTriangle()){\n\t\t\t\treturn (tri.a.z !== undefined);\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tif(isFullShape || isFullShape === undefined){\n\t\t\tthis.gfx.beginShape(this.app.TRIANGLES);\n\t\t}\n\t\tif(isTriangle3D()){\n\t\t\tvar n = tri.computeNormal();\n\t\t\tthis.gfx.normal(n.x,n.y,n.z);\n\t\t\tthis.gfx.vertex(tri.a.x, tri.a.y, tri.a.z);\n\t\t\tthis.gfx.vertex(tri.b.x, tri.b.y, tri.b.z);\n\t\t\tthis.gfx.vertex(tri.c.x, tri.c.y, tri.c.z);\n\t\t} else { //should be Triangle2D\n\t\t\tthis.gfx.vertex(tri.a.x,tri.a.y);\n\t\t\tthis.gfx.vertex(tri.b.x,tri.b.y);\n\t\t\tthis.gfx.vertex(tri.c.x,tri.c.y);\n\t\t}\n    \tif(isFullShape || isFullShape === undefined){\n    \t\tthis.gfx.endShape();\n    \t}\n\t},\n\t\n\tvertex: function(v){\n\t\tif(v.z === undefined){\n\t\t\tthis.gfx.vertex(v.x,v.y);\n\t\t} else {\n\t\t\tthis.gfx.vertex(v.x,v.y,v.z);\n\t\t}\n\t}\n};\n\nmodule.exports = ToxiclibsSupport;\n\n"]},"metadata":{},"sourceType":"script"}