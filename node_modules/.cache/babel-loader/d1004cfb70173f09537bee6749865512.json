{"ast":null,"code":"var internals = require('../../internals'); //faster than str += \" \"\n\n\nvar StringBuffer = function () {\n  this.buffer = [];\n};\n\nStringBuffer.prototype.append = function (string) {\n  this.buffer.push(string);\n  return this;\n};\n\nStringBuffer.prototype.toString = function () {\n  return this.buffer.join(\"\");\n};\n\nvar OBJWriter = function () {\n  this.VERSION = \"0.3\";\n  this.__stringBuffer = new StringBuffer();\n  this.objStream = undefined;\n  this.__filename = \"objwriter.obj\";\n  this._numVerticesWritten = 0;\n  this._numNormalsWritten = 0;\n};\n\nOBJWriter.prototype = {\n  /**\n   * begin saving\n   * @param {WritableStream | String} [stream] stream can be a node.js WritableStream, or it can be a filename or undefined\n   */\n  beginSave: function (stream) {\n    if (typeof stream == 'string') {//if node.js create a writeable stream with this filename\n    } else if (internals.hasProperties(stream, ['write', 'end', 'writable'] && stream.writable)) {\n      this.objStream = stream;\n    } else {}\n\n    this._handleBeginSave();\n  },\n  endSave: function () {\n    if (this.objStream !== undefined) {\n      try {\n        this.objStream.destroy();\n      } catch (e) {}\n    }\n  },\n  face: function (a, b, c) {\n    this.__stringBuffer.append(\"f \" + a + \" \" + b + \" \" + c + \"\\n\");\n  },\n  faceList: function () {\n    this.__stringBuffer.append(\"s off \\n\");\n  },\n  faceWithNormals: function (a, b, c, na, nb, nc) {\n    this.__stringBuffer.append(\"f \" + a + \"//\" + na + \" \" + b + \"//\" + nb + \" \" + c + \"//\" + nc + \"\\n\");\n  },\n  getCurrNormalOffset: function () {\n    return this._numNormalsWritten;\n  },\n  getCurrVertexOffset: function () {\n    return this._numVerticesWritten;\n  },\n  //not in java version\n  getOutput: function () {\n    return this.__stringBuffer.toString();\n  },\n  _handleBeginSave: function () {\n    this.numVerticesWritten = 0;\n    this.numNormalsWrittern = 0;\n\n    this.__stringBuffer.append(\"# generated by OBJExport (js) v\" + this.VERSION + '\\n');\n  },\n  newObject: function (name) {\n    this.__stringBuffer.append(\"o \" + name + \"\\n\");\n  },\n  normal: function (vecN) {\n    this.__stringBuffer.append(\"vn \" + vecN.x + \" \" + vecN.y + \" \" + vecN.z + \"\\n\");\n\n    this._numNormalsWritten++;\n  },\n  vertex: function (vecV) {\n    this.__stringBuffer.append(\"v \" + vecV.x + \" \" + vecV.y + \" \" + vecV.z + \"\\n\");\n\n    this._numVerticesWritten++;\n  }\n};\nmodule.exports = OBJWriter;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/geom/mesh/OBJWriter.js"],"names":["internals","require","StringBuffer","buffer","prototype","append","string","push","toString","join","OBJWriter","VERSION","__stringBuffer","objStream","undefined","__filename","_numVerticesWritten","_numNormalsWritten","beginSave","stream","hasProperties","writable","_handleBeginSave","endSave","destroy","e","face","a","b","c","faceList","faceWithNormals","na","nb","nc","getCurrNormalOffset","getCurrVertexOffset","getOutput","numVerticesWritten","numNormalsWrittern","newObject","name","normal","vecN","x","y","z","vertex","vecV","module","exports"],"mappings":"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","sourcesContent":["var internals = require('../../internals');\n\n\t//faster than str += \" \"\n\tvar StringBuffer = function(){\n\t\tthis.buffer = [];\n\t};\n\tStringBuffer.prototype.append = function(string){\n\t\tthis.buffer.push(string);\n\t\treturn this;\n\t};\n\tStringBuffer.prototype.toString = function(){\n\t\treturn this.buffer.join(\"\");\n\t};\n\t\n\tvar OBJWriter = function(){\n\t\tthis.VERSION = \"0.3\";\n\t\tthis.__stringBuffer = new StringBuffer();\n\t\tthis.objStream = undefined;\n\t\tthis.__filename = \"objwriter.obj\";\n\t\tthis._numVerticesWritten = 0;\n\t\tthis._numNormalsWritten = 0;\n\t};\n\n\n\tOBJWriter.prototype = {\n\t\t/**\n\t\t * begin saving\n\t\t * @param {WritableStream | String} [stream] stream can be a node.js WritableStream, or it can be a filename or undefined\n\t\t */\n\t\tbeginSave: function( stream ){\n\t\t\tif( typeof stream == 'string' ){\n\t\t\t\t//if node.js create a writeable stream with this filename\n\t\t\t} else if( internals.hasProperties(stream,['write','end','writable'] && stream.writable)){\n\t\t\t\tthis.objStream = stream;\n\t\t\t} else {\n\t\t\t}\n\t\t\tthis._handleBeginSave();\n\t\t},\n\n\t\tendSave: function(){\n\t\t\tif(this.objStream !== undefined ){\n\t\t\t\ttry {\n\t\t\t\t\tthis.objStream.destroy();\n\t\t\t\t} catch( e ){\n\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tface: function( a, b, c ){\n\t\t\tthis.__stringBuffer.append(\"f \" + a + \" \" + b + \" \" + c + \"\\n\");\n\t\t},\n\n\t\tfaceList: function(){\n\t\t\tthis.__stringBuffer.append(\"s off \\n\");\n\t\t},\n\n\t\tfaceWithNormals: function( a, b, c, na, nb, nc ){\n\t\t\tthis.__stringBuffer.append(\"f \" + a + \"//\" + na + \" \" + b + \"//\" + nb + \" \" + c + \"//\" + nc + \"\\n\");\n\t\t},\n\n\t\tgetCurrNormalOffset: function(){\n\t\t\treturn this._numNormalsWritten;\n\t\t},\n\n\t\tgetCurrVertexOffset: function(){\n\t\t\treturn this._numVerticesWritten;\n\t\t},\n\n\t\t//not in java version\n\t\tgetOutput: function(){\n\t\t\treturn this.__stringBuffer.toString();\n\t\t},\n\n\t\t_handleBeginSave: function(){\n\t\t\tthis.numVerticesWritten = 0;\n\t\t\tthis.numNormalsWrittern = 0;\n\t\t\tthis.__stringBuffer.append(\"# generated by OBJExport (js) v\" + this.VERSION+'\\n');\n\t\t},\n\n\t\tnewObject: function( name ){\n\t\t\tthis.__stringBuffer.append(\"o \" + name + \"\\n\");\n\t\t},\n\n\t\tnormal: function( vecN ){\n\t\t\tthis.__stringBuffer.append(\"vn \" + vecN.x + \" \" + vecN.y + \" \" + vecN.z + \"\\n\");\n\t\t\tthis._numNormalsWritten++;\n\t\t},\n\n\t\tvertex: function( vecV ){\n\t\t\tthis.__stringBuffer.append(\"v \" + vecV.x + \" \" + vecV.y + \" \" + vecV.z +\"\\n\");\n\t\t\tthis._numVerticesWritten++;\n\t\t}\n\t};\n\n\n\tmodule.exports = OBJWriter;\n\n"]},"metadata":{},"sourceType":"script"}