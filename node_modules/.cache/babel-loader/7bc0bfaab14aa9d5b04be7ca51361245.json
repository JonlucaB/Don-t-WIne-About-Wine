{"ast":null,"code":"var internals = require('../internals'),\n    VerletSpring2D = require('./VerletSpring2D');\n\nvar VerletConstrainedSpring2D = function (particleA, particleB, len, str, limit) {\n  VerletSpring2D.call(this, particleA, particleB, len, str);\n  this.limit = limit === undefined ? Number.MAX_VALUE : limit;\n};\n\ninternals.extend(VerletConstrainedSpring2D, VerletSpring2D);\n\nVerletConstrainedSpring2D.update = function (applyConstraints) {\n  var delta = this.b.sub(this.a); // add minute offset to avoid div-by-zero errors\n\n  var dist = delta.magnitude() + VerletSpring2D.EPS;\n  var normDistStrength = (dist - this.restLength) / (dist * (this.a.invWeight + this.b.invWeight)) * this.strength;\n\n  if (!this.a.isLocked && !this.isALocked) {\n    this.a.addSelf(delta.scale(normDistStrength * this.a.invWeight).limit(this.limit));\n\n    if (applyConstraints) {\n      this.a.applyConstraints();\n    }\n  }\n\n  if (!this.b.isLocked && !this.isBLocked) {\n    this.b.subSelf(delta.scale(normDistStrength * this.b.invWeight).limit(this.limit));\n\n    if (applyConstraints) {\n      this.b.applyConstraints();\n    }\n  }\n};\n\nmodule.exports = VerletConstrainedSpring2D;","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/physics2d/VerletConstrainedSpring2D.js"],"names":["internals","require","VerletSpring2D","VerletConstrainedSpring2D","particleA","particleB","len","str","limit","call","undefined","Number","MAX_VALUE","extend","update","applyConstraints","delta","b","sub","a","dist","magnitude","EPS","normDistStrength","restLength","invWeight","strength","isLocked","isALocked","addSelf","scale","isBLocked","subSelf","module","exports"],"mappings":"AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAAA,IACIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAD5B;;AAGA,IAAIE,yBAAyB,GAAG,UAASC,SAAT,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,KAAzC,EAA+C;AAC9EN,EAAAA,cAAc,CAACO,IAAf,CAAoB,IAApB,EAAyBL,SAAzB,EAAmCC,SAAnC,EAA6CC,GAA7C,EAAiDC,GAAjD;AACA,OAAKC,KAAL,GAAcA,KAAK,KAAKE,SAAX,GAAwBC,MAAM,CAACC,SAA/B,GAA2CJ,KAAxD;AACA,CAHD;;AAKAR,SAAS,CAACa,MAAV,CAAiBV,yBAAjB,EAA2CD,cAA3C;;AAEAC,yBAAyB,CAACW,MAA1B,GAAmC,UAASC,gBAAT,EAA0B;AAC5D,MAAIC,KAAK,GAAG,KAAKC,CAAL,CAAOC,GAAP,CAAW,KAAKC,CAAhB,CAAZ,CAD4D,CAEzD;;AACA,MAAIC,IAAI,GAAGJ,KAAK,CAACK,SAAN,KAAoBnB,cAAc,CAACoB,GAA9C;AACA,MAAIC,gBAAgB,GAAG,CAACH,IAAI,GAAG,KAAKI,UAAb,KAA4BJ,IAAI,IAAI,KAAKD,CAAL,CAAOM,SAAP,GAAmB,KAAKR,CAAL,CAAOQ,SAA9B,CAAhC,IAA2E,KAAKC,QAAvG;;AACA,MAAI,CAAC,KAAKP,CAAL,CAAOQ,QAAR,IAAoB,CAAC,KAAKC,SAA9B,EAAyC;AACrC,SAAKT,CAAL,CAAOU,OAAP,CAAeb,KAAK,CAACc,KAAN,CAAYP,gBAAgB,GAAG,KAAKJ,CAAL,CAAOM,SAAtC,EAAiDjB,KAAjD,CAAuD,KAAKA,KAA5D,CAAf;;AACA,QAAIO,gBAAJ,EAAsB;AAClB,WAAKI,CAAL,CAAOJ,gBAAP;AACH;AACJ;;AACD,MAAI,CAAC,KAAKE,CAAL,CAAOU,QAAR,IAAoB,CAAC,KAAKI,SAA9B,EAAyC;AACrC,SAAKd,CAAL,CAAOe,OAAP,CAAehB,KAAK,CAACc,KAAN,CAAYP,gBAAgB,GAAG,KAAKN,CAAL,CAAOQ,SAAtC,EAAiDjB,KAAjD,CAAuD,KAAKA,KAA5D,CAAf;;AACA,QAAIO,gBAAJ,EAAsB;AAClB,WAAKE,CAAL,CAAOF,gBAAP;AACH;AACJ;AACJ,CAjBD;;AAmBAkB,MAAM,CAACC,OAAP,GAAiB/B,yBAAjB","sourcesContent":["\n\nvar internals = require('../internals'),\n    VerletSpring2D = require('./VerletSpring2D');\n\nvar VerletConstrainedSpring2D = function(particleA, particleB, len, str, limit){\n\tVerletSpring2D.call(this,particleA,particleB,len,str);\n\tthis.limit = (limit === undefined) ? Number.MAX_VALUE : limit;\n};\n\ninternals.extend(VerletConstrainedSpring2D,VerletSpring2D);\n\nVerletConstrainedSpring2D.update = function(applyConstraints){\n\tvar delta = this.b.sub(this.a);\n    // add minute offset to avoid div-by-zero errors\n    var dist = delta.magnitude() + VerletSpring2D.EPS;\n    var normDistStrength = (dist - this.restLength) / (dist * (this.a.invWeight + this.b.invWeight))* this.strength;\n    if (!this.a.isLocked && !this.isALocked) {\n        this.a.addSelf(delta.scale(normDistStrength * this.a.invWeight).limit(this.limit));\n        if (applyConstraints) {\n            this.a.applyConstraints();\n        }\n    }\n    if (!this.b.isLocked && !this.isBLocked) {\n        this.b.subSelf(delta.scale(normDistStrength * this.b.invWeight).limit(this.limit));\n        if (applyConstraints) {\n            this.b.applyConstraints();\n        }\n    }\n};\n\nmodule.exports = VerletConstrainedSpring2D;\n\n"]},"metadata":{},"sourceType":"script"}