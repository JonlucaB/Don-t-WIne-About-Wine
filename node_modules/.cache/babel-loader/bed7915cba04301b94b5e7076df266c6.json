{"ast":null,"code":"var Vec2D = require('./Vec2D');\n\nvar is = require('../internals/is');\n\nvar BernsteinPolynomial = require('./BernsteinPolynomial');\n/**\n * @class\n * @member toxi\n * @param {Vec2D[]} points array of Vec2D's\n * @param {BernsteinPolynomial} [bernsteinPoly]\n */\n\n\nvar Spline2D = function (points, bernsteinPoly, tightness) {\n  if (arguments.length === 1 && !is.Array(points) && is.Object(points)) {\n    //if its an options object\n    bernsteinPoly = bernsteinPoly || points.bernsteinPoly;\n    tightness = tightness || points.tightness;\n    points = points.points;\n  }\n\n  var i = 0,\n      l;\n  this.pointList = [];\n\n  if (typeof tightness !== 'number') {\n    tightness = Spline2D.DEFAULT_TIGHTNESS;\n  }\n\n  this.setTightness(tightness); //this may be undefined\n\n  this.bernstein = bernsteinPoly;\n\n  if (points !== undefined) {\n    for (i = 0, l = points.length; i < l; i++) {\n      this.add(points[i].copy());\n    }\n  }\n\n  this.coeffA = [];\n  this.delta = [];\n  this.bi = [];\n\n  for (i = 0; i < this.numP; i++) {\n    this.coeffA[i] = new Vec2D();\n    this.delta[i] = new Vec2D();\n    this.bi[i] = 0;\n  }\n\n  this.bi = [];\n};\n\nSpline2D.prototype = {\n  add: function (p) {\n    this.pointList.push(p.copy());\n    this.numP = this.pointList.length;\n    return this;\n  },\n  computeVertices: function (res) {\n    this.updateCoefficients();\n\n    if (res < 1) {\n      res = 1;\n    }\n\n    res++;\n\n    if (this.bernstein === undefined || this.bernstein.resolution != res) {\n      this.bernstein = new BernsteinPolynomial(res);\n    }\n\n    var bst = this.bernstein;\n    this.findCPoints();\n    var deltaP = new Vec2D();\n    var deltaQ = new Vec2D();\n    res--;\n    var verticeCount = (this.numP - 1) * res + 1;\n\n    if (typeof this.vertices == 'undefined' || this.vertices.length != verticeCount) {\n      this.vertices = Array.apply(null, Array(verticeCount)).map(function () {\n        return new Vec2D();\n      });\n    }\n\n    var vertexIdx = 0;\n\n    for (var i = 0; i < this.numP - 1; i++) {\n      var p = this.points[i];\n      var q = this.points[i + 1];\n      deltaP.x = this.delta[i].x + p.x;\n      deltaP.y = this.delta[i].y + p.y;\n      deltaQ.x = q.x - this.delta[i + 1].x;\n      deltaQ.y = q.y - this.delta[i + 1].y;\n\n      for (var k = 0; k < res; k++) {\n        var x = p.x * bst.b0[k] + deltaP.x * bst.b1[k] + deltaQ.x * bst.b2[k] + q.x * bst.b3[k];\n        var y = p.y * bst.b0[k] + deltaP.y * bst.b1[k] + deltaQ.y * bst.b2[k] + q.y * bst.b3[k];\n        this.vertices[vertexIdx].x = x;\n        this.vertices[vertexIdx].y = y;\n        vertexIdx++;\n      }\n    }\n\n    this.vertices[vertexIdx].x = this.vertices[vertexIdx - 1].x;\n    this.vertices[vertexIdx].y = this.vertices[vertexIdx - 1].y;\n    return this.vertices;\n  },\n  findCPoints: function () {\n    this.bi[1] = -0.25;\n    var i, p0, p2, d0;\n    p0 = this.pointList[0];\n    p2 = this.pointList[2];\n    d0 = this.delta[0];\n    this.coeffA[1].x = (p2.x - p0.x - d0.x) * this.tightness;\n    this.coeffA[1].y = (p2.y - p0.y - d0.y) * this.tightness;\n\n    for (i = 2; i < this.numP - 1; i++) {\n      this.bi[i] = -1 / (this.invTightness + this.bi[i - 1]);\n      this.coeffA[i].x = -(this.points[i + 1].x - this.points[i - 1].x - this.coeffA[i - 1].x) * this.bi[i];\n      this.coeffA[i].y = -(this.points[i + 1].y - this.points[i - 1].y - this.coeffA[i - 1].y) * this.bi[i];\n    }\n\n    for (i = this.numP - 2; i > 0; i--) {\n      this.delta[i].x = this.coeffA[i].x + this.delta[i + 1].x * this.bi[i];\n      this.delta[i].y = this.coeffA[i].y + this.delta[i + 1].y * this.bi[i];\n    }\n  },\n  getDecimatedVertices: function (step, doAddFinalVertex) {\n    if (doAddFinalVertex === undefined) doAddFinalVertex = true;\n\n    if (this.vertices === undefined || this.vertices.length < 2) {\n      this.computeVertices(Spline2D.DEFAULT_RES);\n    }\n\n    var arcLen = this.getEstimatedArcLength();\n    var uniform = [];\n    var delta = step / arcLen;\n    var currIdx = 0;\n\n    for (var t = 0; t < 1.0; t += delta) {\n      var currT = t * arcLen;\n\n      while (currT >= this.arcLenIndex[currIdx]) {\n        currIdx++;\n      }\n\n      var p = this.vertices[currIdx - 1];\n      var q = this.vertices[currIdx];\n      var frac = (currT - this.arcLenIndex[currIdx - 1]) / (this.arcLenIndex[currIdx] - this.arcLenIndex[currIdx - 1]);\n      var i = p.interpolateTo(q, frac);\n      uniform.push(i);\n    }\n\n    if (doAddFinalVertex) {\n      uniform.push(this.vertices[this.vertices.length - 1]);\n    }\n\n    return uniform;\n  },\n  getEstimatedArcLength: function () {\n    var len;\n    var arcLen = 0;\n\n    if (this.arcLenIndex === undefined || this.arcLenIndex !== undefined && this.arcLenIndex.length != this.vertices.length) {\n      this.arcLenIndex = [0];\n      len = this.vertices.length;\n    } else {\n      len = this.arcLenIndex.length;\n    }\n\n    for (var i = 1; i < len; i++) {\n      var p = this.vertices[i - 1];\n      var q = this.vertices[i];\n      arcLen += p.distanceTo(q);\n      this.arcLenIndex[i] = arcLen;\n    }\n\n    return arcLen;\n  },\n  getNumPoints: function () {\n    return this.numP;\n  },\n  getPointList: function () {\n    return this.pointList;\n  },\n  getTightness: function () {\n    return this.tightness;\n  },\n  setPointList: function (plist) {\n    this.pointList = plist.slice(0);\n    return this;\n  },\n  setTightness: function (tight) {\n    this.tightness = tight;\n    this.invTightness = 1 / this.tightness;\n    return this;\n  },\n  updateCoefficients: function () {\n    this.numP = this.pointList.length;\n\n    if (this.points === undefined || this.points !== undefined && this.points.length != this.numP) {\n      this.coeffA = [];\n      this.delta = [];\n      this.bi = [];\n\n      for (var i = 0; i < this.numP; i++) {\n        this.coeffA[i] = new Vec2D();\n        this.delta[i] = new Vec2D();\n      }\n\n      this.setTightness(this.tightness);\n    }\n\n    this.points = this.pointList.slice(0);\n  }\n};\nSpline2D.DEFAULT_TIGHTNESS = 0.25;\nSpline2D.DEFAULT_RES = 16;\nmodule.exports = Spline2D;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/geom/Spline2D.js"],"names":["Vec2D","require","is","BernsteinPolynomial","Spline2D","points","bernsteinPoly","tightness","arguments","length","Array","Object","i","l","pointList","DEFAULT_TIGHTNESS","setTightness","bernstein","undefined","add","copy","coeffA","delta","bi","numP","prototype","p","push","computeVertices","res","updateCoefficients","resolution","bst","findCPoints","deltaP","deltaQ","verticeCount","vertices","apply","map","vertexIdx","q","x","y","k","b0","b1","b2","b3","p0","p2","d0","invTightness","getDecimatedVertices","step","doAddFinalVertex","DEFAULT_RES","arcLen","getEstimatedArcLength","uniform","currIdx","t","currT","arcLenIndex","frac","interpolateTo","len","distanceTo","getNumPoints","getPointList","getTightness","setPointList","plist","slice","tight","module","exports"],"mappings":"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","sourcesContent":["var Vec2D = require('./Vec2D');\nvar is = require('../internals/is');\nvar BernsteinPolynomial = require('./BernsteinPolynomial');\n\n/**\n * @class\n * @member toxi\n * @param {Vec2D[]} points array of Vec2D's\n * @param {BernsteinPolynomial} [bernsteinPoly]\n */\nvar\tSpline2D = function(points, bernsteinPoly, tightness){\n\tif( arguments.length === 1 && !is.Array( points ) && is.Object(points)){\n\t\t//if its an options object\n\t\tbernsteinPoly = bernsteinPoly || points.bernsteinPoly;\n\t\ttightness = tightness || points.tightness;\n\t\tpoints = points.points;\n\t}\n\tvar i = 0, l;\n\tthis.pointList = [];\n\tif( typeof tightness !== 'number' ){\n\t\ttightness = Spline2D.DEFAULT_TIGHTNESS;\n\t}\n\tthis.setTightness(tightness);\n\t//this may be undefined\n\tthis.bernstein = bernsteinPoly;\n\tif( points !== undefined ){\n\t\tfor(i = 0, l = points.length; i<l; i++){\n\t\t\tthis.add( points[i].copy() );\n\t\t}\n\t}\n\tthis.coeffA = [];\n\tthis.delta = [];\n\tthis.bi = [];\n\tfor (i = 0; i < this.numP; i++) {\n\t\tthis.coeffA[i] = new Vec2D();\n\t\tthis.delta[i] = new Vec2D();\n\t\tthis.bi[i] = 0;\n\t}\n\tthis.bi = [];\n};\n\n\nSpline2D.prototype = {\n\tadd: function(p){\n\t\tthis.pointList.push(p.copy());\n\t\tthis.numP = this.pointList.length;\n\t\treturn this;\n\t},\n\n\n\tcomputeVertices: function(res){\n\t\tthis.updateCoefficients();\n        if( res < 1 ){\n            res = 1;\n        }\n        res++;\n\t\tif (this.bernstein === undefined || this.bernstein.resolution != res) {\n\t\t\tthis.bernstein = new BernsteinPolynomial(res);\n\t\t}\n\t\tvar bst = this.bernstein;\n\t\tthis.findCPoints();\n\t\tvar deltaP = new Vec2D();\n\t\tvar deltaQ = new Vec2D();\n        res--;\n        var verticeCount = (this.numP - 1) * res + 1;\n        if ( typeof(this.vertices) == 'undefined' || this.vertices.length != verticeCount ) {\n        \tthis.vertices = Array.apply( null, Array( verticeCount ) ).map( function () { return new Vec2D(); } );\n        }\n\t\tvar vertexIdx = 0;\n\t\tfor (var i = 0; i < this.numP - 1; i++) {\n\t\t\tvar p = this.points[i];\n\t\t\tvar q = this.points[i + 1];\n\t\t\tdeltaP.x = this.delta[i].x + p.x;\n\t\t\tdeltaP.y = this.delta[i].y + p.y;\n\t\t\tdeltaQ.x = q.x - this.delta[i + 1].x;\n\t\t\tdeltaQ.y = q.y - this.delta[i + 1].y;\n\n\t\t\tfor (var k = 0; k < res; k++) {\n\t\t\t\tvar x = p.x * bst.b0[k] + deltaP.x * bst.b1[k] +\n\t\t\t\tdeltaQ.x * bst.b2[k] +\n\t\t\t\tq.x * bst.b3[k];\n\t\t\t\tvar y = p.y * bst.b0[k] + deltaP.y * bst.b1[k] +\n\t\t\t\tdeltaQ.y * bst.b2[k] +\n\t\t\t\tq.y * bst.b3[k];\n\t\t\t\tthis.vertices[ vertexIdx ].x = x;\n\t\t\t\tthis.vertices[ vertexIdx ].y = y;\n\t\t\t\tvertexIdx++;\n\t\t\t}\n\t\t}\n\t\tthis.vertices[ vertexIdx ].x = this.vertices[ vertexIdx - 1 ].x;\n\t\tthis.vertices[ vertexIdx ].y = this.vertices[ vertexIdx - 1 ].y;\n\t\treturn this.vertices;\n\t},\n\n\tfindCPoints: function(){\n\t\tthis.bi[1] = -0.25;\n\t\tvar i, p0, p2, d0;\n\t\tp0 = this.pointList[0];\n\t\tp2 = this.pointList[2];\n\t\td0 = this.delta[0];\n\t\tthis.coeffA[1].x = (p2.x - p0.x - d0.x) * this.tightness;\n\t\tthis.coeffA[1].y = (p2.y - p0.y - d0.y) * this.tightness;\n\n\t\tfor (i = 2; i < this.numP - 1; i++) {\n\t\t\tthis.bi[i] = -1 / (this.invTightness + this.bi[i - 1]);\n\t\t\tthis.coeffA[i].x = -(this.points[i + 1].x - this.points[i - 1].x - this.coeffA[i - 1].x) *this.bi[i];\n\t\t\tthis.coeffA[i].y = -(this.points[i + 1].y - this.points[i - 1].y - this.coeffA[i - 1].y) *this.bi[i];\n\t\t}\n\t\tfor (i = this.numP - 2; i > 0; i--) {\n\t\t\tthis.delta[i].x = this.coeffA[i].x + this.delta[i + 1].x * this.bi[i];\n\t\t\tthis.delta[i].y = this.coeffA[i].y + this.delta[i + 1].y * this.bi[i];\n\t\t}\n\t},\n\n\tgetDecimatedVertices: function(step,doAddFinalVertex){\n\t\tif(doAddFinalVertex === undefined)doAddFinalVertex = true;\n\t\tif(this.vertices === undefined || this.vertices.length < 2){\n\t\t\tthis.computeVertices(Spline2D.DEFAULT_RES);\n\t\t}\n\t\tvar arcLen = this.getEstimatedArcLength();\n\t\tvar uniform = [];\n\t\tvar delta = step / arcLen;\n\t\tvar currIdx = 0;\n\t\tfor(var t =0; t<1.0; t+= delta){\n\t\t\tvar currT = t * arcLen;\n\t\t\twhile(currT >= this.arcLenIndex[currIdx]){\n\t\t\t\tcurrIdx++;\n\t\t\t}\n\t\t\tvar p = this.vertices[currIdx - 1];\n\t\t\tvar q = this.vertices[currIdx];\n\t\t\tvar frac = ((currT - this.arcLenIndex[currIdx - 1]) / (this.arcLenIndex[currIdx] - this.arcLenIndex[currIdx - 1]));\n\n\t\t\tvar i = p.interpolateTo(q,frac);\n\t\t\tuniform.push(i);\n\t\t}\n\t\tif(doAddFinalVertex){\n\t\t\tuniform.push(this.vertices[this.vertices.length-1]);\n\t\t}\n\t\treturn uniform;\n\t},\n\n\n\tgetEstimatedArcLength: function(){\n\t\tvar len;\n\t\tvar arcLen = 0;\n\n\t\tif(this.arcLenIndex === undefined || (this.arcLenIndex !== undefined && this.arcLenIndex.length != this.vertices.length)){\n\t\t\tthis.arcLenIndex = [0];\n\t\t\tlen = this.vertices.length;\n\t\t}\n\t\telse {\n\t\t\tlen = this.arcLenIndex.length;\n\t\t}\n\n\t\tfor(var i=1;i<len;i++){\n\t\t\tvar p = this.vertices[i-1];\n\t\t\tvar q = this.vertices[i];\n\t\t\tarcLen += p.distanceTo(q);\n\t\t\tthis.arcLenIndex[i] = arcLen;\n\t\t}\n\n\t\treturn arcLen;\n\t},\n\n\n\tgetNumPoints: function(){\n\t\treturn this.numP;\n\t},\n\n\tgetPointList: function(){\n\t\treturn this.pointList;\n\t},\n\n\tgetTightness: function(){\n\t\treturn this.tightness;\n\t},\n\n\tsetPointList: function(plist){\n\t\tthis.pointList =plist.slice(0);\n\t\treturn this;\n\t},\n\n\tsetTightness: function(tight){\n\t\tthis.tightness = tight;\n\t\tthis.invTightness = 1 / this.tightness;\n\t\treturn this;\n\t},\n\n\tupdateCoefficients: function(){\n\t\tthis.numP = this.pointList.length;\n\t\tif(this.points === undefined || (this.points !== undefined && this.points.length != this.numP)) {\n\t\t\tthis.coeffA = [];\n\t\t\tthis.delta = [];\n\t\t\tthis.bi = [];\n\t\t\tfor(var i=0;i<this.numP; i++){\n\t\t\t\tthis.coeffA[i] = new Vec2D();\n\t\t\t\tthis.delta[i] = new Vec2D();\n\t\t\t}\n\t\t\tthis.setTightness(this.tightness);\n\t\t}\n\t\tthis.points = this.pointList.slice(0);\n\t}\n\n};\n\nSpline2D.DEFAULT_TIGHTNESS = 0.25;\nSpline2D.DEFAULT_RES = 16;\n\nmodule.exports = Spline2D;\n\n"]},"metadata":{},"sourceType":"script"}