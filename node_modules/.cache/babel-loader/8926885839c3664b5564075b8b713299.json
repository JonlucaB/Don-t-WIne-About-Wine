{"ast":null,"code":"var strategies = require('./strategies');\n\nvar ColorList = require('../ColorList');\n\nvar getName = function () {\n  return 'tetrad';\n},\n    adjust = function (c) {\n  return c[c.brightness() < 0.5 ? 'lighten' : 'darken'](0.2);\n};\n/**\n* Implements the <a href=\n* \"http://www.tigercolor.com/color-lab/color-theory/color-theory-intro.htm#rectangle\"\n* >tetradic color scheme</a> to create 4 compatible colors for the given one.\n*/\n\n\nmodule.exports = strategies.create('TetradTheory',\n/**\n* Constructs a new instance with the given color offset angle\n* @param {Number} hue rotation angle in degrees\n*/\nfunction (theta) {\n  this.theta = typeof theta === 'number' ? theta : 90;\n}, {\n  createListFromColor: function (src) {\n    var colors = new ColorList(src);\n    colors.add(adjust(src.getRotatedRYB(this.theta)));\n    colors.add(adjust(src.getRotatedRYB(this.theta * 2)));\n    colors.add(src.getRotatedRYB(this.theta * 3).lighten(0.1));\n    return colors;\n  },\n  getName: getName,\n  toString: getName\n});","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/color/theory/TetradTheoryStrategy.js"],"names":["strategies","require","ColorList","getName","adjust","c","brightness","module","exports","create","theta","createListFromColor","src","colors","add","getRotatedRYB","lighten","toString"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,cAAD,CAAvB;;AAEI,IAAIE,OAAO,GAAG,YAAU;AAAE,SAAO,QAAP;AAAkB,CAA5C;AAAA,IACIC,MAAM,GAAG,UAAUC,CAAV,EAAa;AAClB,SAAOA,CAAC,CAAEA,CAAC,CAACC,UAAF,KAAiB,GAAjB,GAAuB,SAAvB,GAAmC,QAArC,CAAD,CAAgD,GAAhD,CAAP;AACH,CAHL;AAIA;AACJ;AACA;AACA;AACA;;;AACIC,MAAM,CAACC,OAAP,GAAiBR,UAAU,CAACS,MAAX,CAAkB,cAAlB;AACb;AACR;AACA;AACA;AACQ,UAAUC,KAAV,EAAiB;AACb,OAAKA,KAAL,GAAa,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,EAAjD;AACH,CAPY,EAOV;AACHC,EAAAA,mBAAmB,EAAE,UAAUC,GAAV,EAAe;AAChC,QAAIC,MAAM,GAAG,IAAIX,SAAJ,CAAcU,GAAd,CAAb;AACAC,IAAAA,MAAM,CAACC,GAAP,CAAYV,MAAM,CAACQ,GAAG,CAACG,aAAJ,CAAkB,KAAKL,KAAvB,CAAD,CAAlB;AACAG,IAAAA,MAAM,CAACC,GAAP,CAAYV,MAAM,CAACQ,GAAG,CAACG,aAAJ,CAAkB,KAAKL,KAAL,GAAW,CAA7B,CAAD,CAAlB;AACAG,IAAAA,MAAM,CAACC,GAAP,CAAYF,GAAG,CAACG,aAAJ,CAAkB,KAAKL,KAAL,GAAW,CAA7B,EAAgCM,OAAhC,CAAwC,GAAxC,CAAZ;AACA,WAAOH,MAAP;AACH,GAPE;AAQHV,EAAAA,OAAO,EAAEA,OARN;AASHc,EAAAA,QAAQ,EAAEd;AATP,CAPU,CAAjB","sourcesContent":["var strategies = require('./strategies');\nvar ColorList = require('../ColorList');\n\n    var getName = function(){ return 'tetrad'; },\n        adjust = function( c ){\n            return c[ c.brightness() < 0.5 ? 'lighten' : 'darken'](0.2);\n        };\n    /**\n    * Implements the <a href=\n    * \"http://www.tigercolor.com/color-lab/color-theory/color-theory-intro.htm#rectangle\"\n    * >tetradic color scheme</a> to create 4 compatible colors for the given one.\n    */\n    module.exports = strategies.create('TetradTheory',\n        /**\n        * Constructs a new instance with the given color offset angle\n        * @param {Number} hue rotation angle in degrees\n        */\n        function( theta ){\n            this.theta = typeof theta === 'number' ? theta : 90;\n        }, {\n        createListFromColor: function( src ){\n            var colors = new ColorList(src);\n            colors.add( adjust(src.getRotatedRYB(this.theta)) );\n            colors.add( adjust(src.getRotatedRYB(this.theta*2)) );\n            colors.add( src.getRotatedRYB(this.theta*3).lighten(0.1));\n            return colors;\n        },\n        getName: getName,\n        toString: getName\n    });\n\n"]},"metadata":{},"sourceType":"script"}