{"ast":null,"code":"var each = require('./each'); // {Function} keyGeneratorFunction - key to use to return the identifier\n\n\nvar LinkedMap = function (keyGeneratorFunction) {\n  this.__list = [];\n  this.__map = {};\n\n  if (typeof keyGeneratorFunction === 'function') {\n    this.generateKey = keyGeneratorFunction;\n  }\n};\n\nLinkedMap.prototype = {\n  each: function (fn) {\n    each(this.__map, fn);\n  },\n  get: function (id_or_val) {\n    var result = this.__map[id_or_val];\n\n    if (result === undefined) {\n      id_or_val = this.generateKey(id_or_val);\n      result = this.__map[id_or_val];\n    }\n\n    return result;\n  },\n  generateKey: function (key) {\n    return key.toString();\n  },\n  getArray: function () {\n    return this.__list;\n  },\n  has: function (id_or_val) {\n    var self = this;\n\n    var _has = function (id) {\n      return self.__map[id] !== undefined;\n    };\n\n    if (_has(id_or_val)) {\n      return true;\n    }\n\n    if (this.__map[id]) {\n      return true;\n    }\n\n    return this.__map[this.generateKey(id_or_val)];\n  },\n  put: function (id, val) {\n    id = this.generateKey(id);\n    this.__map[id] = val;\n\n    this.__list.push(val);\n  },\n  remove: function (val) {\n    val = this.get(val);\n    var id = this.generateKey(val);\n    delete this.__map[id];\n    return this.__list.splice(this.__list.indexOf(val), 1)[0];\n  },\n  size: function () {\n    return this.__list.length;\n  },\n  values: function () {\n    return this.__list.slice(0);\n  }\n};\nmodule.exports = LinkedMap;","map":{"version":3,"sources":["C:/Users/alfor/Documents/GitHub/Don-t-WIne-About-Wine/node_modules/toxiclibsjs/internals/LinkedMap.js"],"names":["each","require","LinkedMap","keyGeneratorFunction","__list","__map","generateKey","prototype","fn","get","id_or_val","result","undefined","key","toString","getArray","has","self","_has","id","put","val","push","remove","splice","indexOf","size","length","values","slice","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB,C,CACI;;;AACA,IAAIC,SAAS,GAAG,UAAUC,oBAAV,EAAgC;AAC5C,OAAKC,MAAL,GAAc,EAAd;AACA,OAAKC,KAAL,GAAa,EAAb;;AACA,MAAI,OAAOF,oBAAP,KAAgC,UAApC,EAAgD;AAC5C,SAAKG,WAAL,GAAmBH,oBAAnB;AACH;AACJ,CAND;;AAUAD,SAAS,CAACK,SAAV,GAAsB;AAClBP,EAAAA,IAAI,EAAE,UAAUQ,EAAV,EAAc;AAChBR,IAAAA,IAAI,CAAC,KAAKK,KAAN,EAAaG,EAAb,CAAJ;AACH,GAHiB;AAIlBC,EAAAA,GAAG,EAAE,UAAUC,SAAV,EAAqB;AACtB,QAAIC,MAAM,GAAG,KAAKN,KAAL,CAAWK,SAAX,CAAb;;AAEA,QAAIC,MAAM,KAAKC,SAAf,EAA0B;AACtBF,MAAAA,SAAS,GAAG,KAAKJ,WAAL,CAAkBI,SAAlB,CAAZ;AACAC,MAAAA,MAAM,GAAG,KAAKN,KAAL,CAAWK,SAAX,CAAT;AACH;;AACD,WAAOC,MAAP;AACH,GAZiB;AAalBL,EAAAA,WAAW,EAAE,UAAUO,GAAV,EAAe;AAAE,WAAOA,GAAG,CAACC,QAAJ,EAAP;AAAwB,GAbpC;AAclBC,EAAAA,QAAQ,EAAE,YAAU;AAChB,WAAO,KAAKX,MAAZ;AACH,GAhBiB;AAiBlBY,EAAAA,GAAG,EAAE,UAAUN,SAAV,EAAqB;AACtB,QAAIO,IAAI,GAAG,IAAX;;AACA,QAAIC,IAAI,GAAG,UAAUC,EAAV,EAAc;AACrB,aAASF,IAAI,CAACZ,KAAL,CAAYc,EAAZ,MAAqBP,SAA9B;AACH,KAFD;;AAGA,QAAIM,IAAI,CAAER,SAAF,CAAR,EAAuB;AACnB,aAAO,IAAP;AACH;;AAED,QAAG,KAAKL,KAAL,CAAWc,EAAX,CAAH,EAAkB;AACd,aAAO,IAAP;AACH;;AAED,WAAO,KAAKd,KAAL,CAAW,KAAKC,WAAL,CAAkBI,SAAlB,CAAX,CAAP;AACH,GA/BiB;AAgClBU,EAAAA,GAAG,EAAE,UAAUD,EAAV,EAAcE,GAAd,EAAmB;AACpBF,IAAAA,EAAE,GAAG,KAAKb,WAAL,CAAkBa,EAAlB,CAAL;AACA,SAAKd,KAAL,CAAWc,EAAX,IAAiBE,GAAjB;;AACA,SAAKjB,MAAL,CAAYkB,IAAZ,CAAkBD,GAAlB;AACH,GApCiB;AAqClBE,EAAAA,MAAM,EAAE,UAAUF,GAAV,EAAe;AACnBA,IAAAA,GAAG,GAAG,KAAKZ,GAAL,CAAUY,GAAV,CAAN;AACA,QAAIF,EAAE,GAAG,KAAKb,WAAL,CAAiBe,GAAjB,CAAT;AACA,WAAO,KAAKhB,KAAL,CAAWc,EAAX,CAAP;AACA,WAAO,KAAKf,MAAL,CAAYoB,MAAZ,CAAoB,KAAKpB,MAAL,CAAYqB,OAAZ,CAAoBJ,GAApB,CAApB,EAA8C,CAA9C,EAAiD,CAAjD,CAAP;AACH,GA1CiB;AA2ClBK,EAAAA,IAAI,EAAE,YAAU;AACZ,WAAO,KAAKtB,MAAL,CAAYuB,MAAnB;AACH,GA7CiB;AA8ClBC,EAAAA,MAAM,EAAE,YAAU;AACd,WAAO,KAAKxB,MAAL,CAAYyB,KAAZ,CAAkB,CAAlB,CAAP;AACH;AAhDiB,CAAtB;AAmDAC,MAAM,CAACC,OAAP,GAAiB7B,SAAjB","sourcesContent":["var each = require('./each');\n    // {Function} keyGeneratorFunction - key to use to return the identifier\n    var LinkedMap = function( keyGeneratorFunction ){\n        this.__list = [];\n        this.__map = {};\n        if( typeof keyGeneratorFunction === 'function' ){\n            this.generateKey = keyGeneratorFunction;\n        }\n    };\n\n\n\n    LinkedMap.prototype = {\n        each: function( fn ){\n            each(this.__map, fn);\n        },\n        get: function( id_or_val ){\n            var result = this.__map[id_or_val];\n\n            if( result === undefined ){\n                id_or_val = this.generateKey( id_or_val );\n                result = this.__map[id_or_val];\n            }\n            return result;\n        },\n        generateKey: function( key ){ return key.toString(); },\n        getArray: function(){\n            return this.__list;\n        },\n        has: function( id_or_val ){\n            var self = this;\n            var _has = function( id ){\n                return ( self.__map[ id ] !== undefined );\n            };\n            if( _has( id_or_val ) ){\n                return true;\n            }\n\n            if(this.__map[id]){\n                return true;\n            }\n\n            return this.__map[this.generateKey( id_or_val )];\n        },\n        put: function( id, val ){\n            id = this.generateKey( id );\n            this.__map[id] = val;\n            this.__list.push( val );\n        },\n        remove: function( val ){\n            val = this.get( val );\n            var id = this.generateKey(val);\n            delete this.__map[id];\n            return this.__list.splice( this.__list.indexOf(val), 1)[0];\n        },\n        size: function(){\n            return this.__list.length;\n        },\n        values: function(){\n            return this.__list.slice(0);\n        }\n    };\n\n    module.exports = LinkedMap;\n\n"]},"metadata":{},"sourceType":"script"}