{"ast":null,"code":"var strategies = require('./strategies');\n\nvar ColorList = require('../ColorList');\n\nvar wrap = strategies.wrap;\nmodule.exports = strategies.create('Compound', function (flipped) {\n  this._isFlipped = flipped === true;\n}, {\n  createListFromColor: function (src) {\n    var colors = new ColorList(src),\n        direction = this._isFlipped ? -1 : 1,\n        c;\n    c = src.getRotatedRYB(30 * direction);\n    c.setBrightness(wrap(c.brightness(), 0.25, 0.6, 0.25));\n    colors.add(c);\n    c = src.getRotatedRYB(30 * direction);\n    c.setSaturation(wrap(c.saturation(), 0.4, 0.1, 0.4));\n    c.setBrightness(wrap(c.brightness(), 0.4, 0.2, 0.4));\n    colors.add(c);\n    c = src.getRotatedRYB(160 * direction);\n    c.setSaturation(wrap(c.saturation(), 0.25, 0.1, 0.25));\n    c.setBrightness(Math.max(0.2, c.brightness()));\n    colors.add(c);\n    c = src.getRotatedRYB(150 * direction);\n    c.setSaturation(wrap(c.saturation(), 0.1, 0.8, 0.1));\n    c.setBrightness(wrap(c.brightness(), 0.3, 0.6, 0.3));\n    colors.add(c);\n    /* disabled in java: http://hg.postspectacular.com/toxiclibs/src/4cfadbbea3b0bd02e2081e532f44782c5bfd67d7/src.color/toxi/color/theory/CompoundTheoryStrategy.java?at=default#cl-89\n    c = src.getRotatedRYB(150 * direction);\n    c.setSaturation(wrap(c.saturation(), 0.1, 0.8, 0.1));\n    c.setBrightness(wrap(c.brightness(), 0.4, 0.2, 0.4));\n    colors.add(c);*/\n\n    return colors;\n  },\n  isFlipped: function () {\n    return this._isFlipped;\n  },\n  setFlipped: function (state) {\n    this._isFlipped = state;\n  },\n  toString: function () {\n    return 'Compound' + (this.isFlipped() ? \"_flipped\" : \"\");\n  }\n});","map":{"version":3,"sources":["C:/Users/jonlu/node_modules/toxiclibsjs/color/theory/CompoundTheoryStrategy.js"],"names":["strategies","require","ColorList","wrap","module","exports","create","flipped","_isFlipped","createListFromColor","src","colors","direction","c","getRotatedRYB","setBrightness","brightness","add","setSaturation","saturation","Math","max","isFlipped","setFlipped","state","toString"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,cAAD,CAAvB;;AAEI,IAAIE,IAAI,GAAGH,UAAU,CAACG,IAAtB;AAEAC,MAAM,CAACC,OAAP,GAAiBL,UAAU,CAACM,MAAX,CAAkB,UAAlB,EACb,UAAUC,OAAV,EAAmB;AACf,OAAKC,UAAL,GAAkBD,OAAO,KAAK,IAA9B;AACH,CAHY,EAGV;AACHE,EAAAA,mBAAmB,EAAE,UAAUC,GAAV,EAAe;AAChC,QAAIC,MAAM,GAAG,IAAIT,SAAJ,CAAcQ,GAAd,CAAb;AAAA,QACIE,SAAS,GAAG,KAAKJ,UAAL,GAAkB,CAAC,CAAnB,GAAuB,CADvC;AAAA,QAEIK,CAFJ;AAIAA,IAAAA,CAAC,GAAGH,GAAG,CAACI,aAAJ,CAAkB,KAAKF,SAAvB,CAAJ;AACAC,IAAAA,CAAC,CAACE,aAAF,CAAgBZ,IAAI,CAACU,CAAC,CAACG,UAAF,EAAD,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,IAA5B,CAApB;AACAL,IAAAA,MAAM,CAACM,GAAP,CAAWJ,CAAX;AAEAA,IAAAA,CAAC,GAAGH,GAAG,CAACI,aAAJ,CAAkB,KAAKF,SAAvB,CAAJ;AACAC,IAAAA,CAAC,CAACK,aAAF,CAAgBf,IAAI,CAACU,CAAC,CAACM,UAAF,EAAD,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAApB;AACAN,IAAAA,CAAC,CAACE,aAAF,CAAgBZ,IAAI,CAACU,CAAC,CAACG,UAAF,EAAD,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAApB;AACAL,IAAAA,MAAM,CAACM,GAAP,CAAWJ,CAAX;AAEAA,IAAAA,CAAC,GAAGH,GAAG,CAACI,aAAJ,CAAkB,MAAMF,SAAxB,CAAJ;AACAC,IAAAA,CAAC,CAACK,aAAF,CAAgBf,IAAI,CAACU,CAAC,CAACM,UAAF,EAAD,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,IAA5B,CAApB;AACAN,IAAAA,CAAC,CAACE,aAAF,CAAgBK,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcR,CAAC,CAACG,UAAF,EAAd,CAAhB;AACAL,IAAAA,MAAM,CAACM,GAAP,CAAWJ,CAAX;AAEAA,IAAAA,CAAC,GAAGH,GAAG,CAACI,aAAJ,CAAkB,MAAMF,SAAxB,CAAJ;AACAC,IAAAA,CAAC,CAACK,aAAF,CAAgBf,IAAI,CAACU,CAAC,CAACM,UAAF,EAAD,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAApB;AACAN,IAAAA,CAAC,CAACE,aAAF,CAAgBZ,IAAI,CAACU,CAAC,CAACG,UAAF,EAAD,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAApB;AACAL,IAAAA,MAAM,CAACM,GAAP,CAAWJ,CAAX;AAEA;AACZ;AACA;AACA;AACA;;AAEY,WAAOF,MAAP;AACH,GAhCE;AAiCHW,EAAAA,SAAS,EAAE,YAAU;AACjB,WAAO,KAAKd,UAAZ;AACH,GAnCE;AAoCHe,EAAAA,UAAU,EAAE,UAAUC,KAAV,EAAiB;AACzB,SAAKhB,UAAL,GAAkBgB,KAAlB;AACH,GAtCE;AAuCHC,EAAAA,QAAQ,EAAE,YAAU;AAChB,WAAO,cAAc,KAAKH,SAAL,KAAmB,UAAnB,GAAgC,EAA9C,CAAP;AACH;AAzCE,CAHU,CAAjB","sourcesContent":["var strategies = require('./strategies');\nvar ColorList = require('../ColorList');\n\n    var wrap = strategies.wrap;\n\n    module.exports = strategies.create('Compound',\n        function( flipped ){\n            this._isFlipped = flipped === true;\n        }, {\n        createListFromColor: function( src ){\n            var colors = new ColorList(src),\n                direction = this._isFlipped ? -1 : 1,\n                c;\n\n            c = src.getRotatedRYB(30 * direction);\n            c.setBrightness(wrap(c.brightness(), 0.25, 0.6, 0.25));\n            colors.add(c);\n\n            c = src.getRotatedRYB(30 * direction);\n            c.setSaturation(wrap(c.saturation(), 0.4, 0.1, 0.4));\n            c.setBrightness(wrap(c.brightness(), 0.4, 0.2, 0.4));\n            colors.add(c);\n\n            c = src.getRotatedRYB(160 * direction);\n            c.setSaturation(wrap(c.saturation(), 0.25, 0.1, 0.25));\n            c.setBrightness(Math.max(0.2, c.brightness()));\n            colors.add(c);\n\n            c = src.getRotatedRYB(150 * direction);\n            c.setSaturation(wrap(c.saturation(), 0.1, 0.8, 0.1));\n            c.setBrightness(wrap(c.brightness(), 0.3, 0.6, 0.3));\n            colors.add(c);\n\n            /* disabled in java: http://hg.postspectacular.com/toxiclibs/src/4cfadbbea3b0bd02e2081e532f44782c5bfd67d7/src.color/toxi/color/theory/CompoundTheoryStrategy.java?at=default#cl-89\n            c = src.getRotatedRYB(150 * direction);\n            c.setSaturation(wrap(c.saturation(), 0.1, 0.8, 0.1));\n            c.setBrightness(wrap(c.brightness(), 0.4, 0.2, 0.4));\n            colors.add(c);*/\n\n            return colors;\n        },\n        isFlipped: function(){\n            return this._isFlipped;\n        },\n        setFlipped: function( state ){\n            this._isFlipped = state;\n        },\n        toString: function(){\n            return 'Compound' + (this.isFlipped() ? \"_flipped\" : \"\");\n        }\n    });\n\n\n"]},"metadata":{},"sourceType":"script"}